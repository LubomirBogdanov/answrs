
./debug/main.o:     file format elf32-microblazeel


Disassembly of section .text:

00000000 <my_func_3>:
#include "sleep.h"
#include "autoconf.h"

extern float asm_rms(float dig3, float dig2, float dig1, float dig0);

void my_func_3(void){
   0:	3021ffec 	addik	r1, r1, -20
   4:	fa610010 	swi	r19, r1, 16
   8:	12610000 	addk	r19, r1, r0
	volatile int a = 3, b = 30, c;
   c:	30600003 	addik	r3, r0, 3
  10:	f8730004 	swi	r3, r19, 4
  14:	3060001e 	addik	r3, r0, 30
  18:	f8730008 	swi	r3, r19, 8

	c = a + b;
  1c:	e8930004 	lwi	r4, r19, 4
  20:	e8730008 	lwi	r3, r19, 8
  24:	10641800 	addk	r3, r4, r3
  28:	f873000c 	swi	r3, r19, 12
}
  2c:	80000000 	or	r0, r0, r0
  30:	10330000 	addk	r1, r19, r0
  34:	ea610010 	lwi	r19, r1, 16
  38:	30210014 	addik	r1, r1, 20
  3c:	b60f0008 	rtsd	r15, 8
  40:	80000000 	or	r0, r0, r0

00000044 <my_func_2>:

void my_func_2(void){
  44:	3021ffec 	addik	r1, r1, -20
  48:	f9e10000 	swi	r15, r1, 0
  4c:	fa610010 	swi	r19, r1, 16
  50:	12610000 	addk	r19, r1, r0
	volatile int a = 2, b = 20, c;
  54:	30600002 	addik	r3, r0, 2
  58:	f8730004 	swi	r3, r19, 4
  5c:	30600014 	addik	r3, r0, 20
  60:	f8730008 	swi	r3, r19, 8

	c = a + b;
  64:	e8930004 	lwi	r4, r19, 4
  68:	e8730008 	lwi	r3, r19, 8
  6c:	10641800 	addk	r3, r4, r3
  70:	f873000c 	swi	r3, r19, 12

	my_func_3();
  74:	b9f4ff8c 	brlid	r15, -116	// 0 <my_func_3>
  78:	80000000 	or	r0, r0, r0
}
  7c:	80000000 	or	r0, r0, r0
  80:	e9e10000 	lwi	r15, r1, 0
  84:	10330000 	addk	r1, r19, r0
  88:	ea610010 	lwi	r19, r1, 16
  8c:	30210014 	addik	r1, r1, 20
  90:	b60f0008 	rtsd	r15, 8
  94:	80000000 	or	r0, r0, r0

00000098 <my_func_1>:

void my_func_1(void){
  98:	3021ffec 	addik	r1, r1, -20
  9c:	f9e10000 	swi	r15, r1, 0
  a0:	fa610010 	swi	r19, r1, 16
  a4:	12610000 	addk	r19, r1, r0
	volatile int a = 1, b = 10, c;
  a8:	30600001 	addik	r3, r0, 1
  ac:	f8730004 	swi	r3, r19, 4
  b0:	3060000a 	addik	r3, r0, 10
  b4:	f8730008 	swi	r3, r19, 8

	c = a + b;
  b8:	e8930004 	lwi	r4, r19, 4
  bc:	e8730008 	lwi	r3, r19, 8
  c0:	10641800 	addk	r3, r4, r3
  c4:	f873000c 	swi	r3, r19, 12

	my_func_2();
  c8:	b9f4ff7c 	brlid	r15, -132	// 44 <my_func_2>
  cc:	80000000 	or	r0, r0, r0
}
  d0:	80000000 	or	r0, r0, r0
  d4:	e9e10000 	lwi	r15, r1, 0
  d8:	10330000 	addk	r1, r19, r0
  dc:	ea610010 	lwi	r19, r1, 16
  e0:	30210014 	addik	r1, r1, 20
  e4:	b60f0008 	rtsd	r15, 8
  e8:	80000000 	or	r0, r0, r0

000000ec <main>:

int main(void){
  ec:	3021ffc8 	addik	r1, r1, -56
  f0:	f9e10000 	swi	r15, r1, 0
  f4:	fa610034 	swi	r19, r1, 52
  f8:	12610000 	addk	r19, r1, r0
	float val3 = 4.002503;
  fc:	b0004080 	imm	16512
 100:	30601481 	addik	r3, r0, 5249
 104:	f873001c 	swi	r3, r19, 28
	float val2 = 4.233456;
 108:	b0004087 	imm	16519
 10c:	30607879 	addik	r3, r0, 30841
 110:	f8730020 	swi	r3, r19, 32
	float val1 = 4.789317;
 114:	b0004099 	imm	16537
 118:	30604216 	addik	r3, r0, 16918
 11c:	f8730024 	swi	r3, r19, 36
	float val0 = 4.220734;
 120:	b0004087 	imm	16519
 124:	30601041 	addik	r3, r0, 4161
 128:	f8730028 	swi	r3, r19, 40
	float my_result;
	volatile int i;
	
    led_init();
 12c:	b0000000 	imm	0
 130:	b9f40000 	brlid	r15, 0
 134:	80000000 	or	r0, r0, r0
    uart_init();
 138:	b0000000 	imm	0
 13c:	b9f40000 	brlid	r15, 0
 140:	80000000 	or	r0, r0, r0

	my_result = asm_rms(val3, val2, val1, val0);
 144:	e9130028 	lwi	r8, r19, 40
 148:	e8f30024 	lwi	r7, r19, 36
 14c:	e8d30020 	lwi	r6, r19, 32
 150:	e8b3001c 	lwi	r5, r19, 28
 154:	b0000000 	imm	0
 158:	b9f40000 	brlid	r15, 0
 15c:	80000000 	or	r0, r0, r0
 160:	f873002c 	swi	r3, r19, 44

	//Expected output: 4.321294158
	printf("The result is --> %12.6f\n", my_result);
 164:	e8b3002c 	lwi	r5, r19, 44
 168:	b0000000 	imm	0
 16c:	b9f40000 	brlid	r15, 0
 170:	80000000 	or	r0, r0, r0
 174:	10a40000 	addk	r5, r4, r0
 178:	10830000 	addk	r4, r3, r0
 17c:	10c40000 	addk	r6, r4, r0
 180:	10e50000 	addk	r7, r5, r0
 184:	b0000000 	imm	0
 188:	30a00000 	addik	r5, r0, 0
 18c:	b0000000 	imm	0
 190:	b9f40000 	brlid	r15, 0
 194:	80000000 	or	r0, r0, r0
	
	my_func_1();
 198:	b9f4ff00 	brlid	r15, -256	// 98 <my_func_1>
 19c:	80000000 	or	r0, r0, r0

	while (1){
        	led_set();
 1a0:	b0000000 	imm	0
 1a4:	b9f40000 	brlid	r15, 0
 1a8:	80000000 	or	r0, r0, r0
        	usleep(1000000);
 1ac:	b000000f 	imm	15
 1b0:	30a04240 	addik	r5, r0, 16960
 1b4:	b0000000 	imm	0
 1b8:	b9f40000 	brlid	r15, 0
 1bc:	80000000 	or	r0, r0, r0
        	led_clear();
 1c0:	b0000000 	imm	0
 1c4:	b9f40000 	brlid	r15, 0
 1c8:	80000000 	or	r0, r0, r0
        	usleep(1000000);
 1cc:	b000000f 	imm	15
 1d0:	30a04240 	addik	r5, r0, 16960
 1d4:	b0000000 	imm	0
 1d8:	b9f40000 	brlid	r15, 0
 1dc:	80000000 	or	r0, r0, r0
        	led_set();
 1e0:	b800ffc0 	bri	-64		// 1a0

Disassembly of section .rodata:

00000000 <.rodata>:
   0:	20656854 	addi	r3, r5, 26708
   4:	75736572 		r11, r19, r12
   8:	6920746c 	addli	r9, 29804
   c:	2d2d2073 	rsubic	r9, r13, 8307
  10:	3125203e 	addik	r9, r5, 8254
  14:	66362e32 		r17, r22, r5
  18:	Address 0x0000000000000018 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
void my_func_3(void){
   0:	0000000c 		r0, r0, r0
   4:	ffffffff 	sli	r31, r31, -1
   8:	7f010003 		r24, r1, r0
	volatile int a = 3, b = 30, c;
   c:	00010c0f 		r0, r1, r1
  10:	00000024 		r0, r0, r0
	...
	c = a + b;
  1c:	00000044 		r0, r0, r0
  20:	00000404 		r0, r0, r0
  24:	04140e00 	neg	r0, r20
  28:	00000004 		r0, r0, r0
}
  2c:	04040493 	neg	r0, r4
  30:	0d000000 	rsubc	r8, r0, r0
  34:	00000013 		r0, r0, r0
  38:	00000024 		r0, r0, r0
  3c:	
Disassembly of section .debug_info:

00000000 <.debug_info>:
void my_func_3(void){
   0:	00000215 		r0, r0, r0
   4:	04010005 	neg	r0, r1
   8:	
Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	0b002401 		r24, r0, r4
   4:	030b3e0b 		r24, r11, r7
   8:	0200000e 		r16, r0, r0
	volatile int a = 3, b = 30, c;
   c:	08030034 		r0, r3, r0
  10:	3b01213a 	addikc	r24, r1, 8506
  14:	490b390b 		r8, r11, r7
  18:	00180213 		r0, r24, r0
	c = a + b;
  1c:	00050300 		r0, r5, r0
  20:	00001349 		r0, r0, r2
  24:	03003404 		r24, r0, r6
  28:	01213a0e 		r9, r1, r7
}
  2c:	21390b3b 	addi	r9, r25, 2875
  30:	02134908 		r16, r19, r9
  34:	05000018 	neg	r8, r0
  38:	193f002e 		r9, r31, r0
  3c:	0b3a0e03 		r25, r26, r1
  40:	21390b3b 	addi	r9, r25, 2875
void my_func_2(void){
  44:	3c192706 	rsubikc	r0, r25, 9990
  48:	06000019 	neg	r16, r0
  4c:	193f012e 		r9, r31, r0
  50:	0b3a0e03 		r25, r26, r1
	volatile int a = 2, b = 20, c;
  54:	0b390b3b 		r25, r25, r1
  58:	13491927 		r26, r9, r3
  5c:	1301193c 		r24, r1, r3
  60:	2e070000 	rsubic	r16, r7, 0
	c = a + b;
  64:	03193f01 		r24, r25, r7
  68:	01213a0e 		r9, r1, r7
  6c:	21390b3b 	addi	r9, r25, 2875
  70:	11192706 		r8, r25, r4
	my_func_3();
  74:	40061201 		r0, r6, r2
  78:	01197c18 		r8, r25, r15
}
  7c:	08000013 		r0, r0, r0
  80:	0e250111 		r17, r5, r0
  84:	1f030b13 		r24, r3, r1
  88:	01111f1b 		r8, r17, r3
  8c:	17100612 		r24, r16, r0
  90:	24090000 	rsubi	r0, r9, 0
  94:	3e0b0b00 	rsubikc	r16, r11, 2816
void my_func_1(void){
  98:	0008030b 		r0, r8, r0
  9c:	00350a00 		r1, r21, r1
  a0:	00001349 		r0, r0, r2
  a4:	4900260b 		r8, r0, r4
	volatile int a = 1, b = 10, c;
  a8:	0c000013 		r0, r0, r0
  ac:	0e030016 		r16, r3, r0
  b0:	0b3b0b3a 		r25, r27, r1
  b4:	13490b39 		r26, r9, r1
	c = a + b;
  b8:	0f0d0000 	rsubc	r24, r13, r0
  bc:	490b0b00 		r8, r11, r1
  c0:	0e000013 		r16, r0, r0
  c4:	193f012e 		r9, r31, r0
	my_func_2();
  c8:	0b3a0e03 		r25, r26, r1
  cc:	0b390b3b 		r25, r25, r1
}
  d0:	193c1927 		r9, r28, r3
  d4:	00001301 		r0, r0, r2
  d8:	0000180f 		r0, r0, r3
  dc:	012e1000 	add	r9, r14, r2
  e0:	0e03193f 		r16, r3, r3
  e4:	0b3b0b3a 		r25, r27, r1
  e8:	19270b39 		r9, r7, r1
int main(void){
  ec:	01111349 		r8, r17, r2
  f0:	18400612 		r2, r0, r0
  f4:	1301197c 		r24, r1, r3
  f8:	2e110000 	rsubic	r16, r17, 0
	float val3 = 4.002503;
  fc:	03193f01 		r24, r25, r7
 100:	3b0b3a0e 	addikc	r24, r11, 14862
 104:	270b390b 	rsubi	r24, r11, 14603
	float val2 = 4.233456;
 108:	12011119 		r16, r1, r2
 10c:	7a184006 		r16, r24, r8
 110:	00000019 		r0, r0, r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
void my_func_3(void){
   0:	0000001c 		r0, r0, r0
   4:	00000002 		r0, r0, r0
   8:	00040000 	add	r0, r4, r0
	...
	volatile int a = 3, b = 30, c;
  14:	000001e4 		r0, r0, r0
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
void my_func_3(void){
   0:	000001c7 		r0, r0, r0
   4:	00040005 		r0, r4, r0
   8:	00000053 		r0, r0, r0
	volatile int a = 3, b = 30, c;
   c:	f6010101 	shi	r16, r1, 257
  10:	01000df2 		r8, r0, r1
  14:	00010101 		r0, r1, r0
  18:	00010000 	add	r0, r1, r0
	c = a + b;
  1c:	01010100 	addl	r8, r1, r0
  20:	0006051f 		r0, r6, r0
  24:	00520000 	add	r2, r18, r0
  28:	006e0000 	add	r3, r14, r0
}
  2c:	005e0000 	add	r2, r30, r0
  30:	
Disassembly of section .debug_str:

00000000 <.debug_str>:
void my_func_3(void){
   0:	616f6c66 	muli	r11, r15, 27750
   4:	61760074 	muli	r11, r22, 116
   8:	4700306c 	bsrl	r24, r0, r6
	volatile int a = 3, b = 30, c;
   c:	4320554e 		r25, r0, r10
  10:	31203731 	addik	r9, r0, 14129
  14:	2e322e31 	rsubic	r17, r18, 11825
  18:	6d2d2030 	cget	r9, rfsl0
	c = a + b;
  1c:	64726168 	bslefi	r3, r18, 5, 40
  20:	6f6c662d 	necget	r27, rfsl13
  24:	2d207461 	rsubic	r9, r0, 29793
  28:	2d6c786d 	rsubic	r11, r12, 30829
}
  2c:	616f6c66 	muli	r11, r15, 27750
  30:	6f632d74 	ecaget	r27, rfsl4
  34:	7265766e 		r19, r5, r14
  38:	6d2d2074 	cget	r9, rfsl4
  3c:	662d6c78 	bslefi	r17, r13, 49, 56
  40:	74616f6c 		r3, r1, r13
void my_func_2(void){
  44:	7271732d 		r19, r17, r14
  48:	6d2d2074 	cget	r9, rfsl4
  4c:	7474696c 		r3, r20, r13
  50:	652d656c 	bslefi	r9, r13, 21, 44
	volatile int a = 2, b = 20, c;
  54:	6169646e 	muli	r11, r9, 25710
  58:	6d2d206e 	cget	r9, rfsl14
  5c:	622d6c78 	muli	r17, r13, 27768
  60:	65727261 	bslefi	r11, r18, 9, 33
	c = a + b;
  64:	68732d6c 	andnli	r3, 11628
  68:	20746669 	addi	r3, r20, 26217
  6c:	6c786d2d 	necaget	r3, rfsl13
  70:	7461702d 		r3, r1, r14
	my_func_3();
  74:	6e726574 	necget	r19, rfsl4
  78:	6d6f632d 	ncget	r11, rfsl13
}
  7c:	65726170 	bslefi	r11, r18, 5, 48
  80:	636d2d20 	muli	r27, r13, 11552
  84:	763d7570 		r17, r29, r14
  88:	302e3131 	addik	r1, r14, 12593
  8c:	6e6d2d20 	ecaget	r19, rfsl0
  90:	6c782d6f 	ecaget	r3, rfsl15
  94:	666f732d 	bslefi	r19, r15, 12, 45
void my_func_1(void){
  98:	756d2d74 		r11, r13, r5
  9c:	672d206c 	bslrli	r25, r13, 44
  a0:	304f2d20 	addik	r2, r15, 11552
  a4:	6c737500 	tnecget	r3, rfsl0
	volatile int a = 1, b = 10, c;
  a8:	00706565 		r3, r16, r12
  ac:	74726175 		r3, r18, r12
  b0:	696e695f 		r11, r14, r13
  b4:	656c0074 	bsrli	r11, r12, 52
	c = a + b;
  b8:	65735f64 	bsefi	r11, r19, 61, 36
  bc:	6e750074 	get	r19, rfsl4
  c0:	6e676973 	ncaget	r19, rfsl3
  c4:	63206465 	muli	r25, r0, 25701
	my_func_2();
  c8:	00726168 		r3, r18, r12
  cc:	676e6f6c 	bslefi	r27, r14, 61, 44
}
  d0:	736e7520 		r27, r14, r14
  d4:	656e6769 	bslefi	r11, r14, 29, 41
  d8:	6e692064 	cget	r19, rfsl4
  dc:	68730074 	andnli	r3, 116
  e0:	2074726f 	addi	r3, r20, 29295
  e4:	69736e75 	andnli	r11, 28277
  e8:	64656e67 	bslefi	r3, r5, 57, 39
int main(void){
  ec:	746e6920 		r3, r14, r13
  f0:	6c617600 	tnecget	r3, rfsl0
  f4:	61760031 	muli	r11, r22, 49
  f8:	7600326c 		r16, r0, r6
	float val3 = 4.002503;
  fc:	00336c61 		r1, r19, r13
 100:	5f64656c 		r27, r4, r12
 104:	61656c63 	muli	r11, r5, 27747
	float val2 = 4.233456;
 108:	796d0072 		r11, r13, r0
 10c:	6e75665f 	necget	r19, rfsl15
 110:	00315f63 		r1, r17, r11
	float val1 = 4.789317;
 114:	665f796d 	bslefi	r18, r31, 37, 45
 118:	5f636e75 		r27, r3, r13
 11c:	796d0032 		r11, r13, r0
	float val0 = 4.220734;
 120:	6e75665f 	necget	r19, rfsl15
 124:	00335f63 		r1, r19, r11
 128:	6e69616d 	ncget	r19, rfsl13
    led_init();
 12c:	64656c00 	bslefi	r3, r5, 48, 0
 130:	696e695f 		r11, r14, r13
 134:	6e750074 	get	r19, rfsl4
    uart_init();
 138:	6e676973 	ncaget	r19, rfsl3
 13c:	69206465 	addli	r9, 25701
 140:	6c00746e 	tnecget	r0, rfsl14
	my_result = asm_rms(val3, val2, val1, val0);
 144:	20676e6f 	addi	r3, r7, 28271
 148:	676e6f6c 	bslefi	r27, r14, 61, 44
 14c:	736e7520 		r27, r14, r14
 150:	656e6769 	bslefi	r11, r14, 29, 41
 154:	6e692064 	cget	r19, rfsl4
 158:	6f6c0074 	get	r27, rfsl4
 15c:	6c20676e 	necget	r1, rfsl14
 160:	20676e6f 	addi	r3, r7, 28271
	printf("The result is --> %12.6f\n", my_result);
 164:	00746e69 		r3, r20, r13
 168:	72616863 		r19, r1, r13
 16c:	69727000 	xorli	r11, 28672
 170:	5f66746e 		r27, r6, r14
 174:	6d736100 	ncget	r11, rfsl0
 178:	736d725f 		r27, r13, r14
 17c:	6f687300 	tncget	r27, rfsl0
 180:	69207472 	addli	r9, 29810
 184:	5500746e 		r8, r0, r14
 188:	474e4f4c 		r26, r14, r9
 18c:	6e6f6c00 	necaget	r19, rfsl0
 190:	6e692067 	cget	r19, rfsl7
 194:	6f6c0074 	get	r27, rfsl4
	my_func_1();
 198:	6420676e 	bslefi	r1, r0, 29, 46
 19c:	6c62756f 	tnecget	r3, rfsl15
        	led_set();
 1a0:	69730065 	andnli	r11, 101
 1a4:	64656e67 	bslefi	r3, r5, 57, 39
 1a8:	61686320 	muli	r11, r8, 25376
        	usleep(1000000);
 1ac:	796d0072 		r11, r13, r0
 1b0:	7365725f 		r27, r5, r14
 1b4:	00746c75 		r3, r20, r13

Disassembly of section .debug_line_str:

00000000 <.debug_line_str>:
void my_func_3(void){
   0:	6e697270 	tncget	r19, rfsl0
   4:	682f0074 		r1, r15, r0
   8:	2f656d6f 	rsubic	r27, r5, 28015
	volatile int a = 3, b = 30, c;
   c:	676f626c 	bslefi	r27, r15, 9, 44
  10:	6f6e6164 	ncget	r27, rfsl4
  14:	6f772f76 	ecaget	r27, rfsl6
  18:	70736b72 		r3, r19, r13
	c = a + b;
  1c:	73656361 		r27, r5, r12
  20:	6c69782f 	tncaget	r3, rfsl15
  24:	5f786e69 		r27, r24, r13
  28:	6b726f77 	xorli	r27, 28535
}
  2c:	63617073 	muli	r27, r1, 28787
  30:	30322f65 	addik	r1, r18, 12133
  34:	0033315f 		r1, r19, r6
  38:	2e64656c 	rsubic	r19, r4, 25964
  3c:	69780068 		r11, r24, r0
  40:	79745f6c 		r11, r20, r11
void my_func_2(void){
  44:	2e736570 	rsubic	r19, r19, 25968
  48:	72700068 		r19, r16, r0
  4c:	2e746e69 	rsubic	r19, r20, 28265
  50:	61750068 	muli	r11, r21, 104
	volatile int a = 2, b = 20, c;
  54:	6d007472 	tnecget	r8, rfsl2
  58:	2e6e6961 	rsubic	r19, r14, 26977
  5c:	6e690063 	get	r19, rfsl3
  60:	64756c63 	bslefi	r3, r21, 49, 35
	c = a + b;
  64:	6c730065 	get	r3, rfsl5
  68:	2e706565 	rsubic	r19, r16, 25957
  6c:	656c0068 	bsrli	r11, r12, 40
  70:	61750064 	muli	r11, r21, 100
	my_func_3();
  74:	682e7472 		r1, r14, r14
	...
