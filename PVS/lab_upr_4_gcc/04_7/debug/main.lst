
./debug/main.o:     file format elf32-littlearm


Disassembly of section .text.SCB_EnableICache:

00000000 <SCB_EnableICache>:
/**
  \brief   Enable I-Cache
  \details Turns on I-Cache
  */
__STATIC_INLINE void SCB_EnableICache (void)
{
   0:	b480      	push	{r7}
   2:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
   4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
   8:	f3bf 8f6f 	isb	sy
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
   c:	4b0b      	ldr	r3, [pc, #44]	; (3c <SCB_EnableICache+0x3c>)
   e:	2200      	movs	r2, #0
  10:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
  14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  18:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	4b07      	ldr	r3, [pc, #28]	; (3c <SCB_EnableICache+0x3c>)
  1e:	695b      	ldr	r3, [r3, #20]
  20:	4a06      	ldr	r2, [pc, #24]	; (3c <SCB_EnableICache+0x3c>)
  22:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  26:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
  28:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  2c:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  #endif
}
  30:	bf00      	nop
  32:	46bd      	mov	sp, r7
  34:	f85d 7b04 	ldr.w	r7, [sp], #4
  38:	4770      	bx	lr
  3a:	bf00      	nop
  3c:	e000ed00 	and	lr, r0, r0, lsl #26

Disassembly of section .text.SCB_EnableDCache:

00000000 <SCB_EnableDCache>:
/**
  \brief   Enable D-Cache
  \details Turns on D-Cache
  */
__STATIC_INLINE void SCB_EnableDCache (void)
{
   0:	b480      	push	{r7}
   2:	b085      	sub	sp, #20
   4:	af00      	add	r7, sp, #0
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
   6:	4b1d      	ldr	r3, [pc, #116]	; (7c <SCB_EnableDCache+0x7c>)
   8:	2200      	movs	r2, #0
   a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
   e:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
  12:	4b1a      	ldr	r3, [pc, #104]	; (7c <SCB_EnableDCache+0x7c>)
  14:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
  18:	607b      	str	r3, [r7, #4]

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  1a:	687b      	ldr	r3, [r7, #4]
  1c:	0b5b      	lsrs	r3, r3, #13
  1e:	f3c3 030e 	ubfx	r3, r3, #0, #15
  22:	60fb      	str	r3, [r7, #12]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  24:	687b      	ldr	r3, [r7, #4]
  26:	08db      	lsrs	r3, r3, #3
  28:	f3c3 0309 	ubfx	r3, r3, #0, #10
  2c:	60bb      	str	r3, [r7, #8]
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  2e:	68fb      	ldr	r3, [r7, #12]
  30:	015a      	lsls	r2, r3, #5
  32:	f643 73e0 	movw	r3, #16352	; 0x3fe0
  36:	4013      	ands	r3, r2
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
  38:	68ba      	ldr	r2, [r7, #8]
  3a:	0792      	lsls	r2, r2, #30
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  3c:	490f      	ldr	r1, [pc, #60]	; (7c <SCB_EnableDCache+0x7c>)
  3e:	4313      	orrs	r3, r2
  40:	f8c1 3260 	str.w	r3, [r1, #608]	; 0x260
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  44:	68bb      	ldr	r3, [r7, #8]
  46:	1e5a      	subs	r2, r3, #1
  48:	60ba      	str	r2, [r7, #8]
  4a:	2b00      	cmp	r3, #0
  4c:	d1ef      	bne.n	2e <SCB_EnableDCache+0x2e>
    } while(sets-- != 0U);
  4e:	68fb      	ldr	r3, [r7, #12]
  50:	1e5a      	subs	r2, r3, #1
  52:	60fa      	str	r2, [r7, #12]
  54:	2b00      	cmp	r3, #0
  56:	d1e5      	bne.n	24 <SCB_EnableDCache+0x24>
  58:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  5c:	4b07      	ldr	r3, [pc, #28]	; (7c <SCB_EnableDCache+0x7c>)
  5e:	695b      	ldr	r3, [r3, #20]
  60:	4a06      	ldr	r2, [pc, #24]	; (7c <SCB_EnableDCache+0x7c>)
  62:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  66:	6153      	str	r3, [r2, #20]
  68:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  6c:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
  #endif
}
  70:	bf00      	nop
  72:	3714      	adds	r7, #20
  74:	46bd      	mov	sp, r7
  76:	f85d 7b04 	ldr.w	r7, [sp], #4
  7a:	4770      	bx	lr
  7c:	e000ed00 	and	lr, r0, r0, lsl #26

Disassembly of section .text.systick_handler:

00000000 <systick_handler>:
#include "stm32f769i_discovery.h"
#include "standard_rms.h"

UART_HandleTypeDef uart_init_struct;

void systick_handler(void){
   0:	b580      	push	{r7, lr}
   2:	af00      	add	r7, sp, #0
	HAL_IncTick();
   4:	f7ff fffe 	bl	0 <HAL_IncTick>
}
   8:	bf00      	nop
   a:	bd80      	pop	{r7, pc}

Disassembly of section .text.hal_clocks_init:

00000000 <hal_clocks_init>:
  *            Main regulator output voltage  = Scale1 mode
  *            Flash Latency(WS)              = 7
  * \param  None
  * \return None
  */
void hal_clocks_init(void){
   0:	b580      	push	{r7, lr}
   2:	b096      	sub	sp, #88	; 0x58
   4:	af00      	add	r7, sp, #0
  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  RCC_OscInitTypeDef RCC_OscInitStruct;
  HAL_StatusTypeDef  ret = HAL_OK;
   6:	2300      	movs	r3, #0
   8:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57

  __HAL_RCC_PWR_CLK_ENABLE();
   c:	4b30      	ldr	r3, [pc, #192]	; (d0 <hal_clocks_init+0xd0>)
   e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  10:	4a2f      	ldr	r2, [pc, #188]	; (d0 <hal_clocks_init+0xd0>)
  12:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
  16:	6413      	str	r3, [r2, #64]	; 0x40
  18:	4b2d      	ldr	r3, [pc, #180]	; (d0 <hal_clocks_init+0xd0>)
  1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  1c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
  20:	60bb      	str	r3, [r7, #8]
  22:	68bb      	ldr	r3, [r7, #8]

  //The voltage scaling allows optimizing the power consumption when the device is
  //clocked below the maximum system frequency, to update the voltage scaling value
  //regarding system frequency refer to product datasheet.
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  24:	4b2b      	ldr	r3, [pc, #172]	; (d4 <hal_clocks_init+0xd4>)
  26:	681b      	ldr	r3, [r3, #0]
  28:	4a2a      	ldr	r2, [pc, #168]	; (d4 <hal_clocks_init+0xd4>)
  2a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
  2e:	6013      	str	r3, [r2, #0]
  30:	4b28      	ldr	r3, [pc, #160]	; (d4 <hal_clocks_init+0xd4>)
  32:	681b      	ldr	r3, [r3, #0]
  34:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
  38:	607b      	str	r3, [r7, #4]
  3a:	687b      	ldr	r3, [r7, #4]

  //Enable HSE Oscillator and activate PLL with HSE as source
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  3c:	2301      	movs	r3, #1
  3e:	60fb      	str	r3, [r7, #12]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  40:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  44:	613b      	str	r3, [r7, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  46:	2302      	movs	r3, #2
  48:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  4a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  4e:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLM = 25;
  50:	2319      	movs	r3, #25
  52:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLN = 432;
  54:	f44f 73d8 	mov.w	r3, #432	; 0x1b0
  58:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  5a:	2302      	movs	r3, #2
  5c:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLQ = 9;
  5e:	2309      	movs	r3, #9
  60:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLR = 7;
  62:	2307      	movs	r3, #7
  64:	63fb      	str	r3, [r7, #60]	; 0x3c

  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
  66:	f107 030c 	add.w	r3, r7, #12
  6a:	4618      	mov	r0, r3
  6c:	f7ff fffe 	bl	0 <HAL_RCC_OscConfig>
  70:	4603      	mov	r3, r0
  72:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
  if(ret != HAL_OK){
  76:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
  7a:	2b00      	cmp	r3, #0
  7c:	d000      	beq.n	80 <hal_clocks_init+0x80>
    while(1) { }
  7e:	e7fe      	b.n	7e <hal_clocks_init+0x7e>
  }

  //Activate the OverDrive to reach the 216 MHz Frequency
  ret = HAL_PWREx_EnableOverDrive();
  80:	f7ff fffe 	bl	0 <HAL_PWREx_EnableOverDrive>
  84:	4603      	mov	r3, r0
  86:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
  if(ret != HAL_OK){
  8a:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
  8e:	2b00      	cmp	r3, #0
  90:	d000      	beq.n	94 <hal_clocks_init+0x94>
    while(1) { }
  92:	e7fe      	b.n	92 <hal_clocks_init+0x92>
  }

  //Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 clocks dividers
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
  94:	230f      	movs	r3, #15
  96:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  98:	2302      	movs	r3, #2
  9a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  9c:	2300      	movs	r3, #0
  9e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  a0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
  a4:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
  a6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  aa:	653b      	str	r3, [r7, #80]	; 0x50

  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
  ac:	f107 0340 	add.w	r3, r7, #64	; 0x40
  b0:	2107      	movs	r1, #7
  b2:	4618      	mov	r0, r3
  b4:	f7ff fffe 	bl	0 <HAL_RCC_ClockConfig>
  b8:	4603      	mov	r3, r0
  ba:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
  if(ret != HAL_OK){
  be:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
  c2:	2b00      	cmp	r3, #0
  c4:	d000      	beq.n	c8 <hal_clocks_init+0xc8>
    while(1) { }
  c6:	e7fe      	b.n	c6 <hal_clocks_init+0xc6>
  }
}
  c8:	bf00      	nop
  ca:	3758      	adds	r7, #88	; 0x58
  cc:	46bd      	mov	sp, r7
  ce:	bd80      	pop	{r7, pc}
  d0:	40023800 	andmi	r3, r2, r0, lsl #16
  d4:	40007000 	andmi	r7, r0, r0

Disassembly of section .text.exti0_line_interrupt_handler:

00000000 <exti0_line_interrupt_handler>:

void exti0_line_interrupt_handler(void){
   0:	b580      	push	{r7, lr}
   2:	af00      	add	r7, sp, #0
  HAL_GPIO_EXTI_IRQHandler(USER_BUTTON_PIN);
   4:	2001      	movs	r0, #1
   6:	f7ff fffe 	bl	0 <HAL_GPIO_EXTI_IRQHandler>
}
   a:	bf00      	nop
   c:	bd80      	pop	{r7, pc}

Disassembly of section .text.HAL_GPIO_EXTI_Callback:

00000000 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	af00      	add	r7, sp, #0
   6:	4603      	mov	r3, r0
   8:	80fb      	strh	r3, [r7, #6]
  if (GPIO_Pin == GPIO_PIN_0){
   a:	88fb      	ldrh	r3, [r7, #6]
   c:	2b01      	cmp	r3, #1
   e:	d102      	bne.n	16 <HAL_GPIO_EXTI_Callback+0x16>
    BSP_LED_Toggle(LED2);
  10:	2001      	movs	r0, #1
  12:	f7ff fffe 	bl	0 <BSP_LED_Toggle>
  }
}
  16:	bf00      	nop
  18:	3708      	adds	r7, #8
  1a:	46bd      	mov	sp, r7
  1c:	bd80      	pop	{r7, pc}

Disassembly of section .text.hal_button_init:

00000000 <hal_button_init>:

void hal_button_init(void){
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef gpio_config;

	BSP_LED_Init(LED2);
   6:	2001      	movs	r0, #1
   8:	f7ff fffe 	bl	0 <BSP_LED_Init>
	BSP_LED_Init(LED1);
   c:	2000      	movs	r0, #0
   e:	f7ff fffe 	bl	0 <BSP_LED_Init>

	// Configure PC.13 pin as input floating
	gpio_config.Mode = GPIO_MODE_IT_RISING;
  12:	4b0b      	ldr	r3, [pc, #44]	; (40 <hal_button_init+0x40>)
  14:	60bb      	str	r3, [r7, #8]
	gpio_config.Pull = GPIO_NOPULL;
  16:	2300      	movs	r3, #0
  18:	60fb      	str	r3, [r7, #12]
	gpio_config.Pin = GPIO_PIN_0;
  1a:	2301      	movs	r3, #1
  1c:	607b      	str	r3, [r7, #4]
	HAL_GPIO_Init(GPIOA, &gpio_config);
  1e:	1d3b      	adds	r3, r7, #4
  20:	4619      	mov	r1, r3
  22:	4808      	ldr	r0, [pc, #32]	; (44 <hal_button_init+0x44>)
  24:	f7ff fffe 	bl	0 <HAL_GPIO_Init>
	// Enable and set EXTI line 0 Interrupt to the lowest priority
	HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
  28:	2200      	movs	r2, #0
  2a:	2102      	movs	r1, #2
  2c:	2006      	movs	r0, #6
  2e:	f7ff fffe 	bl	0 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
  32:	2006      	movs	r0, #6
  34:	f7ff fffe 	bl	0 <HAL_NVIC_EnableIRQ>
}
  38:	bf00      	nop
  3a:	3718      	adds	r7, #24
  3c:	46bd      	mov	sp, r7
  3e:	bd80      	pop	{r7, pc}
  40:	10110000 	andsne	r0, r1, r0
  44:	40020000 	andmi	r0, r2, r0

Disassembly of section .text.HAL_UART_MspInit:

00000000 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef *huart){
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	af00      	add	r7, sp, #0
   6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef gpio_init_struct;

  // Enable GPIO TX/RX clock
  __GPIOA_CLK_ENABLE();
   8:	4b1a      	ldr	r3, [pc, #104]	; (74 <HAL_UART_MspInit+0x74>)
   a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   c:	4a19      	ldr	r2, [pc, #100]	; (74 <HAL_UART_MspInit+0x74>)
   e:	f043 0301 	orr.w	r3, r3, #1
  12:	6313      	str	r3, [r2, #48]	; 0x30
  14:	4b17      	ldr	r3, [pc, #92]	; (74 <HAL_UART_MspInit+0x74>)
  16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  18:	f003 0301 	and.w	r3, r3, #1
  1c:	613b      	str	r3, [r7, #16]
  1e:	693b      	ldr	r3, [r7, #16]

  // Enable USART1 clock
  __USART1_CLK_ENABLE();
  20:	4b14      	ldr	r3, [pc, #80]	; (74 <HAL_UART_MspInit+0x74>)
  22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
  24:	4a13      	ldr	r2, [pc, #76]	; (74 <HAL_UART_MspInit+0x74>)
  26:	f043 0310 	orr.w	r3, r3, #16
  2a:	6453      	str	r3, [r2, #68]	; 0x44
  2c:	4b11      	ldr	r3, [pc, #68]	; (74 <HAL_UART_MspInit+0x74>)
  2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
  30:	f003 0310 	and.w	r3, r3, #16
  34:	60fb      	str	r3, [r7, #12]
  36:	68fb      	ldr	r3, [r7, #12]

  //UART TX GPIO pin configuration
  gpio_init_struct.Pin = GPIO_PIN_9;
  38:	f44f 7300 	mov.w	r3, #512	; 0x200
  3c:	617b      	str	r3, [r7, #20]
  gpio_init_struct.Mode = GPIO_MODE_AF_PP;
  3e:	2302      	movs	r3, #2
  40:	61bb      	str	r3, [r7, #24]
  gpio_init_struct.Pull = GPIO_PULLUP;
  42:	2301      	movs	r3, #1
  44:	61fb      	str	r3, [r7, #28]
  gpio_init_struct.Speed = GPIO_SPEED_HIGH;
  46:	2303      	movs	r3, #3
  48:	623b      	str	r3, [r7, #32]
  gpio_init_struct.Alternate = GPIO_AF7_USART1;
  4a:	2307      	movs	r3, #7
  4c:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
  4e:	f107 0314 	add.w	r3, r7, #20
  52:	4619      	mov	r1, r3
  54:	4808      	ldr	r0, [pc, #32]	; (78 <HAL_UART_MspInit+0x78>)
  56:	f7ff fffe 	bl	0 <HAL_GPIO_Init>

  /* UART RX GPIO pin configuration  */
  gpio_init_struct.Pin = GPIO_PIN_10;
  5a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  5e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
  60:	f107 0314 	add.w	r3, r7, #20
  64:	4619      	mov	r1, r3
  66:	4804      	ldr	r0, [pc, #16]	; (78 <HAL_UART_MspInit+0x78>)
  68:	f7ff fffe 	bl	0 <HAL_GPIO_Init>
}
  6c:	bf00      	nop
  6e:	3728      	adds	r7, #40	; 0x28
  70:	46bd      	mov	sp, r7
  72:	bd80      	pop	{r7, pc}
  74:	40023800 	andmi	r3, r2, r0, lsl #16
  78:	40020000 	andmi	r0, r2, r0

Disassembly of section .text.hal_uart_init:

00000000 <hal_uart_init>:

void hal_uart_init(void){
   0:	b580      	push	{r7, lr}
   2:	af00      	add	r7, sp, #0
	uart_init_struct.Instance = USART1;
   4:	4b0d      	ldr	r3, [pc, #52]	; (3c <hal_uart_init+0x3c>)
   6:	4a0e      	ldr	r2, [pc, #56]	; (40 <hal_uart_init+0x40>)
   8:	601a      	str	r2, [r3, #0]
	uart_init_struct.Init.BaudRate = 9600;
   a:	4b0c      	ldr	r3, [pc, #48]	; (3c <hal_uart_init+0x3c>)
   c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
  10:	605a      	str	r2, [r3, #4]
	uart_init_struct.Init.WordLength = UART_WORDLENGTH_8B;
  12:	4b0a      	ldr	r3, [pc, #40]	; (3c <hal_uart_init+0x3c>)
  14:	2200      	movs	r2, #0
  16:	609a      	str	r2, [r3, #8]
	uart_init_struct.Init.StopBits = UART_STOPBITS_1;
  18:	4b08      	ldr	r3, [pc, #32]	; (3c <hal_uart_init+0x3c>)
  1a:	2200      	movs	r2, #0
  1c:	60da      	str	r2, [r3, #12]
	uart_init_struct.Init.Parity = UART_PARITY_NONE;
  1e:	4b07      	ldr	r3, [pc, #28]	; (3c <hal_uart_init+0x3c>)
  20:	2200      	movs	r2, #0
  22:	611a      	str	r2, [r3, #16]
	uart_init_struct.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  24:	4b05      	ldr	r3, [pc, #20]	; (3c <hal_uart_init+0x3c>)
  26:	2200      	movs	r2, #0
  28:	619a      	str	r2, [r3, #24]
	uart_init_struct.Init.Mode = UART_MODE_TX_RX;
  2a:	4b04      	ldr	r3, [pc, #16]	; (3c <hal_uart_init+0x3c>)
  2c:	220c      	movs	r2, #12
  2e:	615a      	str	r2, [r3, #20]

	HAL_UART_Init(&uart_init_struct);
  30:	4802      	ldr	r0, [pc, #8]	; (3c <hal_uart_init+0x3c>)
  32:	f7ff fffe 	bl	0 <HAL_UART_Init>
}
  36:	bf00      	nop
  38:	bd80      	pop	{r7, pc}
  3a:	bf00      	nop
  3c:	00000000 	andeq	r0, r0, r0
  40:	40011000 	andmi	r1, r1, r0

Disassembly of section .rodata:

00000000 <.rodata>:
   0:	204c4148 	subcs	r4, ip, r8, asr #2
   4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
   8:	20656c70 	rsbcs	r6, r5, r0, ror ip
   c:	6e697375 	mcrvs	3, 3, r7, cr9, cr5, {3}
  10:	50472067 	subpl	r2, r7, r7, rrx
  14:	61204f49 			; <UNDEFINED> instruction: 0x61204f49
  18:	5520646e 	strpl	r6, [r0, #-1134]!	; 0xfffffb92
  1c:	0a545241 	beq	1514928 <SCB_EnableICache+0x1514928>
	...

Disassembly of section .text.main:

00000000 <main>:

int main(void){
   0:	b590      	push	{r4, r7, lr}
   2:	b097      	sub	sp, #92	; 0x5c
   4:	af00      	add	r7, sp, #0
	double val3 = 4.002503;
   6:	a43a      	add	r4, pc, #232	; (adr r4, f0 <main+0xf0>)
   8:	e9d4 3400 	ldrd	r3, r4, [r4]
   c:	e9c7 3414 	strd	r3, r4, [r7, #80]	; 0x50
	double val2 = 4.233456;
  10:	a439      	add	r4, pc, #228	; (adr r4, f8 <main+0xf8>)
  12:	e9d4 3400 	ldrd	r3, r4, [r4]
  16:	e9c7 3412 	strd	r3, r4, [r7, #72]	; 0x48
	double val1 = 4.789317;
  1a:	a439      	add	r4, pc, #228	; (adr r4, 100 <main+0x100>)
  1c:	e9d4 3400 	ldrd	r3, r4, [r4]
  20:	e9c7 3410 	strd	r3, r4, [r7, #64]	; 0x40
	double val0 = 4.220734;
  24:	a438      	add	r4, pc, #224	; (adr r4, 108 <main+0x108>)
  26:	e9d4 3400 	ldrd	r3, r4, [r4]
  2a:	e9c7 340e 	strd	r3, r4, [r7, #56]	; 0x38
	double my_result;
	char *my_msg = "HAL example using GPIO and UART\n";
  2e:	4b2c      	ldr	r3, [pc, #176]	; (e0 <main+0xe0>)
  30:	637b      	str	r3, [r7, #52]	; 0x34
	volatile int i;
	GPIO_InitTypeDef gpio_config;

    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  //Enable ARM's FPU
  32:	4b2c      	ldr	r3, [pc, #176]	; (e4 <main+0xe4>)
  34:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
  38:	4a2a      	ldr	r2, [pc, #168]	; (e4 <main+0xe4>)
  3a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  3e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

	SCB_EnableDCache();
  42:	f7ff fffe 	bl	0 <main>
	SCB_EnableICache();
  46:	f7ff fffe 	bl	0 <main>

	HAL_Init();
  4a:	f7ff fffe 	bl	0 <HAL_Init>
	__HAL_RCC_GPIOA_CLK_ENABLE();
  4e:	4b26      	ldr	r3, [pc, #152]	; (e8 <main+0xe8>)
  50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  52:	4a25      	ldr	r2, [pc, #148]	; (e8 <main+0xe8>)
  54:	f043 0301 	orr.w	r3, r3, #1
  58:	6313      	str	r3, [r2, #48]	; 0x30
  5a:	4b23      	ldr	r3, [pc, #140]	; (e8 <main+0xe8>)
  5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  5e:	f003 0301 	and.w	r3, r3, #1
  62:	60fb      	str	r3, [r7, #12]
  64:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOB_CLK_ENABLE();
  66:	4b20      	ldr	r3, [pc, #128]	; (e8 <main+0xe8>)
  68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  6a:	4a1f      	ldr	r2, [pc, #124]	; (e8 <main+0xe8>)
  6c:	f043 0302 	orr.w	r3, r3, #2
  70:	6313      	str	r3, [r2, #48]	; 0x30
  72:	4b1d      	ldr	r3, [pc, #116]	; (e8 <main+0xe8>)
  74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  76:	f003 0302 	and.w	r3, r3, #2
  7a:	60bb      	str	r3, [r7, #8]
  7c:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOC_CLK_ENABLE();
  7e:	4b1a      	ldr	r3, [pc, #104]	; (e8 <main+0xe8>)
  80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  82:	4a19      	ldr	r2, [pc, #100]	; (e8 <main+0xe8>)
  84:	f043 0304 	orr.w	r3, r3, #4
  88:	6313      	str	r3, [r2, #48]	; 0x30
  8a:	4b17      	ldr	r3, [pc, #92]	; (e8 <main+0xe8>)
  8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  8e:	f003 0304 	and.w	r3, r3, #4
  92:	607b      	str	r3, [r7, #4]
  94:	687b      	ldr	r3, [r7, #4]

	hal_clocks_init();
  96:	f7ff fffe 	bl	0 <main>
	hal_button_init();
  9a:	f7ff fffe 	bl	0 <main>
	hal_uart_init();
  9e:	f7ff fffe 	bl	0 <main>

	//Expected output: 4.321294158
	//Use debugger to inspect the "my_result" variable
	my_result = standard_rms(val3, val2, val1, val0);
  a2:	ed97 3b0e 	vldr	d3, [r7, #56]	; 0x38
  a6:	ed97 2b10 	vldr	d2, [r7, #64]	; 0x40
  aa:	ed97 1b12 	vldr	d1, [r7, #72]	; 0x48
  ae:	ed97 0b14 	vldr	d0, [r7, #80]	; 0x50
  b2:	f7ff fffe 	bl	0 <standard_rms>
  b6:	ed87 0b0a 	vstr	d0, [r7, #40]	; 0x28

	HAL_UART_Transmit(&uart_init_struct, (uint8_t*)my_msg, strlen(my_msg), 100);
  ba:	6b78      	ldr	r0, [r7, #52]	; 0x34
  bc:	f7ff fffe 	bl	0 <strlen>
  c0:	4603      	mov	r3, r0
  c2:	b29a      	uxth	r2, r3
  c4:	2364      	movs	r3, #100	; 0x64
  c6:	6b79      	ldr	r1, [r7, #52]	; 0x34
  c8:	4808      	ldr	r0, [pc, #32]	; (ec <main+0xec>)
  ca:	f7ff fffe 	bl	0 <HAL_UART_Transmit>

	while (1){
		BSP_LED_Toggle(LED1);
  ce:	2000      	movs	r0, #0
  d0:	f7ff fffe 	bl	0 <BSP_LED_Toggle>
		HAL_Delay(50);
  d4:	2032      	movs	r0, #50	; 0x32
  d6:	f7ff fffe 	bl	0 <HAL_Delay>
		BSP_LED_Toggle(LED1);
  da:	e7f8      	b.n	ce <main+0xce>
  dc:	f3af 8000 	nop.w
  e0:	00000000 	andeq	r0, r0, r0
  e4:	e000ed00 	and	lr, r0, r0, lsl #26
  e8:	40023800 	andmi	r3, r2, r0, lsl #16
  ec:	00000000 	andeq	r0, r0, r0
  f0:	257c914b 	ldrbcs	r9, [ip, #-331]!	; 0xfffffeb5
  f4:	40100290 	mulsmi	r0, r0, r2
  f8:	16f4384c 	ldrbtne	r3, [r4], ip, asr #16
  fc:	4010ef0f 	andsmi	lr, r0, pc, lsl #30
 100:	b734b513 			; <UNDEFINED> instruction: 0xb734b513
 104:	40132842 	andsmi	r2, r3, r2, asr #16
 108:	17fc7608 	ldrbne	r7, [ip, r8, lsl #12]!
 10c:	4010e208 	andsmi	lr, r0, r8, lsl #4

Disassembly of section .debug_info:

00000000 <.debug_info>:
{
       0:	00001e88 	andeq	r1, r0, r8, lsl #29
  __ASM volatile ("dsb 0xF":::"memory");
       4:	00000004 	andeq	r0, r0, r4
  __ASM volatile ("isb 0xF":::"memory");
       8:	01040000 	mrseq	r0, (UNDEF: 4)
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
       c:	000005e1 	andeq	r0, r0, r1, ror #11
      10:	0014310c 	andseq	r3, r4, ip, lsl #2
  __ASM volatile ("dsb 0xF":::"memory");
      14:	0015cb00 	andseq	ip, r5, r0, lsl #22
	...
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
      24:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      28:	00746e69 	rsbseq	r6, r4, r9, ror #28
  __ASM volatile ("isb 0xF":::"memory");
      2c:	00002503 	andeq	r2, r0, r3, lsl #10
}
      30:	07040400 	streq	r0, [r4, -r0, lsl #8]
      34:	000014f6 	strdeq	r1, [r0], -r6
      38:	f2050804 	vadd.i8	d0, d5, d4
      3c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
{
      40:	0dd00408 	cfldrdeq	mvd0, [r0, #32]
      44:	01040000 	mrseq	r0, (UNDEF: 4)
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
      48:	000b6406 	andeq	r6, fp, r6, lsl #8
      4c:	00420500 	subeq	r0, r2, r0, lsl #10
  __ASM volatile ("dsb 0xF":::"memory");
      50:	2b040000 	blcs	100058 <SCB_EnableICache+0x100058>
    ccsidr = SCB->CCSIDR;
      54:	00005918 	andeq	r5, r0, r8, lsl r9
      58:	08010400 	stmdaeq	r1, {sl}
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
      5c:	000004e5 	andeq	r0, r0, r5, ror #9
      60:	28050204 	stmdacs	r5, {r2, r9}
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      64:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
      68:	0000043a 	andeq	r0, r0, sl, lsr r4
      6c:	73193904 	tstvc	r9, #4, 18	; 0x10000
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
      70:	04000000 	streq	r0, [r0], #-0
      74:	0b510702 	bleq	1441c10 <SCB_EnableICache+0x1441c10>
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
      78:	5b050000 	blpl	140008 <SCB_EnableICache+0x140008>
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
      7c:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
      80:	0086184d 	addeq	r1, r6, sp, asr #16
      } while (ways-- != 0U);
      84:	04040000 	streq	r0, [r4], #-0
      88:	000d1405 	andeq	r1, sp, r5, lsl #8
      8c:	11650500 	cmnne	r5, r0, lsl #10
    } while(sets-- != 0U);
      90:	4f040000 	svcmi	0x00040000
      94:	00009919 	andeq	r9, r0, r9, lsl r9
      98:	07040400 	streq	r0, [r4, -r0, lsl #8]
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
      9c:	00000dfe 	strdeq	r0, [r0], -lr
      a0:	b5070804 	strlt	r0, [r7, #-2052]	; 0xfffff7fc
      a4:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
      a8:	00000429 	andeq	r0, r0, r9, lsr #8
  __ASM volatile ("isb 0xF":::"memory");
      ac:	b3192205 	tstlt	r9, #1342177280	; 0x50000000
}
      b0:	06000000 	streq	r0, [r0], -r0
      b4:	0000b904 	andeq	fp, r0, r4, lsl #18
      b8:	032f0700 			; <UNDEFINED> instruction: 0x032f0700
      bc:	1f050000 	svcne	0x00050000
void systick_handler(void){
      c0:	06000007 	streq	r0, [r0], -r7
	HAL_IncTick();
      c4:	00860e2c 	addeq	r0, r6, ip, lsr #28
}
      c8:	81050000 	mrshi	r0, (UNDEF: 5)
void hal_clocks_init(void){
      cc:	06000010 			; <UNDEFINED> instruction: 0x06000010
      d0:	00860e72 	addeq	r0, r6, r2, ror lr
  HAL_StatusTypeDef  ret = HAL_OK;
      d4:	51080000 	mrspl	r0, (UNDEF: 8)
  __HAL_RCC_PWR_CLK_ENABLE();
      d8:	07000008 	streq	r0, [r0, -r8]
      dc:	31170165 	tstcc	r7, r5, ror #2
      e0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
      e4:	03a60604 			; <UNDEFINED> instruction: 0x03a60604
      e8:	00000105 	andeq	r0, r0, r5, lsl #2
      ec:	000ca10a 	andeq	sl, ip, sl, lsl #2
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
      f0:	0ca80600 	stceq	6, cr0, [r8]
      f4:	000000d6 	ldrdeq	r0, [r0], -r6
      f8:	0008180a 	andeq	r1, r8, sl, lsl #16
      fc:	13a90600 			; <UNDEFINED> instruction: 0x13a90600
     100:	00000105 	andeq	r0, r0, r5, lsl #2
     104:	00590b00 	subseq	r0, r9, r0, lsl #22
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
     108:	01150000 	tsteq	r5, r0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
     10c:	310c0000 	mrscc	r0, (UNDEF: 12)
     110:	03000000 	movweq	r0, #0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
     114:	06080d00 	streq	r0, [r8], -r0, lsl #26
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
     118:	013909a3 	teqeq	r9, r3, lsr #19
  RCC_OscInitStruct.PLL.PLLM = 25;
     11c:	420e0000 	andmi	r0, lr, #0
  RCC_OscInitStruct.PLL.PLLN = 432;
     120:	06000007 	streq	r0, [r0], -r7
     124:	002507a5 	eoreq	r0, r5, r5, lsr #15
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
     128:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
  RCC_OscInitStruct.PLL.PLLQ = 9;
     12c:	0000118b 	andeq	r1, r0, fp, lsl #3
  RCC_OscInitStruct.PLL.PLLR = 7;
     130:	e305aa06 	movw	sl, #23046	; 0x5a06
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
     134:	04000000 	streq	r0, [r0], #-0
     138:	11040500 	tstne	r4, r0, lsl #10
     13c:	ab060000 	blge	180144 <SCB_EnableICache+0x180144>
     140:	00011503 	andeq	r1, r1, r3, lsl #10
  if(ret != HAL_OK){
     144:	13910500 	orrsne	r0, r1, #0, 10
     148:	af060000 	svcge	0x00060000
  ret = HAL_PWREx_EnableOverDrive();
     14c:	0000a71b 	andeq	sl, r0, fp, lsl r7
     150:	06040f00 	streq	r0, [r4], -r0, lsl #30
     154:	00015904 	andeq	r5, r1, r4, lsl #18
  if(ret != HAL_OK){
     158:	08010400 	stmdaeq	r1, {sl}
     15c:	00000e52 	andeq	r0, r0, r2, asr lr
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
     160:	00015910 	andeq	r5, r1, r0, lsl r9
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
     164:	0a9c0500 	beq	fe701408 <SCB_EnableICache+0xfe701408>
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
     168:	16080000 	strne	r0, [r8], -r0
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
     16c:	00009919 	andeq	r9, r0, r9, lsl r9
     170:	0ec01100 	poleqs	f1, f0, f0
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
     174:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
     178:	01cb082f 	biceq	r0, fp, pc, lsr #16
     17c:	020e0000 	andeq	r0, lr, #0
     180:	08000009 	stmdaeq	r0, {r0, r3}
     184:	01cb1331 	biceq	r1, fp, r1, lsr r3
     188:	12000000 	andne	r0, r0, #0
  if(ret != HAL_OK){
     18c:	08006b5f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}
     190:	00250732 	eoreq	r0, r5, r2, lsr r7
}
     194:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     198:	00000d8d 	andeq	r0, r0, sp, lsl #27
     19c:	250b3208 	strcs	r3, [fp, #-520]	; 0xfffffdf8
     1a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
void exti0_line_interrupt_handler(void){
     1a4:	0014c10e 	andseq	ip, r4, lr, lsl #2
  HAL_GPIO_EXTI_IRQHandler(USER_BUTTON_PIN);
     1a8:	14320800 	ldrtne	r0, [r2], #-2048	; 0xfffff800
     1ac:	00000025 	andeq	r0, r0, r5, lsr #32
}
     1b0:	05420e0c 	strbeq	r0, [r2, #-3596]	; 0xfffff1f4
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
     1b4:	32080000 	andcc	r0, r8, #0
     1b8:	0000251b 	andeq	r2, r0, fp, lsl r5
  if (GPIO_Pin == GPIO_PIN_0){
     1bc:	5f121000 	svcpl	0x00121000
     1c0:	33080078 	movwcc	r0, #32888	; 0x8078
    BSP_LED_Toggle(LED2);
     1c4:	0001d10b 	andeq	sp, r1, fp, lsl #2
}
     1c8:	06001400 	streq	r1, [r0], -r0, lsl #8
     1cc:	00017104 	andeq	r7, r1, r4, lsl #2
void hal_button_init(void){
     1d0:	01650b00 	cmneq	r5, r0, lsl #22
     1d4:	01e10000 	mvneq	r0, r0
	BSP_LED_Init(LED2);
     1d8:	310c0000 	mrscc	r0, (UNDEF: 12)
	BSP_LED_Init(LED1);
     1dc:	00000000 	andeq	r0, r0, r0
     1e0:	03e51100 	mvneq	r1, #0, 2
	gpio_config.Mode = GPIO_MODE_IT_RISING;
     1e4:	08240000 	stmdaeq	r4!, {}	; <UNPREDICTABLE>
	gpio_config.Pull = GPIO_NOPULL;
     1e8:	02640837 	rsbeq	r0, r4, #3604480	; 0x370000
	gpio_config.Pin = GPIO_PIN_0;
     1ec:	ba0e0000 	blt	380008 <SCB_EnableICache+0x380008>
	HAL_GPIO_Init(GPIOA, &gpio_config);
     1f0:	08000009 	stmdaeq	r0, {r0, r3}
     1f4:	00250939 	eoreq	r0, r5, r9, lsr r9
	HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
     1f8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     1fc:	000014d6 	ldrdeq	r1, [r0], -r6
     200:	25093a08 	strcs	r3, [r9, #-2568]	; 0xfffff5f8
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
     204:	04000000 	streq	r0, [r0], #-0
}
     208:	0008340e 	andeq	r3, r8, lr, lsl #8
     20c:	093b0800 	ldmdbeq	fp!, {fp}
     210:	00000025 	andeq	r0, r0, r5, lsr #32
     214:	08ab0e08 	stmiaeq	fp!, {r3, r9, sl, fp}
void HAL_UART_MspInit(UART_HandleTypeDef *huart){
     218:	3c080000 	stccc	0, cr0, [r8], {-0}
     21c:	00002509 	andeq	r2, r0, r9, lsl #10
  __GPIOA_CLK_ENABLE();
     220:	cb0e0c00 	blgt	383008 <SCB_EnableICache+0x383008>
     224:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     228:	0025093d 	eoreq	r0, r5, sp, lsr r9
     22c:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     230:	0000068a 	andeq	r0, r0, sl, lsl #13
     234:	25093e08 	strcs	r3, [r9, #-3592]	; 0xfffff1f8
  __USART1_CLK_ENABLE();
     238:	14000000 	strne	r0, [r0], #-0
     23c:	0004be0e 	andeq	fp, r4, lr, lsl #28
     240:	093f0800 	ldmdbeq	pc!, {fp}	; <UNPREDICTABLE>
     244:	00000025 	andeq	r0, r0, r5, lsr #32
     248:	04030e18 	streq	r0, [r3], #-3608	; 0xfffff1e8
     24c:	40080000 	andmi	r0, r8, r0
  gpio_init_struct.Pin = GPIO_PIN_9;
     250:	00002509 	andeq	r2, r0, r9, lsl #10
     254:	c80e1c00 	stmdagt	lr, {sl, fp, ip}
  gpio_init_struct.Mode = GPIO_MODE_AF_PP;
     258:	08000004 	stmdaeq	r0, {r2}
  gpio_init_struct.Pull = GPIO_PULLUP;
     25c:	00250941 	eoreq	r0, r5, r1, asr #18
  gpio_init_struct.Speed = GPIO_SPEED_HIGH;
     260:	00200000 	eoreq	r0, r0, r0
  gpio_init_struct.Alternate = GPIO_AF7_USART1;
     264:	0009c313 	andeq	ip, r9, r3, lsl r3
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
     268:	08010800 	stmdaeq	r1, {fp}
     26c:	02a9084a 	adceq	r0, r9, #4849664	; 0x4a0000
     270:	cd0e0000 	stcgt	0, cr0, [lr, #-0]
  gpio_init_struct.Pin = GPIO_PIN_10;
     274:	08000008 	stmdaeq	r0, {r3}
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
     278:	02a90a4b 	adceq	r0, r9, #307200	; 0x4b000
     27c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     280:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
}
     284:	a9094c08 	stmdbge	r9, {r3, sl, fp, lr}
     288:	80000002 	andhi	r0, r0, r2
     28c:	0000d414 	andeq	sp, r0, r4, lsl r4
     290:	0a4e0800 	beq	1382298 <SCB_EnableICache+0x1382298>
void hal_uart_init(void){
     294:	00000165 	andeq	r0, r0, r5, ror #2
	uart_init_struct.Instance = USART1;
     298:	93140100 	tstls	r4, #0, 2
     29c:	08000011 	stmdaeq	r0, {r0, r4}
	uart_init_struct.Init.BaudRate = 9600;
     2a0:	01650a51 	cmneq	r5, r1, asr sl
     2a4:	01040000 	mrseq	r0, (UNDEF: 4)
	uart_init_struct.Init.WordLength = UART_WORDLENGTH_8B;
     2a8:	01510b00 	cmpeq	r1, r0, lsl #22
	uart_init_struct.Init.StopBits = UART_STOPBITS_1;
     2ac:	02b90000 	adcseq	r0, r9, #0
     2b0:	310c0000 	mrscc	r0, (UNDEF: 12)
	uart_init_struct.Init.Parity = UART_PARITY_NONE;
     2b4:	1f000000 	svcne	0x00000000
	uart_init_struct.Init.HwFlowCtl = UART_HWCONTROL_NONE;
     2b8:	00771300 	rsbseq	r1, r7, r0, lsl #6
     2bc:	01900000 	orrseq	r0, r0, r0
	uart_init_struct.Init.Mode = UART_MODE_TX_RX;
     2c0:	fc085d08 	stc2	13, cr5, [r8], {8}
	HAL_UART_Init(&uart_init_struct);
     2c4:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     2c8:	00000902 	andeq	r0, r0, r2, lsl #18
}
     2cc:	fc125e08 	ldc2	14, cr5, [r2], {8}
     2d0:	00000002 	andeq	r0, r0, r2
     2d4:	0000f20e 	andeq	pc, r0, lr, lsl #4
     2d8:	065f0800 	ldrbeq	r0, [pc], -r0, lsl #16
     2dc:	00000025 	andeq	r0, r0, r5, lsr #32
     2e0:	10ce0e04 	sbcne	r0, lr, r4, lsl #28
     2e4:	61080000 	mrsvs	r0, (UNDEF: 8)
     2e8:	00030209 	andeq	r0, r3, r9, lsl #4
     2ec:	c30e0800 	movwgt	r0, #59392	; 0xe800
     2f0:	08000009 	stmdaeq	r0, {r0, r3}
     2f4:	02641e62 	rsbeq	r1, r4, #1568	; 0x620
     2f8:	00880000 	addeq	r0, r8, r0
     2fc:	02b90406 	adcseq	r0, r9, #100663296	; 0x6000000
int main(void){
     300:	120b0000 	andne	r0, fp, #0
     304:	12000003 	andne	r0, r0, #3
	double val3 = 4.002503;
     308:	0c000003 	stceq	0, cr0, [r0], {3}
     30c:	00000031 	andeq	r0, r0, r1, lsr r0
	double val2 = 4.233456;
     310:	0406001f 	streq	r0, [r6], #-31	; 0xffffffe1
     314:	00000318 	andeq	r0, r0, r8, lsl r3
     318:	0c311115 	ldfeqs	f1, [r1], #-84	; 0xffffffac
	double val1 = 4.789317;
     31c:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
     320:	03410875 	movteq	r0, #6261	; 0x1875
	double val0 = 4.220734;
     324:	990e0000 	stmdbls	lr, {}	; <UNPREDICTABLE>
     328:	08000003 	stmdaeq	r0, {r0, r1}
     32c:	03411176 	movteq	r1, #4470	; 0x1176
	char *my_msg = "HAL example using GPIO and UART\n";
     330:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  //Enable ARM's FPU
     334:	0000056a 	andeq	r0, r0, sl, ror #10
     338:	25067708 	strcs	r7, [r6, #-1800]	; 0xfffff8f8
     33c:	04000000 	streq	r0, [r0], #-0
     340:	59040600 	stmdbpl	r4, {r9, sl}
	SCB_EnableDCache();
     344:	11000000 	mrsne	r0, (UNDEF: 0)
	SCB_EnableICache();
     348:	000010bf 	strheq	r1, [r0], -pc	; <UNPREDICTABLE>
	HAL_Init();
     34c:	08b50868 	ldmeq	r5!, {r3, r5, r6, fp}
	__HAL_RCC_GPIOA_CLK_ENABLE();
     350:	0000048a 	andeq	r0, r0, sl, lsl #9
     354:	00705f12 	rsbseq	r5, r0, r2, lsl pc
     358:	4112b608 	tstmi	r2, r8, lsl #12
     35c:	00000003 	andeq	r0, r0, r3
     360:	00725f12 	rsbseq	r5, r2, r2, lsl pc
     364:	2507b708 	strcs	fp, [r7, #-1800]	; 0xfffff8f8
	__HAL_RCC_GPIOB_CLK_ENABLE();
     368:	04000000 	streq	r0, [r0], #-0
     36c:	00775f12 	rsbseq	r5, r7, r2, lsl pc
     370:	2507b808 	strcs	fp, [r7, #-2056]	; 0xfffff7f8
     374:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     378:	0001500e 	andeq	r5, r1, lr
     37c:	09b90800 	ldmibeq	r9!, {fp}
	__HAL_RCC_GPIOC_CLK_ENABLE();
     380:	00000060 	andeq	r0, r0, r0, rrx
     384:	10910e0c 	addsne	r0, r1, ip, lsl #28
     388:	ba080000 	blt	200390 <SCB_EnableICache+0x200390>
     38c:	00006009 	andeq	r6, r0, r9
     390:	5f120e00 	svcpl	0x00120e00
     394:	08006662 	stmdaeq	r0, {r1, r5, r6, r9, sl, sp, lr}
	hal_clocks_init();
     398:	031911bb 	tsteq	r9, #-1073741778	; 0xc000002e
	hal_button_init();
     39c:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
	hal_uart_init();
     3a0:	000002d3 	ldrdeq	r0, [r0], -r3
	my_result = standard_rms(val3, val2, val1, val0);
     3a4:	2507bc08 	strcs	fp, [r7, #-3080]	; 0xfffff3f8
     3a8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     3ac:	00092f0e 	andeq	r2, r9, lr, lsl #30
     3b0:	0ac30800 	beq	ff0c23b8 <SCB_EnableICache+0xff0c23b8>
     3b4:	00000151 	andeq	r0, r0, r1, asr r1
     3b8:	15620e1c 	strbne	r0, [r2, #-3612]!	; 0xfffff1e4
	HAL_UART_Transmit(&uart_init_struct, (uint8_t*)my_msg, strlen(my_msg), 100);
     3bc:	c5080000 	strgt	r0, [r8, #-0]
     3c0:	0005fc1d 	andeq	pc, r5, sp, lsl ip	; <UNPREDICTABLE>
     3c4:	b00e2000 	andlt	r2, lr, r0
     3c8:	08000005 	stmdaeq	r0, {r0, r2}
     3cc:	06261dc7 	strteq	r1, [r6], -r7, asr #27
		BSP_LED_Toggle(LED1);
     3d0:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
		HAL_Delay(50);
     3d4:	00000b3b 	andeq	r0, r0, fp, lsr fp
     3d8:	4a0dca08 	bmi	372c00 <SCB_EnableICache+0x372c00>
		BSP_LED_Toggle(LED1);
     3dc:	28000006 	stmdacs	r0, {r1, r2}
     3e0:	000e420e 	andeq	r4, lr, lr, lsl #4
     3e4:	09cb0800 	stmibeq	fp, {fp}^
     3e8:	00000664 	andeq	r0, r0, r4, ror #12
     3ec:	755f122c 	ldrbvc	r1, [pc, #-556]	; 1c8 <.debug_info+0x1c8>
     3f0:	ce080062 	cdpgt	0, 0, cr0, cr8, cr2, {3}
     3f4:	00031911 	andeq	r1, r3, r1, lsl r9
     3f8:	5f123000 	svcpl	0x00123000
     3fc:	08007075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip, sp, lr}
     400:	034112cf 	movteq	r1, #4815	; 0x12cf
     404:	12380000 	eorsne	r0, r8, #0
     408:	0072755f 	rsbseq	r7, r2, pc, asr r5
     40c:	2507d008 	strcs	sp, [r7, #-8]
     410:	3c000000 	stccc	0, cr0, [r0], {-0}
     414:	000ff20e 	andeq	pc, pc, lr, lsl #4
     418:	11d30800 	bicsne	r0, r3, r0, lsl #16
     41c:	0000066a 	andeq	r0, r0, sl, ror #12
     420:	01c30e40 	biceq	r0, r3, r0, asr #28
     424:	d4080000 	strle	r0, [r8], #-0
     428:	00067a11 	andeq	r7, r6, r1, lsl sl
     42c:	5f124300 	svcpl	0x00124300
     430:	0800626c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sp, lr}
     434:	031911d7 	tsteq	r9, #-1073741771	; 0xc0000035
     438:	0e440000 	cdpeq	0, 4, cr0, cr4, cr0, {0}
     43c:	00000fe9 	andeq	r0, r0, r9, ror #31
     440:	2507da08 	strcs	sp, [r7, #-2568]	; 0xfffff5f8
     444:	4c000000 	stcmi	0, cr0, [r0], {-0}
     448:	000bdf0e 	andeq	sp, fp, lr, lsl #30
     44c:	0adb0800 	beq	ff6c2454 <SCB_EnableICache+0xff6c2454>
     450:	000000be 	strheq	r0, [r0], -lr
     454:	03000e50 	movweq	r0, #3664	; 0xe50
     458:	de080000 	cdple	0, 0, cr0, cr8, cr0, {0}
     45c:	0004a812 	andeq	sl, r4, r2, lsl r8
     460:	bd0e5400 	cfstrslt	mvf5, [lr, #-0]
     464:	08000001 	stmdaeq	r0, {r0}
     468:	01450ce2 	smlaltteq	r0, r5, r2, ip
     46c:	0e580000 	cdpeq	0, 5, cr0, cr8, cr0, {0}
     470:	0000006e 	andeq	r0, r0, lr, rrx
     474:	390ee408 	stmdbcc	lr, {r3, sl, sp, lr, pc}
     478:	5c000001 	stcpl	0, cr0, [r0], {1}
     47c:	0014000e 	andseq	r0, r4, lr
     480:	09e50800 	stmibeq	r5!, {fp}^
     484:	00000025 	andeq	r0, r0, r5, lsr #32
     488:	25160064 	ldrcs	r0, [r6, #-100]	; 0xffffff9c
     48c:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
     490:	17000004 	strne	r0, [r0, -r4]
     494:	000004a8 	andeq	r0, r0, r8, lsr #9
     498:	00015117 	andeq	r5, r1, r7, lsl r1
     49c:	01531700 	cmpeq	r3, r0, lsl #14
     4a0:	25170000 	ldrcs	r0, [r7, #-0]
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	04b30406 	ldrteq	r0, [r3], #1030	; 0x406
     4ac:	a8100000 	ldmdage	r0, {}	; <UNPREDICTABLE>
     4b0:	18000004 	stmdane	r0, {r2}
     4b4:	00000336 	andeq	r0, r0, r6, lsr r3
     4b8:	60080428 	andvs	r0, r8, r8, lsr #8
     4bc:	05fc0802 	ldrbeq	r0, [ip, #2050]!	; 0x802
     4c0:	a4190000 	ldrge	r0, [r9], #-0
     4c4:	08000008 	stmdaeq	r0, {r3}
     4c8:	25070262 	strcs	r0, [r7, #-610]	; 0xfffffd9e
     4cc:	00000000 	andeq	r0, r0, r0
     4d0:	0006e019 	andeq	lr, r6, r9, lsl r0
     4d4:	02670800 	rsbeq	r0, r7, #0, 16
     4d8:	0006d60b 	andeq	sp, r6, fp, lsl #12
     4dc:	f3190400 	vshl.u16	d0, d0, d9
     4e0:	08000004 	stmdaeq	r0, {r2}
     4e4:	d6140267 	ldrle	r0, [r4], -r7, ror #4
     4e8:	08000006 	stmdaeq	r0, {r1, r2}
     4ec:	0004a219 	andeq	sl, r4, r9, lsl r2
     4f0:	02670800 	rsbeq	r0, r7, #0, 16
     4f4:	0006d61e 	andeq	sp, r6, lr, lsl r6
     4f8:	ed190c00 	ldc	12, cr0, [r9, #-0]
     4fc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     500:	25080269 	strcs	r0, [r8, #-617]	; 0xfffffd97
     504:	10000000 	andne	r0, r0, r0
     508:	000d4619 	andeq	r4, sp, r9, lsl r6
     50c:	026a0800 	rsbeq	r0, sl, #0, 16
     510:	0008d608 	andeq	sp, r8, r8, lsl #12
     514:	46191400 	ldrmi	r1, [r9], -r0, lsl #8
     518:	08000013 	stmdaeq	r0, {r0, r1, r4}
     51c:	2507026d 	strcs	r0, [r7, #-621]	; 0xfffffd93
     520:	30000000 	andcc	r0, r0, r0
     524:	00141019 	andseq	r1, r4, r9, lsl r0
     528:	026e0800 	rsbeq	r0, lr, #0, 16
     52c:	0008eb16 	andeq	lr, r8, r6, lsl fp
     530:	7c193400 	cfldrsvc	mvf3, [r9], {-0}
     534:	08000013 	stmdaeq	r0, {r0, r1, r4}
     538:	25070270 	strcs	r0, [r7, #-624]	; 0xfffffd90
     53c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
     540:	00104d19 	andseq	r4, r0, r9, lsl sp
     544:	02720800 	rsbseq	r0, r2, #0, 16
     548:	0008fc0a 	andeq	pc, r8, sl, lsl #24
     54c:	aa193c00 	bge	64f008 <SCB_EnableICache+0x64f008>
     550:	08000004 	stmdaeq	r0, {r2}
     554:	cb130275 	blgt	4c0f30 <SCB_EnableICache+0x4c0f30>
     558:	40000001 	andmi	r0, r0, r1
     55c:	00049819 	andeq	r9, r4, r9, lsl r8
     560:	02760800 	rsbseq	r0, r6, #0, 16
     564:	00002507 	andeq	r2, r0, r7, lsl #10
     568:	a7194400 	ldrge	r4, [r9, -r0, lsl #8]
     56c:	08000011 	stmdaeq	r0, {r0, r4}
     570:	cb130277 	blgt	4c0f54 <SCB_EnableICache+0x4c0f54>
     574:	48000001 	stmdami	r0, {r0}
     578:	000b9d19 	andeq	r9, fp, r9, lsl sp
     57c:	02780800 	rsbseq	r0, r8, #0, 16
     580:	00090214 	andeq	r0, r9, r4, lsl r2
     584:	a1194c00 	tstge	r9, r0, lsl #24
     588:	08000001 	stmdaeq	r0, {r0}
     58c:	2507027b 	strcs	r0, [r7, #-635]	; 0xfffffd85
     590:	50000000 	andpl	r0, r0, r0
     594:	0007c519 	andeq	ip, r7, r9, lsl r5
     598:	027c0800 	rsbseq	r0, ip, #0, 16
     59c:	00015309 	andeq	r5, r1, r9, lsl #6
     5a0:	63195400 	tstvs	r9, #0, 8
     5a4:	08000008 	stmdaeq	r0, {r3}
     5a8:	b107029f 			; <UNDEFINED> instruction: 0xb107029f
     5ac:	58000008 	stmdapl	r0, {r3}
     5b0:	0000771a 	andeq	r7, r0, sl, lsl r7
     5b4:	02a30800 	adceq	r0, r3, #0, 16
     5b8:	0002fc13 	andeq	pc, r2, r3, lsl ip	; <UNPREDICTABLE>
     5bc:	1a014800 	bne	525c4 <SCB_EnableICache+0x525c4>
     5c0:	00000f08 	andeq	r0, r0, r8, lsl #30
     5c4:	1202a408 	andne	sl, r2, #8, 8	; 0x8000000
     5c8:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
     5cc:	b31a014c 	tstlt	sl, #76, 2
     5d0:	08000001 	stmdaeq	r0, {r0}
     5d4:	130c02a8 	movwne	r0, #49832	; 0xc2a8
     5d8:	dc000009 	stcle	0, cr0, [r0], {9}
     5dc:	10121a02 	andsne	r1, r2, r2, lsl #20
     5e0:	ad080000 	stcge	0, cr0, [r8, #-0]
     5e4:	06971002 	ldreq	r1, [r7], r2
     5e8:	02e00000 	rsceq	r0, r0, #0
     5ec:	0003801a 	andeq	r8, r3, sl, lsl r0
     5f0:	02af0800 	adceq	r0, pc, #0, 16
     5f4:	00091f0a 	andeq	r1, r9, sl, lsl #30
     5f8:	0002ec00 	andeq	lr, r2, r0, lsl #24
     5fc:	048a0406 	streq	r0, [sl], #1030	; 0x406
     600:	25160000 	ldrcs	r0, [r6, #-0]
     604:	20000000 	andcs	r0, r0, r0
     608:	17000006 	strne	r0, [r0, -r6]
     60c:	000004a8 	andeq	r0, r0, r8, lsr #9
     610:	00015117 	andeq	r5, r1, r7, lsl r1
     614:	06201700 	strteq	r1, [r0], -r0, lsl #14
     618:	25170000 	ldrcs	r0, [r7, #-0]
     61c:	00000000 	andeq	r0, r0, r0
     620:	01600406 	cmneq	r0, r6, lsl #8
     624:	04060000 	streq	r0, [r6], #-0
     628:	00000602 	andeq	r0, r0, r2, lsl #12
     62c:	0000ca16 	andeq	ip, r0, r6, lsl sl
     630:	00064a00 	andeq	r4, r6, r0, lsl #20
     634:	04a81700 	strteq	r1, [r8], #1792	; 0x700
     638:	51170000 	tstpl	r7, r0
     63c:	17000001 	strne	r0, [r0, -r1]
     640:	000000ca 	andeq	r0, r0, sl, asr #1
     644:	00002517 	andeq	r2, r0, r7, lsl r5
     648:	04060000 	streq	r0, [r6], #-0
     64c:	0000062c 	andeq	r0, r0, ip, lsr #12
     650:	00002516 	andeq	r2, r0, r6, lsl r5
     654:	00066400 	andeq	r6, r6, r0, lsl #8
     658:	04a81700 	strteq	r1, [r8], #1792	; 0x700
     65c:	51170000 	tstpl	r7, r0
     660:	00000001 	andeq	r0, r0, r1
     664:	06500406 	ldrbeq	r0, [r0], -r6, lsl #8
     668:	590b0000 	stmdbpl	fp, {}	; <UNPREDICTABLE>
     66c:	7a000000 	bvc	674 <.debug_info+0x674>
     670:	0c000006 	stceq	0, cr0, [r0], {6}
     674:	00000031 	andeq	r0, r0, r1, lsr r0
     678:	590b0002 	stmdbpl	fp, {r1}
     67c:	8a000000 	bhi	684 <.debug_info+0x684>
     680:	0c000006 	stceq	0, cr0, [r0], {6}
     684:	00000031 	andeq	r0, r0, r1, lsr r0
     688:	b1080000 	mrslt	r0, (UNDEF: 8)
     68c:	08000014 	stmdaeq	r0, {r2, r4}
     690:	471a011f 			; <UNDEFINED> instruction: 0x471a011f
     694:	1b000003 	blne	6a8 <.debug_info+0x6a8>
     698:	00000e74 	andeq	r0, r0, r4, ror lr
     69c:	0123080c 			; <UNDEFINED> instruction: 0x0123080c
     6a0:	0006d008 	andeq	sp, r6, r8
     6a4:	09021900 	stmdbeq	r2, {r8, fp, ip}
     6a8:	25080000 	strcs	r0, [r8, #-0]
     6ac:	06d01101 	ldrbeq	r1, [r0], r1, lsl #2
     6b0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     6b4:	00000868 	andeq	r0, r0, r8, ror #16
     6b8:	07012608 	streq	r2, [r1, -r8, lsl #12]
     6bc:	00000025 	andeq	r0, r0, r5, lsr #32
     6c0:	0d401904 	vstreq.16	s3, [r0, #-8]	; <UNPREDICTABLE>
     6c4:	27080000 	strcs	r0, [r8, -r0]
     6c8:	06d60b01 	ldrbeq	r0, [r6], r1, lsl #22
     6cc:	00080000 	andeq	r0, r8, r0
     6d0:	06970406 	ldreq	r0, [r7], r6, lsl #8
     6d4:	04060000 	streq	r0, [r6], #-0
     6d8:	0000068a 	andeq	r0, r0, sl, lsl #13
     6dc:	00157b1b 	andseq	r7, r5, fp, lsl fp
     6e0:	3f080e00 	svccc	0x00080e00
     6e4:	07150801 	ldreq	r0, [r5, -r1, lsl #16]
     6e8:	1f190000 	svcne	0x00190000
     6ec:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     6f0:	15120140 	ldrne	r0, [r2, #-320]	; 0xfffffec0
     6f4:	00000007 	andeq	r0, r0, r7
     6f8:	0006a919 	andeq	sl, r6, r9, lsl r9
     6fc:	01410800 	cmpeq	r1, r0, lsl #16
     700:	00071512 	andeq	r1, r7, r2, lsl r5
     704:	3c190600 	ldccc	6, cr0, [r9], {-0}
     708:	08000002 	stmdaeq	r0, {r1}
     70c:	73120142 	tstvc	r2, #-2147483632	; 0x80000010
     710:	0c000000 	stceq	0, cr0, [r0], {-0}
     714:	00730b00 	rsbseq	r0, r3, r0, lsl #22
     718:	07250000 	streq	r0, [r5, -r0]!
     71c:	310c0000 	mrscc	r0, (UNDEF: 12)
     720:	02000000 	andeq	r0, r0, #0
     724:	08d01c00 	ldmeq	r0, {sl, fp, ip}^
     728:	3a070280 	bcc	1c1130 <SCB_EnableICache+0x1c1130>
     72c:	19000008 	stmdbne	r0, {r3}
     730:	00000445 	andeq	r0, r0, r5, asr #8
     734:	18028208 	stmdane	r2, {r3, r9, pc}
     738:	00000031 	andeq	r0, r0, r1, lsr r0
     73c:	0ae31900 	beq	ff8c6408 <SCB_EnableICache+0xff8c6408>
     740:	83080000 	movwhi	r0, #32768	; 0x8000
     744:	01531202 	cmpeq	r3, r2, lsl #4
     748:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     74c:	00000c94 	muleq	r0, r4, ip
     750:	10028408 	andne	r8, r2, r8, lsl #8
     754:	0000083a 	andeq	r0, r0, sl, lsr r8
     758:	07331908 	ldreq	r1, [r3, -r8, lsl #18]!
     75c:	85080000 	strhi	r0, [r8, #-0]
     760:	01e11702 	mvneq	r1, r2, lsl #14
     764:	19240000 	stmdbne	r4!, {}	; <UNPREDICTABLE>
     768:	000012e8 	andeq	r1, r0, r8, ror #5
     76c:	0f028608 	svceq	0x00028608
     770:	00000025 	andeq	r0, r0, r5, lsr #32
     774:	0d621948 			; <UNDEFINED> instruction: 0x0d621948
     778:	87080000 	strhi	r0, [r8, -r0]
     77c:	00a02c02 	adceq	r2, r0, r2, lsl #24
     780:	19500000 	ldmdbne	r0, {}^	; <UNPREDICTABLE>
     784:	00001503 	andeq	r1, r0, r3, lsl #10
     788:	1a028808 	bne	a27b0 <SCB_EnableICache+0xa27b0>
     78c:	000006dc 	ldrdeq	r0, [r0], -ip
     790:	10051958 	andne	r1, r5, r8, asr r9
     794:	89080000 	stmdbhi	r8, {}	; <UNPREDICTABLE>
     798:	01391602 	teqeq	r9, r2, lsl #12
     79c:	19680000 	stmdbne	r8!, {}^	; <UNPREDICTABLE>
     7a0:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
     7a4:	16028a08 	strne	r8, [r2], -r8, lsl #20
     7a8:	00000139 	andeq	r0, r0, r9, lsr r1
     7ac:	0d1d1970 	vldreq.16	s2, [sp, #-224]	; 0xffffff20	; <UNPREDICTABLE>
     7b0:	8b080000 	blhi	2007b8 <SCB_EnableICache+0x2007b8>
     7b4:	01391602 	teqeq	r9, r2, lsl #12
     7b8:	19780000 	ldmdbne	r8!, {}^	; <UNPREDICTABLE>
     7bc:	00000c4b 	andeq	r0, r0, fp, asr #24
     7c0:	10028c08 	andne	r8, r2, r8, lsl #24
     7c4:	0000084a 	andeq	r0, r0, sl, asr #16
     7c8:	09231980 	stmdbeq	r3!, {r7, r8, fp, ip}
     7cc:	8d080000 	stchi	0, cr0, [r8, #-0]
     7d0:	085a1002 	ldmdaeq	sl, {r1, ip}^
     7d4:	19880000 	stmibne	r8, {}	; <UNPREDICTABLE>
     7d8:	00000f6f 	andeq	r0, r0, pc, ror #30
     7dc:	0f028e08 	svceq	0x00028e08
     7e0:	00000025 	andeq	r0, r0, r5, lsr #32
     7e4:	06b819a0 	ldrteq	r1, [r8], r0, lsr #19
     7e8:	8f080000 	svchi	0x00080000
     7ec:	01391602 	teqeq	r9, r2, lsl #12
     7f0:	19a40000 	stmibne	r4!, {}	; <UNPREDICTABLE>
     7f4:	00000825 	andeq	r0, r0, r5, lsr #16
     7f8:	16029008 	strne	r9, [r2], -r8
     7fc:	00000139 	andeq	r0, r0, r9, lsr r1
     800:	052719ac 	streq	r1, [r7, #-2476]!	; 0xfffff654
     804:	91080000 	mrsls	r0, (UNDEF: 8)
     808:	01391602 	teqeq	r9, r2, lsl #12
     80c:	19b40000 	ldmibne	r4!, {}	; <UNPREDICTABLE>
     810:	00000a19 	andeq	r0, r0, r9, lsl sl
     814:	16029208 	strne	r9, [r2], -r8, lsl #4
     818:	00000139 	andeq	r0, r0, r9, lsr r1
     81c:	0ca719bc 			; <UNDEFINED> instruction: 0x0ca719bc
     820:	93080000 	movwls	r0, #32768	; 0x8000
     824:	01391602 	teqeq	r9, r2, lsl #12
     828:	19c40000 	stmibne	r4, {}^	; <UNPREDICTABLE>
     82c:	0000110f 	andeq	r1, r0, pc, lsl #2
     830:	08029408 	stmdaeq	r2, {r3, sl, ip, pc}
     834:	00000025 	andeq	r0, r0, r5, lsr #32
     838:	590b00cc 	stmdbpl	fp, {r2, r3, r6, r7}
     83c:	4a000001 	bmi	848 <.debug_info+0x848>
     840:	0c000008 	stceq	0, cr0, [r0], {8}
     844:	00000031 	andeq	r0, r0, r1, lsr r0
     848:	590b0019 	stmdbpl	fp, {r0, r3, r4}
     84c:	5a000001 	bpl	858 <.debug_info+0x858>
     850:	0c000008 	stceq	0, cr0, [r0], {8}
     854:	00000031 	andeq	r0, r0, r1, lsr r0
     858:	590b0007 	stmdbpl	fp, {r0, r1, r2}
     85c:	6a000001 	bvs	868 <.debug_info+0x868>
     860:	0c000008 	stceq	0, cr0, [r0], {8}
     864:	00000031 	andeq	r0, r0, r1, lsr r0
     868:	f01c0017 			; <UNDEFINED> instruction: 0xf01c0017
     86c:	07029908 	streq	r9, [r2, -r8, lsl #18]
     870:	00000891 	muleq	r0, r1, r8
     874:	000d5b19 	andeq	r5, sp, r9, lsl fp
     878:	029c0800 	addseq	r0, ip, #0, 16
     87c:	0008911b 	andeq	r9, r8, fp, lsl r1
     880:	ec190000 	ldc	0, cr0, [r9], {-0}
     884:	08000006 	stmdaeq	r0, {r1, r2}
     888:	a118029d 			; <UNDEFINED> instruction: 0xa118029d
     88c:	78000008 	stmdavc	r0, {r3}
     890:	03410b00 	movteq	r0, #6912	; 0x1b00
     894:	08a10000 	stmiaeq	r1!, {}	; <UNPREDICTABLE>
     898:	310c0000 	mrscc	r0, (UNDEF: 12)
     89c:	1d000000 	stcne	0, cr0, [r0, #-0]
     8a0:	00310b00 	eorseq	r0, r1, r0, lsl #22
     8a4:	08b10000 	ldmeq	r1!, {}	; <UNPREDICTABLE>
     8a8:	310c0000 	mrscc	r0, (UNDEF: 12)
     8ac:	1d000000 	stcne	0, cr0, [r0, #-0]
     8b0:	08f01d00 	ldmeq	r0!, {r8, sl, fp, ip}^
     8b4:	d603027e 			; <UNDEFINED> instruction: 0xd603027e
     8b8:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
     8bc:	00000336 	andeq	r0, r0, r6, lsr r3
     8c0:	0b029508 	bleq	a5ce8 <SCB_EnableICache+0xa5ce8>
     8c4:	00000725 	andeq	r0, r0, r5, lsr #14
     8c8:	0001c91e 	andeq	ip, r1, lr, lsl r9
     8cc:	029e0800 	addseq	r0, lr, #0, 16
     8d0:	00086a0b 	andeq	r6, r8, fp, lsl #20
     8d4:	590b0000 	stmdbpl	fp, {}	; <UNPREDICTABLE>
     8d8:	e6000001 	str	r0, [r0], -r1
     8dc:	0c000008 	stceq	0, cr0, [r0], {8}
     8e0:	00000031 	andeq	r0, r0, r1, lsr r0
     8e4:	1a070018 	bne	1c0068 <SCB_EnableICache+0x1c0068>
     8e8:	06000010 			; <UNDEFINED> instruction: 0x06000010
     8ec:	0008e604 	andeq	lr, r8, r4, lsl #12
     8f0:	08fc1f00 	ldmeq	ip!, {r8, r9, sl, fp, ip}^
     8f4:	a8170000 	ldmdage	r7, {}	; <UNPREDICTABLE>
     8f8:	00000004 	andeq	r0, r0, r4
     8fc:	08f10406 	ldmeq	r1!, {r1, r2, sl}^
     900:	04060000 	streq	r0, [r6], #-0
     904:	000001cb 	andeq	r0, r0, fp, asr #3
     908:	0009131f 	andeq	r1, r9, pc, lsl r3
     90c:	00251700 	eoreq	r1, r5, r0, lsl #14
     910:	06000000 	streq	r0, [r0], -r0
     914:	00091904 	andeq	r1, r9, r4, lsl #18
     918:	08040600 	stmdaeq	r4, {r9, sl}
     91c:	0b000009 	bleq	948 <.debug_info+0x948>
     920:	0000068a 	andeq	r0, r0, sl, lsl #13
     924:	0000092f 	andeq	r0, r0, pc, lsr #18
     928:	0000310c 	andeq	r3, r0, ip, lsl #2
     92c:	20000200 	andcs	r0, r0, r0, lsl #4
     930:	00000fcc 	andeq	r0, r0, ip, asr #31
     934:	17032e08 	strne	r2, [r3, -r8, lsl #28]
     938:	000004a8 	andeq	r0, r0, r8, lsr #9
     93c:	00133320 	andseq	r3, r3, r0, lsr #6
     940:	032f0800 			; <UNDEFINED> instruction: 0x032f0800
     944:	0004ae1d 	andeq	sl, r4, sp, lsl lr
     948:	01052100 	mrseq	r2, (UNDEF: 21)
     94c:	00000046 	andeq	r0, r0, r6, asr #32
     950:	1601320b 	strne	r3, [r1], -fp, lsl #4
     954:	2200000c 	andcs	r0, r0, #12
     958:	000011c0 	andeq	r1, r0, r0, asr #3
     95c:	0b252272 	bleq	9489d0 <SCB_EnableICache+0x9489d0>
     960:	22740000 	rsbscs	r0, r4, #0
     964:	0000160d 	andeq	r1, r0, sp, lsl #12
     968:	09d12275 	ldmibeq	r1, {r0, r2, r4, r5, r6, r9, sp}^
     96c:	22760000 	rsbscs	r0, r6, #0
     970:	000002f4 	strdeq	r0, [r0], -r4
     974:	0054227b 	subseq	r2, r4, fp, ror r2
     978:	227c0000 	rsbscs	r0, ip, #0
     97c:	000013bf 			; <UNDEFINED> instruction: 0x000013bf
     980:	117e227e 	cmnne	lr, lr, ror r2
     984:	237f0000 	cmncs	pc, #0
     988:	00000376 	andeq	r0, r0, r6, ror r3
     98c:	14ed2300 	strbtne	r2, [sp], #768	; 0x300
     990:	23010000 	movwcs	r0, #4096	; 0x1000
     994:	000005b7 			; <UNDEFINED> instruction: 0x000005b7
     998:	07e82302 	strbeq	r2, [r8, r2, lsl #6]!
     99c:	23030000 	movwcs	r0, #12288	; 0x3000
     9a0:	00000858 	andeq	r0, r0, r8, asr r8
     9a4:	01e52304 	mvneq	r2, r4, lsl #6
     9a8:	23050000 	movwcs	r0, #20480	; 0x5000
     9ac:	0000059e 	muleq	r0, lr, r5
     9b0:	05562306 	ldrbeq	r2, [r6, #-774]	; 0xfffffcfa
     9b4:	23070000 	movwcs	r0, #28672	; 0x7000
     9b8:	000004da 	ldrdeq	r0, [r0], -sl
     9bc:	0e102308 	cdpeq	3, 1, cr2, cr0, cr8, {0}
     9c0:	23090000 	movwcs	r0, #36864	; 0x9000
     9c4:	00000dc5 	andeq	r0, r0, r5, asr #27
     9c8:	0772230a 	ldrbeq	r2, [r2, -sl, lsl #6]!
     9cc:	230b0000 	movwcs	r0, #45056	; 0xb000
     9d0:	0000112b 	andeq	r1, r0, fp, lsr #2
     9d4:	10ad230c 	adcne	r2, sp, ip, lsl #6
     9d8:	230d0000 	movwcs	r0, #53248	; 0xd000
     9dc:	00001057 	andeq	r1, r0, r7, asr r0
     9e0:	039f230e 	orrseq	r2, pc, #939524096	; 0x38000000
     9e4:	230f0000 	movwcs	r0, #61440	; 0xf000
     9e8:	00000310 	andeq	r0, r0, r0, lsl r3
     9ec:	02e22310 	rsceq	r2, r2, #16, 6	; 0x40000000
     9f0:	23110000 	tstcs	r1, #0
     9f4:	000000e4 	andeq	r0, r0, r4, ror #1
     9f8:	09652312 	stmdbeq	r5!, {r1, r4, r8, r9, sp}^
     9fc:	23130000 	tstcs	r3, #0
     a00:	000007f6 	strdeq	r0, [r0], -r6
     a04:	078c2314 	usada8eq	ip, r4, r3, r2
     a08:	23150000 	tstcs	r5, #0
     a0c:	000011ac 	andeq	r1, r0, ip, lsr #3
     a10:	07b82316 			; <UNDEFINED> instruction: 0x07b82316
     a14:	23170000 	tstcs	r7, #0
     a18:	00000ac0 	andeq	r0, r0, r0, asr #21
     a1c:	12542318 	subsne	r2, r4, #24, 6	; 0x60000000
     a20:	23190000 	tstcs	r9, #0
     a24:	000013a7 	andeq	r1, r0, r7, lsr #7
     a28:	0322231a 			; <UNDEFINED> instruction: 0x0322231a
     a2c:	231b0000 	tstcs	fp, #0
     a30:	00000000 	andeq	r0, r0, r0
     a34:	15a2231c 	strne	r2, [r2, #796]!	; 0x31c
     a38:	231d0000 	tstcs	sp, #0
     a3c:	0000153a 	andeq	r1, r0, sl, lsr r5
     a40:	0ed7231e 	mrceq	3, 6, r2, cr7, cr14, {0}
     a44:	231f0000 	tstcs	pc, #0
     a48:	0000139a 	muleq	r0, sl, r3
     a4c:	0eef2320 	cdpeq	3, 14, cr2, cr15, cr0, {1}
     a50:	23210000 			; <UNDEFINED> instruction: 0x23210000
     a54:	000013cb 	andeq	r1, r0, fp, asr #7
     a58:	06fb2322 	ldrbteq	r2, [fp], r2, lsr #6
     a5c:	23230000 			; <UNDEFINED> instruction: 0x23230000
     a60:	000006c6 	andeq	r0, r0, r6, asr #13
     a64:	0efc2324 	cdpeq	3, 15, cr2, cr12, cr4, {1}
     a68:	23250000 			; <UNDEFINED> instruction: 0x23250000
     a6c:	00000eae 	andeq	r0, r0, lr, lsr #29
     a70:	0e572326 	cdpeq	3, 5, cr2, cr7, cr6, {1}
     a74:	23270000 			; <UNDEFINED> instruction: 0x23270000
     a78:	000003f4 	strdeq	r0, [r0], -r4
     a7c:	02812328 	addeq	r2, r1, #40, 6	; 0xa0000000
     a80:	23290000 			; <UNDEFINED> instruction: 0x23290000
     a84:	00000a4a 	andeq	r0, r0, sl, asr #20
     a88:	002e232a 	eoreq	r2, lr, sl, lsr #6
     a8c:	232b0000 			; <UNDEFINED> instruction: 0x232b0000
     a90:	00001480 	andeq	r1, r0, r0, lsl #9
     a94:	0cd6232c 	ldcleq	3, cr2, [r6], {44}	; 0x2c
     a98:	232d0000 			; <UNDEFINED> instruction: 0x232d0000
     a9c:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
     aa0:	0bf7232e 	bleq	ffdc8cc0 <SCB_EnableICache+0xffdc8cc0>
     aa4:	232f0000 			; <UNDEFINED> instruction: 0x232f0000
     aa8:	000014e4 	andeq	r1, r0, r4, ror #9
     aac:	156f2330 	strbne	r2, [pc, #-816]!	; fffffcd8 <SCB_EnableICache+0xfffffcd8>
     ab0:	23310000 	teqcs	r1, #0
     ab4:	0000086f 	andeq	r0, r0, pc, ror #16
     ab8:	0fa92332 	svceq	0x00a92332
     abc:	23330000 	teqcs	r3, #0
     ac0:	00000705 	andeq	r0, r0, r5, lsl #14
     ac4:	10422334 	subne	r2, r2, r4, lsr r3
     ac8:	23350000 	teqcs	r5, #0
     acc:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
     ad0:	07d42336 			; <UNDEFINED> instruction: 0x07d42336
     ad4:	23370000 	teqcs	r7, #0
     ad8:	00000de3 	andeq	r0, r0, r3, ror #27
     adc:	0d7b2338 	ldcleq	3, cr2, [fp, #-224]!	; 0xffffff20
     ae0:	23390000 	teqcs	r9, #0
     ae4:	0000012c 	andeq	r0, r0, ip, lsr #2
     ae8:	00ad233a 	adceq	r2, sp, sl, lsr r3
     aec:	233b0000 	teqcs	fp, #0
     af0:	00001286 	andeq	r1, r0, r6, lsl #5
     af4:	1175233c 	cmnne	r5, ip, lsr r3
     af8:	233d0000 	teqcs	sp, #0
     afc:	00000020 	andeq	r0, r0, r0, lsr #32
     b00:	098b233e 	stmibeq	fp, {r1, r2, r3, r4, r5, r8, r9, sp}
     b04:	233f0000 	teqcs	pc, #0
     b08:	00000b8f 	andeq	r0, r0, pc, lsl #23
     b0c:	0b702340 	bleq	1c08d08 <SCB_EnableICache+0x1c08d08>
     b10:	23410000 	movtcs	r0, #4096	; 0x1000
     b14:	00001583 	andeq	r1, r0, r3, lsl #11
     b18:	000a2342 	andeq	r2, sl, r2, asr #6
     b1c:	23430000 	movtcs	r0, #12288	; 0x3000
     b20:	000009a8 	andeq	r0, r0, r8, lsr #19
     b24:	093d2344 	ldmdbeq	sp!, {r2, r6, r8, r9, sp}
     b28:	23450000 	movtcs	r0, #20480	; 0x5000
     b2c:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     b30:	01772346 	cmneq	r7, r6, asr #6
     b34:	23470000 	movtcs	r0, #28672	; 0x7000
     b38:	00000f1b 	andeq	r0, r0, fp, lsl pc
     b3c:	13d82348 	bicsne	r2, r8, #72, 6	; 0x20000001
     b40:	23490000 	movtcs	r0, #36864	; 0x9000
     b44:	00000f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
     b48:	0514234a 	ldreq	r2, [r4, #-842]	; 0xfffffcb6
     b4c:	234b0000 	movtcs	r0, #45056	; 0xb000
     b50:	0000007f 	andeq	r0, r0, pc, ror r0
     b54:	0908234c 	stmdbeq	r8, {r2, r3, r6, r8, r9, sp}
     b58:	234d0000 	movtcs	r0, #53248	; 0xd000
     b5c:	0000025e 	andeq	r0, r0, lr, asr r2
     b60:	0561234e 	strbeq	r2, [r1, #-846]!	; 0xfffffcb2
     b64:	23500000 	cmpcs	r0, #0
     b68:	00000af5 	strdeq	r0, [r0], -r5
     b6c:	0f8a2351 	svceq	0x008a2351
     b70:	23520000 	cmpcs	r2, #0
     b74:	00000ee4 	andeq	r0, r0, r4, ror #29
     b78:	0f3c2353 	svceq	0x003c2353
     b7c:	23540000 	cmpcs	r4, #0
     b80:	00000ec8 	andeq	r0, r0, r8, asr #29
     b84:	029c2355 	addseq	r2, ip, #1409286145	; 0x54000001
     b88:	23560000 	cmpcs	r6, #0
     b8c:	0000021f 	andeq	r0, r0, pc, lsl r2
     b90:	0ea42357 	mcreq	3, 5, r2, cr4, cr7, {2}
     b94:	23580000 	cmpcs	r8, #0
     b98:	00001279 	andeq	r1, r0, r9, ror r2
     b9c:	10692359 	rsbne	r2, r9, r9, asr r3
     ba0:	235a0000 	cmpcs	sl, #0
     ba4:	000001ee 	andeq	r0, r0, lr, ror #3
     ba8:	011f235b 	tsteq	pc, fp, asr r3	; <UNPREDICTABLE>
     bac:	235c0000 	cmpcs	ip, #0
     bb0:	0000119b 	muleq	r0, fp, r1
     bb4:	1025235d 	eorne	r2, r5, sp, asr r3
     bb8:	235e0000 	cmpcs	lr, #0
     bbc:	00000f28 	andeq	r0, r0, r8, lsr #30
     bc0:	13e5235f 	mvnne	r2, #2080374785	; 0x7c000001
     bc4:	23600000 	cmncs	r0, #0
     bc8:	00000e8d 	andeq	r0, r0, sp, lsl #29
     bcc:	15442361 	strbne	r2, [r4, #-865]	; 0xfffffc9f
     bd0:	23620000 	cmncs	r2, #0
     bd4:	00000463 	andeq	r0, r0, r3, ror #8
     bd8:	040d2363 	streq	r2, [sp], #-867	; 0xfffffc9d
     bdc:	23640000 	cmncs	r4, #0
     be0:	000003cc 	andeq	r0, r0, ip, asr #7
     be4:	0cfc2365 	ldcleq	3, cr2, [ip], #404	; 0x194
     be8:	23660000 	cmncs	r6, #0
     bec:	00001508 	andeq	r1, r0, r8, lsl #10
     bf0:	05702367 	ldrbeq	r2, [r0, #-871]!	; 0xfffffc99
     bf4:	23680000 	cmncs	r8, #0
     bf8:	00000fbe 			; <UNDEFINED> instruction: 0x00000fbe
     bfc:	0f7c2369 	svceq	0x007c2369
     c00:	236a0000 	cmncs	sl, #0
     c04:	00000348 	andeq	r0, r0, r8, asr #6
     c08:	03ea236b 	mvneq	r2, #-1409286143	; 0xac000001
     c0c:	236c0000 	cmncs	ip, #0
     c10:	00000231 	andeq	r0, r0, r1, lsr r2
     c14:	4a05006d 	bmi	1401bc <SCB_EnableICache+0x1401bc>
     c18:	09000007 	stmdbeq	r0, {r0, r1, r2}
     c1c:	004d1318 	subeq	r1, sp, r8, lsl r3
     c20:	16030000 	strne	r0, [r3], -r0
     c24:	1000000c 	andne	r0, r0, ip
     c28:	00000c16 	andeq	r0, r0, r6, lsl ip
     c2c:	00011605 	andeq	r1, r1, r5, lsl #12
     c30:	14240900 	strtne	r0, [r4], #-2304	; 0xfffff700
     c34:	00000067 	andeq	r0, r0, r7, rrx
     c38:	000c2c03 	andeq	r2, ip, r3, lsl #24
     c3c:	02290500 	eoreq	r0, r9, #0, 10
     c40:	2c090000 	stccs	0, cr0, [r9], {-0}
     c44:	00007a13 	andeq	r7, r0, r3, lsl sl
     c48:	0c3d0300 	ldceq	3, cr0, [sp], #-0
     c4c:	72050000 	andvc	r0, r5, #0
     c50:	0900000d 	stmdbeq	r0, {r0, r2, r3}
     c54:	008d1430 	addeq	r1, sp, r0, lsr r4
     c58:	4e030000 	cdpmi	0, 0, cr0, cr3, cr0, {0}
     c5c:	1000000c 	andne	r0, r0, ip
     c60:	00000c5a 	andeq	r0, r0, sl, asr ip
     c64:	0102ac24 	tsteq	r2, r4, lsr #24
     c68:	440901c7 	strmi	r0, [r9], #-455	; 0xfffffe39
     c6c:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
     c70:	00001319 	andeq	r1, r0, r9, lsl r3
     c74:	1201c901 	andne	ip, r1, #16384	; 0x4000
     c78:	00000c5f 	andeq	r0, r0, pc, asr ip
     c7c:	06e71900 	strbteq	r1, [r7], r0, lsl #18
     c80:	ca010000 	bgt	40c88 <SCB_EnableICache+0x40c88>
     c84:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     c88:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     c8c:	00000394 	muleq	r0, r4, r3
     c90:	1201cb01 	andne	ip, r1, #1024	; 0x400
     c94:	00000c5a 	andeq	r0, r0, sl, asr ip
     c98:	0a0e1908 	beq	386428 <SCB_EnableICache+0x386428>
     c9c:	cc010000 	stcgt	0, cr0, [r1], {-0}
     ca0:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     ca4:	250c0000 	strcs	r0, [ip, #-0]
     ca8:	00524353 	subseq	r4, r2, r3, asr r3
     cac:	1201cd01 	andne	ip, r1, #1, 26	; 0x40
     cb0:	00000c5a 	andeq	r0, r0, sl, asr ip
     cb4:	43432510 	movtmi	r2, #13584	; 0x3510
     cb8:	ce010052 	mcrgt	0, 0, r0, cr1, cr2, {2}
     cbc:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     cc0:	19140000 	ldmdbne	r4, {}	; <UNPREDICTABLE>
     cc4:	00000c55 	andeq	r0, r0, r5, asr ip
     cc8:	1201cf01 	andne	ip, r1, #1, 30
     ccc:	00000f54 	andeq	r0, r0, r4, asr pc
     cd0:	09371918 	ldmdbeq	r7!, {r3, r4, r8, fp, ip}
     cd4:	d0010000 	andle	r0, r1, r0
     cd8:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     cdc:	19240000 	stmdbne	r4!, {}	; <UNPREDICTABLE>
     ce0:	00000f58 	andeq	r0, r0, r8, asr pc
     ce4:	1201d101 	andne	sp, r1, #1073741824	; 0x40000000
     ce8:	00000c5a 	andeq	r0, r0, sl, asr ip
     cec:	02a61928 	adceq	r1, r6, #40, 18	; 0xa0000
     cf0:	d2010000 	andle	r0, r1, #0
     cf4:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     cf8:	192c0000 	stmdbne	ip!, {}	; <UNPREDICTABLE>
     cfc:	0000041e 	andeq	r0, r0, lr, lsl r4
     d00:	1201d301 	andne	sp, r1, #67108864	; 0x4000000
     d04:	00000c5a 	andeq	r0, r0, sl, asr ip
     d08:	151d1930 	ldrne	r1, [sp, #-2352]	; 0xfffff6d0
     d0c:	d4010000 	strle	r0, [r1], #-0
     d10:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     d14:	19340000 	ldmdbne	r4!, {}	; <UNPREDICTABLE>
     d18:	000014a5 	andeq	r1, r0, r5, lsr #9
     d1c:	1201d501 	andne	sp, r1, #4194304	; 0x400000
     d20:	00000c5a 	andeq	r0, r0, sl, asr ip
     d24:	107c1938 	rsbsne	r1, ip, r8, lsr r9
     d28:	d6010000 	strle	r0, [r1], -r0
     d2c:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     d30:	193c0000 	ldmdbne	ip!, {}	; <UNPREDICTABLE>
     d34:	00001568 	andeq	r1, r0, r8, ror #10
     d38:	1201d701 	andne	sp, r1, #262144	; 0x40000
     d3c:	00000f6e 	andeq	r0, r0, lr, ror #30
     d40:	00dd1940 	sbcseq	r1, sp, r0, asr #18
     d44:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
     d48:	0c5f1201 	lfmeq	f1, 2, [pc], {1}
     d4c:	19480000 	stmdbne	r8, {}^	; <UNPREDICTABLE>
     d50:	00001097 	muleq	r0, r7, r0
     d54:	1201d901 	andne	sp, r1, #16384	; 0x4000
     d58:	00000c5f 	andeq	r0, r0, pc, asr ip
     d5c:	1446194c 	strbne	r1, [r6], #-2380	; 0xfffff6b4
     d60:	da010000 	ble	40d68 <SCB_EnableICache+0x40d68>
     d64:	0f881201 	svceq	0x00881201
     d68:	19500000 	ldmdbne	r0, {}^	; <UNPREDICTABLE>
     d6c:	00000160 	andeq	r0, r0, r0, ror #2
     d70:	1201db01 	andne	sp, r1, #1024	; 0x400
     d74:	00000fa2 	andeq	r0, r0, r2, lsr #31
     d78:	11d41960 	bicsne	r1, r4, r0, ror #18
     d7c:	dc010000 	stcle	0, cr0, [r1], {-0}
     d80:	0fa71201 	svceq	0x00a71201
     d84:	19740000 	ldmdbne	r4!, {}^	; <UNPREDICTABLE>
     d88:	00000eba 			; <UNDEFINED> instruction: 0x00000eba
     d8c:	1201dd01 	andne	sp, r1, #1, 26	; 0x40
     d90:	00000c5f 	andeq	r0, r0, pc, asr ip
     d94:	54432578 	strbpl	r2, [r3], #-1400	; 0xfffffa88
     d98:	de010052 	mcrle	0, 0, r0, cr1, cr2, {2}
     d9c:	0c5f1201 	lfmeq	f1, 2, [pc], {1}
     da0:	197c0000 	ldmdbne	ip!, {}^	; <UNPREDICTABLE>
     da4:	00000d2b 	andeq	r0, r0, fp, lsr #26
     da8:	1201df01 	andne	sp, r1, #1, 30
     dac:	00000c5f 	andeq	r0, r0, pc, asr ip
     db0:	07cd1980 	strbeq	r1, [sp, r0, lsl #19]
     db4:	e0010000 	and	r0, r1, r0
     db8:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     dbc:	19840000 	stmibne	r4, {}	; <UNPREDICTABLE>
     dc0:	000012a2 	andeq	r1, r0, r2, lsr #5
     dc4:	1201e101 	andne	lr, r1, #1073741824	; 0x40000000
     dc8:	00000c5a 	andeq	r0, r0, sl, asr ip
     dcc:	11f21988 	mvnsne	r1, r8, lsl #19
     dd0:	e2010000 	and	r0, r1, #0
     dd4:	0fb71201 	svceq	0x00b71201
     dd8:	1a8c0000 	bne	fe300de0 <SCB_EnableICache+0xfe300de0>
     ddc:	00000d3b 	andeq	r0, r0, fp, lsr sp
     de0:	1201e301 	andne	lr, r1, #67108864	; 0x4000000
     de4:	00000c5a 	andeq	r0, r0, sl, asr ip
     de8:	fc1a0200 	ldc2	2, cr0, [sl], {-0}
     dec:	01000011 	tsteq	r0, r1, lsl r0
     df0:	c71201e4 	ldrgt	r0, [r2, -r4, ror #3]
     df4:	0400000f 	streq	r0, [r0], #-15
     df8:	0c611a02 			; <UNDEFINED> instruction: 0x0c611a02
     dfc:	e5010000 	str	r0, [r1, #-0]
     e00:	0c5f1201 	lfmeq	f1, 2, [pc], {1}
     e04:	02400000 	subeq	r0, r0, #0
     e08:	000c671a 	andeq	r6, ip, sl, lsl r7
     e0c:	01e60100 	mvneq	r0, r0, lsl #2
     e10:	000c5f12 	andeq	r5, ip, r2, lsl pc
     e14:	1a024400 	bne	91e1c <SCB_EnableICache+0x91e1c>
     e18:	00000c6d 	andeq	r0, r0, sp, ror #24
     e1c:	1201e701 	andne	lr, r1, #262144	; 0x40000
     e20:	00000c5f 	andeq	r0, r0, pc, asr ip
     e24:	061a0248 	ldreq	r0, [sl], -r8, asr #4
     e28:	01000012 	tsteq	r0, r2, lsl r0
     e2c:	a71201e8 	ldrge	r0, [r2, -r8, ror #3]
     e30:	4c00000f 	stcmi	0, cr0, [r0], {15}
     e34:	08791a02 	ldmdaeq	r9!, {r1, r9, fp, ip}^
     e38:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
     e3c:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     e40:	02500000 	subseq	r0, r0, #0
     e44:	0012101a 	andseq	r1, r2, sl, lsl r0
     e48:	01ea0100 	mvneq	r0, r0, lsl #2
     e4c:	000fa712 	andeq	sl, pc, r2, lsl r7	; <UNPREDICTABLE>
     e50:	1a025400 	bne	95e58 <SCB_EnableICache+0x95e58>
     e54:	00001532 	andeq	r1, r0, r2, lsr r5
     e58:	1201eb01 	andne	lr, r1, #1024	; 0x400
     e5c:	00000c5a 	andeq	r0, r0, sl, asr ip
     e60:	081a0258 	ldmdaeq	sl, {r3, r4, r6, r9}
     e64:	01000014 	tsteq	r0, r4, lsl r0
     e68:	5a1201ec 	bpl	481620 <SCB_EnableICache+0x481620>
     e6c:	5c00000c 	stcpl	0, cr0, [r0], {12}
     e70:	142b1a02 	strtne	r1, [fp], #-2562	; 0xfffff5fe
     e74:	ed010000 	stc	0, cr0, [r1, #-0]
     e78:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     e7c:	02600000 	rsbeq	r0, r0, #0
     e80:	0000661a 	andeq	r6, r0, sl, lsl r6
     e84:	01ee0100 	mvneq	r0, r0, lsl #2
     e88:	000c5a12 	andeq	r5, ip, r2, lsl sl
     e8c:	1a026400 	bne	99e94 <SCB_EnableICache+0x99e94>
     e90:	0000004c 	andeq	r0, r0, ip, asr #32
     e94:	1201ef01 	andne	lr, r1, #1, 30
     e98:	00000c5a 	andeq	r0, r0, sl, asr ip
     e9c:	191a0268 	ldmdbne	sl, {r3, r5, r6, r9}
     ea0:	01000007 	tsteq	r0, r7
     ea4:	5a1201f0 	bpl	48166c <SCB_EnableICache+0x48166c>
     ea8:	6c00000c 	stcvs	0, cr0, [r0], {12}
     eac:	0a711a02 	beq	1c46810 <SCB_EnableICache+0x1c46810>
     eb0:	f1010000 	setend	le
     eb4:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     eb8:	02700000 	rsbseq	r0, r0, #0
     ebc:	0002ba1a 	andeq	fp, r2, sl, lsl sl
     ec0:	01f20100 	mvnseq	r0, r0, lsl #2
     ec4:	000c5a12 	andeq	r5, ip, r2, lsl sl
     ec8:	1a027400 	bne	9ded0 <SCB_EnableICache+0x9ded0>
     ecc:	0000121a 	andeq	r1, r0, sl, lsl r2
     ed0:	1201f301 	andne	pc, r1, #67108864	; 0x4000000
     ed4:	00000fd7 	ldrdeq	r0, [r0], -r7
     ed8:	041a0278 	ldreq	r0, [sl], #-632	; 0xfffffd88
     edc:	01000008 	tsteq	r0, r8
     ee0:	5a1201f4 	bpl	4816b8 <SCB_EnableICache+0x4816b8>
     ee4:	9000000c 	andls	r0, r0, ip
     ee8:	0c5a1a02 	mrrceq	10, 0, r1, sl, cr2
     eec:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
     ef0:	0c5a1201 	lfmeq	f1, 2, [sl], {1}
     ef4:	02940000 	addseq	r0, r4, #0
     ef8:	0004d31a 	andeq	sp, r4, sl, lsl r3
     efc:	01f60100 	mvnseq	r0, r0, lsl #2
     f00:	000c5a12 	andeq	r5, ip, r2, lsl sl
     f04:	1a029800 	bne	a6f0c <SCB_EnableICache+0xa6f0c>
     f08:	00001523 	andeq	r1, r0, r3, lsr #10
     f0c:	1201f701 	andne	pc, r1, #262144	; 0x40000
     f10:	00000c5a 	andeq	r0, r0, sl, asr ip
     f14:	0a1a029c 	beq	680a78 <SCB_EnableICache+0x680a78>
     f18:	0100000b 	tsteq	r0, fp
     f1c:	5a1201f8 	bpl	481704 <SCB_EnableICache+0x481704>
     f20:	a000000c 	andge	r0, r0, ip
     f24:	12241a02 	eorne	r1, r4, #8192	; 0x2000
     f28:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
     f2c:	0fa71201 	svceq	0x00a71201
     f30:	02a40000 	adceq	r0, r4, #0
     f34:	0004231a 	andeq	r2, r4, sl, lsl r3
     f38:	01fa0100 	mvnseq	r0, r0, lsl #2
     f3c:	000c5a12 	andeq	r5, ip, r2, lsl sl
     f40:	0002a800 	andeq	sl, r2, r0, lsl #16
     f44:	000c220b 	andeq	r2, ip, fp, lsl #4
     f48:	000f5400 	andeq	r5, pc, r0, lsl #8
     f4c:	00310c00 	eorseq	r0, r1, r0, lsl #24
     f50:	000b0000 	andeq	r0, fp, r0
     f54:	000f4403 	andeq	r4, pc, r3, lsl #8
     f58:	0c5f0b00 	mrrceq	11, 0, r0, pc, cr0	; <UNPREDICTABLE>
     f5c:	0f690000 	svceq	0x00690000
     f60:	310c0000 	mrscc	r0, (UNDEF: 12)
     f64:	01000000 	mrseq	r0, (UNDEF: 0)
     f68:	0f591000 	svceq	0x00591000
     f6c:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
     f70:	0b00000f 	bleq	fb4 <.debug_info+0xfb4>
     f74:	00000c5f 	andeq	r0, r0, pc, asr ip
     f78:	00000f83 	andeq	r0, r0, r3, lsl #31
     f7c:	0000310c 	andeq	r3, r0, ip, lsl #2
     f80:	10000300 	andne	r0, r0, r0, lsl #6
     f84:	00000f73 	andeq	r0, r0, r3, ror pc
     f88:	000f8303 	andeq	r8, pc, r3, lsl #6
     f8c:	0c5f0b00 	mrrceq	11, 0, r0, pc, cr0	; <UNPREDICTABLE>
     f90:	0f9d0000 	svceq	0x009d0000
     f94:	310c0000 	mrscc	r0, (UNDEF: 12)
     f98:	04000000 	streq	r0, [r0], #-0
     f9c:	0f8d1000 	svceq	0x008d1000
     fa0:	9d030000 	stcls	0, cr0, [r3, #-0]
     fa4:	0b00000f 	bleq	fe8 <.debug_info+0xfe8>
     fa8:	00000c4e 	andeq	r0, r0, lr, asr #24
     fac:	00000fb7 			; <UNDEFINED> instruction: 0x00000fb7
     fb0:	0000310c 	andeq	r3, r0, ip, lsl #2
     fb4:	0b000000 	bleq	fbc <.debug_info+0xfbc>
     fb8:	00000c4e 	andeq	r0, r0, lr, asr #24
     fbc:	00000fc7 	andeq	r0, r0, r7, asr #31
     fc0:	0000310c 	andeq	r3, r0, ip, lsl #2
     fc4:	0b005c00 	bleq	17fcc <SCB_EnableICache+0x17fcc>
     fc8:	00000c4e 	andeq	r0, r0, lr, asr #24
     fcc:	00000fd7 	ldrdeq	r0, [r0], -r7
     fd0:	0000310c 	andeq	r3, r0, ip, lsl #2
     fd4:	0b000e00 	bleq	47dc <SCB_EnableICache+0x47dc>
     fd8:	00000c4e 	andeq	r0, r0, lr, asr #24
     fdc:	00000fe7 	andeq	r0, r0, r7, ror #31
     fe0:	0000310c 	andeq	r3, r0, ip, lsl #2
     fe4:	08000500 	stmdaeq	r0, {r8, sl}
     fe8:	00000bc9 	andeq	r0, r0, r9, asr #23
     fec:	0301fb01 	movweq	pc, #6913	; 0x1b01	; <UNPREDICTABLE>
     ff0:	00000c64 	andeq	r0, r0, r4, ror #24
     ff4:	000c4e0b 	andeq	r4, ip, fp, lsl #28
     ff8:	00100400 	andseq	r0, r0, r0, lsl #8
     ffc:	00310c00 	eorseq	r0, r1, r0, lsl #24
    1000:	00010000 	andeq	r0, r1, r0
    1004:	0012a820 	andseq	sl, r2, r0, lsr #16
    1008:	0a220100 	beq	881410 <SCB_EnableICache+0x881410>
    100c:	000c4919 	andeq	r4, ip, r9, lsl r9
    1010:	0be72600 	bleq	ff9c9808 <SCB_EnableICache+0xff9c9808>
    1014:	4a0a0000 	bmi	28101c <SCB_EnableICache+0x28101c>
    1018:	000c4e11 	andeq	r4, ip, r1, lsl lr
    101c:	0c270b00 			; <UNDEFINED> instruction: 0x0c270b00
    1020:	102d0000 	eorne	r0, sp, r0
    1024:	310c0000 	mrscc	r0, (UNDEF: 12)
    1028:	0f000000 	svceq	0x00000000
    102c:	101d1000 	andsne	r1, sp, r0
    1030:	38260000 	stmdacc	r6!, {}	; <UNPREDICTABLE>
    1034:	0a000014 	beq	108c <.debug_info+0x108c>
    1038:	102d174c 	eorne	r1, sp, ip, asr #14
    103c:	270b0000 	strcs	r0, [fp, -r0]
    1040:	4e00000c 	cdpmi	0, 0, cr0, cr0, cr12, {0}
    1044:	0c000010 	stceq	0, cr0, [r0], {16}
    1048:	00000031 	andeq	r0, r0, r1, lsr r0
    104c:	3e100007 	cdpcc	0, 1, cr0, cr0, cr7, {0}
    1050:	26000010 			; <UNDEFINED> instruction: 0x26000010
    1054:	00000e7f 	andeq	r0, r0, pc, ror lr
    1058:	4e174d0a 	cdpmi	13, 1, cr4, cr7, cr10, {0}
    105c:	1c000010 	stcne	0, cr0, [r0], {16}
    1060:	01a30b18 			; <UNDEFINED> instruction: 0x01a30b18
    1064:	0010bd09 	andseq	fp, r0, r9, lsl #26
    1068:	52432500 	subpl	r2, r3, #0, 10
    106c:	01a50b00 			; <UNDEFINED> instruction: 0x01a50b00
    1070:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1074:	e3190000 	tst	r9, #0
    1078:	0b000012 	bleq	10c8 <.debug_info+0x10c8>
    107c:	5a1101a6 	bpl	44171c <SCB_EnableICache+0x44171c>
    1080:	0400000c 	streq	r0, [r0], #-12
    1084:	52415025 	subpl	r5, r1, #37	; 0x25
    1088:	01a70b00 			; <UNDEFINED> instruction: 0x01a70b00
    108c:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1090:	52190800 	andspl	r0, r9, #0, 16
    1094:	0b000002 	bleq	10a4 <.debug_info+0x10a4>
    1098:	5a1101a8 	bpl	441740 <SCB_EnableICache+0x441740>
    109c:	0c00000c 	stceq	0, cr0, [r0], {12}
    10a0:	00047419 	andeq	r7, r4, r9, lsl r4
    10a4:	01a90b00 			; <UNDEFINED> instruction: 0x01a90b00
    10a8:	000c5a11 	andeq	r5, ip, r1, lsl sl
    10ac:	46251000 	strtmi	r1, [r5], -r0
    10b0:	0b005243 	bleq	159c4 <SCB_EnableICache+0x159c4>
    10b4:	5a1101aa 	bpl	441764 <SCB_EnableICache+0x441764>
    10b8:	1400000c 	strne	r0, [r0], #-12
    10bc:	04790800 	ldrbteq	r0, [r9], #-2048	; 0xfffff800
    10c0:	ab0b0000 	blge	2c10c8 <SCB_EnableICache+0x2c10c8>
    10c4:	105f0301 	subsne	r0, pc, r1, lsl #6
    10c8:	5a0b0000 	bpl	2c10d0 <SCB_EnableICache+0x2c10d0>
    10cc:	da00000c 	ble	1104 <.debug_info+0x1104>
    10d0:	0c000010 	stceq	0, cr0, [r0], {16}
    10d4:	00000031 	andeq	r0, r0, r1, lsr r0
    10d8:	ca030001 	bgt	c10e4 <SCB_EnableICache+0xc10e4>
    10dc:	1c000010 	stcne	0, cr0, [r0], {16}
    10e0:	02710b28 	rsbseq	r0, r1, #40, 22	; 0xa000
    10e4:	00116809 	andseq	r6, r1, r9, lsl #16
    10e8:	11ba1900 			; <UNDEFINED> instruction: 0x11ba1900
    10ec:	730b0000 	movwvc	r0, #45056	; 0xb000
    10f0:	0c5a1102 	ldfeqe	f1, [sl], {2}
    10f4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    10f8:	00000201 	andeq	r0, r0, r1, lsl #4
    10fc:	1102740b 	tstne	r2, fp, lsl #8
    1100:	00000c5a 	andeq	r0, r0, sl, asr ip
    1104:	08101904 	ldmdaeq	r0, {r2, r8, fp, ip}
    1108:	750b0000 	strvc	r0, [fp, #-0]
    110c:	0c5a1102 	ldfeqe	f1, [sl], {2}
    1110:	19080000 	stmdbne	r8, {}	; <UNPREDICTABLE>
    1114:	00001155 	andeq	r1, r0, r5, asr r1
    1118:	1102760b 	tstne	r2, fp, lsl #12
    111c:	00000c5a 	andeq	r0, r0, sl, asr ip
    1120:	4449250c 	strbmi	r2, [r9], #-1292	; 0xfffffaf4
    1124:	770b0052 	smlsdvc	fp, r2, r0, r0
    1128:	0c5a1102 	ldfeqe	f1, [sl], {2}
    112c:	25100000 	ldrcs	r0, [r0, #-0]
    1130:	0052444f 	subseq	r4, r2, pc, asr #8
    1134:	1102780b 	tstne	r2, fp, lsl #16
    1138:	00000c5a 	andeq	r0, r0, sl, asr ip
    113c:	0a141914 	beq	506458 <SCB_EnableICache+0x506458>
    1140:	790b0000 	stmdbvc	fp, {}	; <UNPREDICTABLE>
    1144:	0c5a1102 	ldfeqe	f1, [sl], {2}
    1148:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    114c:	00000d6d 	andeq	r0, r0, sp, ror #26
    1150:	11027a0b 	tstne	r2, fp, lsl #20
    1154:	00000c5a 	andeq	r0, r0, sl, asr ip
    1158:	4641251c 			; <UNDEFINED> instruction: 0x4641251c
    115c:	7b0b0052 	blvc	2c12ac <SCB_EnableICache+0x2c12ac>
    1160:	10da1102 	sbcsne	r1, sl, r2, lsl #2
    1164:	00200000 	eoreq	r0, r0, r0
    1168:	000bd208 	andeq	sp, fp, r8, lsl #4
    116c:	027c0b00 	rsbseq	r0, ip, #0, 22
    1170:	0010df03 	andseq	sp, r0, r3, lsl #30
    1174:	0b101c00 	bleq	40817c <SCB_EnableICache+0x40817c>
    1178:	b80902e1 	stmdalt	r9, {r0, r5, r6, r7, r9}
    117c:	25000011 	strcs	r0, [r0, #-17]	; 0xffffffef
    1180:	00315243 	eorseq	r5, r1, r3, asr #4
    1184:	1102e30b 	tstne	r2, fp, lsl #6
    1188:	00000c5a 	andeq	r0, r0, sl, asr ip
    118c:	14cc1900 	strbne	r1, [ip], #2304	; 0x900
    1190:	e40b0000 	str	r0, [fp], #-0
    1194:	0c5a1102 	ldfeqe	f1, [sl], {2}
    1198:	25040000 	strcs	r0, [r4, #-0]
    119c:	00325243 	eorseq	r5, r2, r3, asr #4
    11a0:	1102e50b 	tstne	r2, fp, lsl #10
    11a4:	00000c5a 	andeq	r0, r0, sl, asr ip
    11a8:	14d11908 	ldrbne	r1, [r1], #2312	; 0x908
    11ac:	e60b0000 	str	r0, [fp], -r0
    11b0:	0c5a1102 	ldfeqe	f1, [sl], {2}
    11b4:	000c0000 	andeq	r0, ip, r0
    11b8:	00147408 	andseq	r7, r4, r8, lsl #8
    11bc:	02e70b00 	rsceq	r0, r7, #0, 22
    11c0:	00117503 	andseq	r7, r1, r3, lsl #10
    11c4:	0b941c00 	bleq	fe5081cc <SCB_EnableICache+0xfe5081cc>
    11c8:	9d0902ee 	sfmls	f0, 4, [r9, #-952]	; 0xfffffc48
    11cc:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    11d0:	0b005243 	bleq	15ae4 <SCB_EnableICache+0x15ae4>
    11d4:	5a1102f0 	bpl	441d9c <SCB_EnableICache+0x441d9c>
    11d8:	0000000c 	andeq	r0, r0, ip
    11dc:	00107419 	andseq	r7, r0, r9, lsl r4
    11e0:	02f10b00 	rscseq	r0, r1, #0, 22
    11e4:	000c5a11 	andeq	r5, ip, r1, lsl sl
    11e8:	f0190400 			; <UNDEFINED> instruction: 0xf0190400
    11ec:	0b00000a 	bleq	121c <.debug_info+0x121c>
    11f0:	5a1102f2 	bpl	441dc0 <SCB_EnableICache+0x441dc0>
    11f4:	0800000c 	stmdaeq	r0, {r2, r3}
    11f8:	52494325 	subpl	r4, r9, #-1811939328	; 0x94000000
    11fc:	02f30b00 	rscseq	r0, r3, #0, 22
    1200:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1204:	99190c00 	ldmdbls	r9, {sl, fp}
    1208:	0b000015 	bleq	1264 <.debug_info+0x1264>
    120c:	5a1102f4 	bpl	441de4 <SCB_EnableICache+0x441de4>
    1210:	1000000c 	andne	r0, r0, ip
    1214:	0006af19 	andeq	sl, r6, r9, lsl pc
    1218:	02f50b00 	rscseq	r0, r5, #0, 22
    121c:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1220:	32191400 	andscc	r1, r9, #0, 8
    1224:	0b00000d 	bleq	1260 <.debug_info+0x1260>
    1228:	5a1102f6 	bpl	441e08 <SCB_EnableICache+0x441e08>
    122c:	1800000c 	stmdane	r0, {r2, r3}
    1230:	0011d419 	andseq	sp, r1, r9, lsl r4
    1234:	02f70b00 	rscseq	r0, r7, #0, 22
    1238:	000c4e11 	andeq	r4, ip, r1, lsl lr
    123c:	ca191c00 	bgt	647008 <SCB_EnableICache+0x647008>
    1240:	0b000002 	bleq	1250 <.debug_info+0x1250>
    1244:	5a1102f8 	bpl	441e2c <SCB_EnableICache+0x441e2c>
    1248:	2000000c 	andcs	r0, r0, ip
    124c:	00095c19 	andeq	r5, r9, r9, lsl ip
    1250:	02f90b00 	rscseq	r0, r9, #0, 22
    1254:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1258:	de192400 	cfmulsle	mvf2, mvf9, mvf0
    125c:	0b000011 	bleq	12a8 <.debug_info+0x12a8>
    1260:	f41102fa 			; <UNDEFINED> instruction: 0xf41102fa
    1264:	2800000f 	stmdacs	r0, {r0, r1, r2, r3}
    1268:	000ab819 	andeq	fp, sl, r9, lsl r8
    126c:	02fb0b00 	rscseq	r0, fp, #0, 22
    1270:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1274:	91193000 	tstls	r9, r0
    1278:	0b000015 	bleq	12d4 <.debug_info+0x12d4>
    127c:	5a1102fc 	bpl	441e74 <SCB_EnableICache+0x441e74>
    1280:	3400000c 	strcc	r0, [r0], #-12
    1284:	000a0619 	andeq	r0, sl, r9, lsl r6
    1288:	02fd0b00 	rscseq	r0, sp, #0, 22
    128c:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1290:	e8193800 	ldmda	r9, {fp, ip, sp}
    1294:	0b000011 	bleq	12e0 <.debug_info+0x12e0>
    1298:	4e1102fe 	mrcmi	2, 0, r0, cr1, cr14, {7}
    129c:	3c00000c 	stccc	0, cr0, [r0], {12}
    12a0:	00078419 	andeq	r8, r7, r9, lsl r4
    12a4:	02ff0b00 	rscseq	r0, pc, #0, 22
    12a8:	000c5a11 	andeq	r5, ip, r1, lsl sl
    12ac:	dd194000 	ldcle	0, cr4, [r9, #-0]
    12b0:	0b000003 	bleq	12c4 <.debug_info+0x12c4>
    12b4:	5a110300 	bpl	441ebc <SCB_EnableICache+0x441ebc>
    12b8:	4400000c 	strmi	r0, [r0], #-12
    12bc:	0011f219 	andseq	pc, r1, r9, lsl r2	; <UNPREDICTABLE>
    12c0:	03010b00 	movweq	r0, #6912	; 0x1b00
    12c4:	000ff411 	andeq	pc, pc, r1, lsl r4	; <UNPREDICTABLE>
    12c8:	cc194800 	ldcgt	8, cr4, [r9], {-0}
    12cc:	0b000012 	bleq	131c <.debug_info+0x131c>
    12d0:	5a110302 	bpl	441ee0 <SCB_EnableICache+0x441ee0>
    12d4:	5000000c 	andpl	r0, r0, ip
    12d8:	00058719 	andeq	r8, r5, r9, lsl r7
    12dc:	03030b00 	movweq	r0, #15104	; 0x3b00
    12e0:	000c5a11 	andeq	r5, ip, r1, lsl sl
    12e4:	38195400 	ldmdacc	r9, {sl, ip, lr}
    12e8:	0b000005 	bleq	1304 <.debug_info+0x1304>
    12ec:	5a110304 	bpl	441f04 <SCB_EnableICache+0x441f04>
    12f0:	5800000c 	stmdapl	r0, {r2, r3}
    12f4:	0011fc19 	andseq	pc, r1, r9, lsl ip	; <UNPREDICTABLE>
    12f8:	03050b00 	movweq	r0, #23296	; 0x5b00
    12fc:	000c4e11 	andeq	r4, ip, r1, lsl lr
    1300:	51195c00 	tstpl	r9, r0, lsl #24
    1304:	0b00000d 	bleq	1340 <.debug_info+0x1340>
    1308:	5a110306 	bpl	441f28 <SCB_EnableICache+0x441f28>
    130c:	6000000c 	andvs	r0, r0, ip
    1310:	00138719 	andseq	r8, r3, r9, lsl r7
    1314:	03070b00 	movweq	r0, #31488	; 0x7b00
    1318:	000c5a11 	andeq	r5, ip, r1, lsl sl
    131c:	06196400 	ldreq	r6, [r9], -r0, lsl #8
    1320:	0b000012 	bleq	1370 <.debug_info+0x1370>
    1324:	f4110308 			; <UNDEFINED> instruction: 0xf4110308
    1328:	6800000f 	stmdavs	r0, {r0, r1, r2, r3}
    132c:	00113d19 	andseq	r3, r1, r9, lsl sp
    1330:	03090b00 	movweq	r0, #39680	; 0x9b00
    1334:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1338:	43257000 			; <UNDEFINED> instruction: 0x43257000
    133c:	0b005253 	bleq	15c90 <SCB_EnableICache+0x15c90>
    1340:	5a11030a 	bpl	441f70 <SCB_EnableICache+0x441f70>
    1344:	7400000c 	strvc	r0, [r0], #-12
    1348:	00121019 	andseq	r1, r2, r9, lsl r0
    134c:	030b0b00 	movweq	r0, #47872	; 0xbb00
    1350:	000ff411 	andeq	pc, pc, r1, lsl r4	; <UNPREDICTABLE>
    1354:	7e197800 	cdpvc	8, 1, cr7, cr9, cr0, {0}
    1358:	0b00000b 	bleq	138c <.debug_info+0x138c>
    135c:	5a11030c 	bpl	441f94 <SCB_EnableICache+0x441f94>
    1360:	8000000c 	andhi	r0, r0, ip
    1364:	000c8919 	andeq	r8, ip, r9, lsl r9
    1368:	030d0b00 	movweq	r0, #56064	; 0xdb00
    136c:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1370:	84198400 	ldrhi	r8, [r9], #-1024	; 0xfffffc00
    1374:	0b00000b 	bleq	13a8 <.debug_info+0x13a8>
    1378:	5a11030e 	bpl	441fb8 <SCB_EnableICache+0x441fb8>
    137c:	8800000c 	stmdahi	r0, {r2, r3}
    1380:	00126719 	andseq	r6, r2, r9, lsl r7
    1384:	030f0b00 	movweq	r0, #64256	; 0xfb00
    1388:	000c5a11 	andeq	r5, ip, r1, lsl sl
    138c:	70198c00 	andsvc	r8, r9, r0, lsl #24
    1390:	0b000012 	bleq	13e0 <.debug_info+0x13e0>
    1394:	5a110310 	bpl	441fdc <SCB_EnableICache+0x441fdc>
    1398:	9000000c 	andls	r0, r0, ip
    139c:	00bf0800 	adcseq	r0, pc, r0, lsl #16
    13a0:	120b0000 	andne	r0, fp, #0
    13a4:	11c50303 	bicne	r0, r5, r3, lsl #6
    13a8:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    13ac:	0903ee0b 	stmdbeq	r3, {r0, r1, r3, r9, sl, fp, sp, lr, pc}
    13b0:	0000144f 	andeq	r1, r0, pc, asr #8
    13b4:	31524325 	cmpcc	r2, r5, lsr #6
    13b8:	03f00b00 	mvnseq	r0, #0, 22
    13bc:	000c5a11 	andeq	r5, ip, r1, lsl sl
    13c0:	43250000 			; <UNDEFINED> instruction: 0x43250000
    13c4:	0b003252 	bleq	dd14 <SCB_EnableICache+0xdd14>
    13c8:	5a1103f1 	bpl	442394 <SCB_EnableICache+0x442394>
    13cc:	0400000c 	streq	r0, [r0], #-12
    13d0:	33524325 	cmpcc	r2, #-1811939328	; 0x94000000
    13d4:	03f20b00 	mvnseq	r0, #0, 22
    13d8:	000c5a11 	andeq	r5, ip, r1, lsl sl
    13dc:	42250800 	eormi	r0, r5, #0, 16
    13e0:	0b005252 	bleq	15d30 <SCB_EnableICache+0x15d30>
    13e4:	5a1103f3 	bpl	4423b8 <SCB_EnableICache+0x4423b8>
    13e8:	0c00000c 	stceq	0, cr0, [r0], {12}
    13ec:	00080b19 	andeq	r0, r8, r9, lsl fp
    13f0:	03f40b00 	mvnseq	r0, #0, 22
    13f4:	000c5a11 	andeq	r5, ip, r1, lsl sl
    13f8:	fb191000 	blx	64400a <SCB_EnableICache+0x64400a>
    13fc:	0b000004 	bleq	1414 <.debug_info+0x1414>
    1400:	5a1103f5 	bpl	4423dc <SCB_EnableICache+0x4423dc>
    1404:	1400000c 	strne	r0, [r0], #-12
    1408:	52515225 	subspl	r5, r1, #1342177282	; 0x50000002
    140c:	03f60b00 	mvnseq	r0, #0, 22
    1410:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1414:	49251800 	stmdbmi	r5!, {fp, ip}
    1418:	0b005253 	bleq	15d6c <SCB_EnableICache+0x15d6c>
    141c:	5a1103f7 	bpl	442400 <SCB_EnableICache+0x442400>
    1420:	1c00000c 	stcne	0, cr0, [r0], {12}
    1424:	52434925 	subpl	r4, r3, #606208	; 0x94000
    1428:	03f80b00 	mvnseq	r0, #0, 22
    142c:	000c5a11 	andeq	r5, ip, r1, lsl sl
    1430:	52252000 	eorpl	r2, r5, #0
    1434:	0b005244 	bleq	15d4c <SCB_EnableICache+0x15d4c>
    1438:	5a1103f9 	bpl	442424 <SCB_EnableICache+0x442424>
    143c:	2400000c 	strcs	r0, [r0], #-12
    1440:	52445425 	subpl	r5, r4, #620756992	; 0x25000000
    1444:	03fa0b00 	mvnseq	r0, #0, 22
    1448:	000c5a11 	andeq	r5, ip, r1, lsl sl
    144c:	08002800 	stmdaeq	r0, {fp, sp}
    1450:	00000cee 	andeq	r0, r0, lr, ror #25
    1454:	0303fb0b 	movweq	pc, #15115	; 0x3b0b	; <UNPREDICTABLE>
    1458:	000013aa 	andeq	r1, r0, sl, lsr #7
    145c:	59010721 	stmdbpl	r1, {r0, r5, r8, r9, sl}
    1460:	0c000000 	stceq	0, cr0, [r0], {-0}
    1464:	14830128 	strne	r0, [r3], #296	; 0x128
    1468:	c7230000 	strgt	r0, [r3, -r0]!
    146c:	00000005 	andeq	r0, r0, r5
    1470:	0010fa23 	andseq	pc, r0, r3, lsr #20
    1474:	c1230100 			; <UNDEFINED> instruction: 0xc1230100
    1478:	02000002 	andeq	r0, r0, #2
    147c:	000afe23 	andeq	pc, sl, r3, lsr #28
    1480:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
    1484:	00000f46 	andeq	r0, r0, r6, asr #30
    1488:	5c032d0c 	stcpl	13, cr2, [r3], {12}
    148c:	21000014 	tstcs	r0, r4, lsl r0
    1490:	00590107 	subseq	r0, r9, r7, lsl #2
    1494:	330c0000 	movwcc	r0, #49152	; 0xc000
    1498:	0014aa01 	andseq	sl, r4, r1, lsl #20
    149c:	07262300 	streq	r2, [r6, -r0, lsl #6]!
    14a0:	23000000 	movwcs	r0, #0
    14a4:	000015ac 	andeq	r1, r0, ip, lsr #11
    14a8:	99050001 	stmdbls	r5, {r0}
    14ac:	0c000006 	stceq	0, cr0, [r0], {6}
    14b0:	148f0336 	strne	r0, [pc], #822	; 14b8 <.debug_info+0x14b8>
    14b4:	1c0d0000 	stcne	0, cr0, [sp], {-0}
    14b8:	1b092f0d 	blne	24d0f4 <SCB_EnableICache+0x24d0f4>
    14bc:	0e000015 	mcreq	0, 0, r0, cr0, cr5, {0}
    14c0:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    14c4:	4e0c310d 	adfmie	f3, f4, #5.0
    14c8:	0000000c 	andeq	r0, r0, ip
    14cc:	0007ae0e 	andeq	sl, r7, lr, lsl #28
    14d0:	0c340d00 	ldceq	13, cr0, [r4], #-0
    14d4:	00000c4e 	andeq	r0, r0, lr, asr #24
    14d8:	09720e04 	ldmdbeq	r2!, {r2, r9, sl, fp}^
    14dc:	370d0000 	strcc	r0, [sp, -r0]
    14e0:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    14e4:	770e0800 	strvc	r0, [lr, -r0, lsl #16]
    14e8:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
    14ec:	0c4e0c3a 	mcrreq	12, 3, r0, lr, cr10
    14f0:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    14f4:	0000097c 	andeq	r0, r0, ip, ror r9
    14f8:	4e0c3d0d 	cdpmi	13, 0, cr3, cr12, cr13, {0}
    14fc:	1000000c 	andne	r0, r0, ip
    1500:	0009810e 	andeq	r8, r9, lr, lsl #2
    1504:	0c400d00 	mcrreq	13, 0, r0, r0, cr0
    1508:	00000c4e 	andeq	r0, r0, lr, asr #24
    150c:	09860e14 	stmibeq	r6, {r2, r4, r9, sl, fp}
    1510:	430d0000 	movwmi	r0, #53248	; 0xd000
    1514:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    1518:	05001800 	streq	r1, [r0, #-2048]	; 0xfffff800
    151c:	00001142 	andeq	r1, r0, r2, asr #2
    1520:	b602470d 	strlt	r4, [r2], -sp, lsl #14
    1524:	0d000014 	stceq	0, cr0, [r0, #-80]	; 0xffffffb0
    1528:	09340e34 	ldmdbeq	r4!, {r2, r4, r5, r9, sl, fp}
    152c:	0000158c 	andeq	r1, r0, ip, lsl #11
    1530:	0003670e 	andeq	r6, r3, lr, lsl #14
    1534:	0c360e00 	ldceq	14, cr0, [r6], #-0
    1538:	00000c4e 	andeq	r0, r0, lr, asr #24
    153c:	0e9b0e00 	cdpeq	14, 9, cr0, cr11, cr0, {0}
    1540:	390e0000 	stmdbcc	lr, {}	; <UNPREDICTABLE>
    1544:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    1548:	490e0400 	stmdbmi	lr, {sl}
    154c:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    1550:	0c4e0c3c 	mcrreq	12, 3, r0, lr, cr12
    1554:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    1558:	00000157 	andeq	r0, r0, r7, asr r1
    155c:	4e0c3f0e 	cdpmi	15, 0, cr3, cr12, cr14, {0}
    1560:	0c00000c 	stceq	0, cr0, [r0], {12}
    1564:	00075e0e 	andeq	r5, r7, lr, lsl #28
    1568:	0c420e00 	mcrreq	14, 0, r0, r2, cr0
    156c:	00000c4e 	andeq	r0, r0, lr, asr #24
    1570:	0cb80e10 	ldceq	14, cr0, [r8], #64	; 0x40
    1574:	450e0000 	strmi	r0, [lr, #-0]
    1578:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    157c:	50121400 	andspl	r1, r2, r0, lsl #8
    1580:	0e004c4c 	cdpeq	12, 0, cr4, cr0, cr12, {2}
    1584:	151b1648 	ldrne	r1, [fp, #-1608]	; 0xfffff9b8
    1588:	00180000 	andseq	r0, r8, r0
    158c:	0008ba05 	andeq	fp, r8, r5, lsl #20
    1590:	024a0e00 	subeq	r0, sl, #0, 28
    1594:	00001527 	andeq	r1, r0, r7, lsr #10
    1598:	4f0e140d 	svcmi	0x000e140d
    159c:	0015e309 	andseq	lr, r5, r9, lsl #6
    15a0:	01a90e00 			; <UNDEFINED> instruction: 0x01a90e00
    15a4:	510e0000 	mrspl	r0, (UNDEF: 14)
    15a8:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    15ac:	f80e0000 			; <UNDEFINED> instruction: 0xf80e0000
    15b0:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    15b4:	0c4e0c54 	mcrreq	12, 5, r0, lr, cr4
    15b8:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    15bc:	00000183 	andeq	r0, r0, r3, lsl #3
    15c0:	4e0c570e 	cdpmi	7, 0, cr5, cr12, cr14, {0}
    15c4:	0800000c 	stmdaeq	r0, {r2, r3}
    15c8:	0005470e 	andeq	r4, r5, lr, lsl #14
    15cc:	0c5a0e00 	mrrceq	14, 0, r0, sl, cr0
    15d0:	00000c4e 	andeq	r0, r0, lr, asr #24
    15d4:	02ab0e0c 	adceq	r0, fp, #12, 28	; 0xc0
    15d8:	5d0e0000 	stcpl	0, cr0, [lr, #-0]
    15dc:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    15e0:	05001000 	streq	r1, [r0, #-0]
    15e4:	00000db2 			; <UNDEFINED> instruction: 0x00000db2
    15e8:	9802600e 	stmdals	r2, {r1, r2, r3, sp, lr}
    15ec:	0d000015 	stceq	0, cr0, [r0, #-84]	; 0xffffffac
    15f0:	092f0f14 	stmdbeq	pc!, {r2, r4, r8, r9, sl, fp}	; <UNPREDICTABLE>
    15f4:	0000163a 	andeq	r1, r0, sl, lsr r6
    15f8:	6e695012 	mcrvs	0, 3, r5, cr9, cr2, {0}
    15fc:	0c310f00 	ldceq	15, cr0, [r1], #-0
    1600:	00000c4e 	andeq	r0, r0, lr, asr #24
    1604:	11700e00 	cmnne	r0, r0, lsl #28
    1608:	340f0000 	strcc	r0, [pc], #-0	; 1610 <.debug_info+0x1610>
    160c:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    1610:	c70e0400 	strgt	r0, [lr, -r0, lsl #8]
    1614:	0f000014 	svceq	0x00000014
    1618:	0c4e0c37 	mcrreq	12, 3, r0, lr, cr7
    161c:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    1620:	000006f5 	strdeq	r0, [r0], -r5
    1624:	4e0c3a0f 	vmlami.f32	s6, s24, s30
    1628:	0c00000c 	stceq	0, cr0, [r0], {12}
    162c:	00057d0e 	andeq	r7, r5, lr, lsl #26
    1630:	0c3d0f00 	ldceq	15, cr0, [sp], #-0
    1634:	00000c4e 	andeq	r0, r0, lr, asr #24
    1638:	d5050010 	strle	r0, [r5, #-16]
    163c:	0f000008 	svceq	0x00000008
    1640:	15ef023f 	strbne	r0, [pc, #575]!	; 1887 <.debug_info+0x1887>
    1644:	300d0000 	andcc	r0, sp, r0
    1648:	ec093110 	stfs	f3, [r9], {16}
    164c:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    1650:	00001089 	andeq	r1, r0, r9, lsl #1
    1654:	4e0c3310 	mcrmi	3, 0, r3, cr12, cr0, {0}
    1658:	0000000c 	andeq	r0, r0, ip
    165c:	0003060e 	andeq	r0, r3, lr, lsl #12
    1660:	0c361000 	ldceq	0, cr1, [r6], #-0
    1664:	00000c4e 	andeq	r0, r0, lr, asr #24
    1668:	0d950e04 	ldceq	14, cr0, [r5, #16]
    166c:	3a100000 	bcc	401674 <SCB_EnableICache+0x401674>
    1670:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    1674:	1b0e0800 	blne	382008 <SCB_EnableICache+0x382008>
    1678:	1000000e 	andne	r0, r0, lr
    167c:	0c4e0c3d 	mcrreq	12, 3, r0, lr, cr13
    1680:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    1684:	0000079a 	muleq	r0, sl, r7
    1688:	4e0c4010 	mcrmi	0, 0, r4, cr12, cr0, {0}
    168c:	1000000c 	andne	r0, r0, ip
    1690:	000e630e 	andeq	r6, lr, lr, lsl #6
    1694:	0c431000 	mareq	acc0, r1, r3
    1698:	00000c4e 	andeq	r0, r0, lr, asr #24
    169c:	11700e14 	cmnne	r0, r4, lsl lr
    16a0:	46100000 	ldrmi	r0, [r0], -r0
    16a4:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    16a8:	f50e1800 			; <UNDEFINED> instruction: 0xf50e1800
    16ac:	1000000d 	andne	r0, r0, sp
    16b0:	0c4e0c4b 	mcrreq	12, 4, r0, lr, cr11
    16b4:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
    16b8:	000001dc 	ldrdeq	r0, [r0], -ip
    16bc:	4e0c4e10 	mcrmi	14, 0, r4, cr12, cr0, {0}
    16c0:	2000000c 	andcs	r0, r0, ip
    16c4:	0001080e 	andeq	r0, r1, lr, lsl #16
    16c8:	0c531000 	mraeq	r1, r3, acc0
    16cc:	00000c4e 	andeq	r0, r0, lr, asr #24
    16d0:	15140e24 	ldrne	r0, [r4, #-3620]	; 0xfffff1dc
    16d4:	56100000 	ldrpl	r0, [r0], -r0
    16d8:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    16dc:	8c0e2800 	stchi	8, cr2, [lr], {-0}
    16e0:	10000004 	andne	r0, r0, r4
    16e4:	0c4e0c5c 	mcrreq	12, 5, r0, lr, cr12
    16e8:	002c0000 	eoreq	r0, ip, r0
    16ec:	00019105 	andeq	r9, r1, r5, lsl #2
    16f0:	02611000 	rsbeq	r1, r1, #0
    16f4:	00001646 	andeq	r1, r0, r6, asr #12
    16f8:	59010721 	stmdbpl	r1, {r0, r5, r8, r9, sl}
    16fc:	10000000 	andne	r0, r0, r0
    1700:	172b0167 	strne	r0, [fp, -r7, ror #2]!
    1704:	a4230000 	strtge	r0, [r3], #-0
    1708:	0000000a 	andeq	r0, r0, sl
    170c:	00102e23 	andseq	r2, r0, r3, lsr #28
    1710:	e7230100 	str	r0, [r3, -r0, lsl #2]!
    1714:	02000010 	andeq	r0, r0, #16
    1718:	000c1b23 	andeq	r1, ip, r3, lsr #22
    171c:	d3230300 			; <UNDEFINED> instruction: 0xd3230300
    1720:	04000010 	streq	r0, [r0], #-16
    1724:	000ba723 	andeq	sl, fp, r3, lsr #14
    1728:	05000500 	streq	r0, [r0, #-1280]	; 0xfffffb00
    172c:	00000cc1 	andeq	r0, r0, r1, asr #25
    1730:	f8026e10 			; <UNDEFINED> instruction: 0xf8026e10
    1734:	03000016 	movweq	r0, #22
    1738:	0000172b 	andeq	r1, r0, fp, lsr #14
    173c:	00050011 	andeq	r0, r5, r1, lsl r0
    1740:	8a106000 	bhi	419748 <SCB_EnableICache+0x419748>
    1744:	00180010 	andseq	r0, r8, r0, lsl r0
    1748:	14b80e00 	ldrtne	r0, [r8], #3584	; 0xe00
    174c:	8c100000 	ldchi	0, cr0, [r0], {-0}
    1750:	0018001f 	andseq	r0, r8, pc, lsl r0
    1754:	f70e0000 			; <UNDEFINED> instruction: 0xf70e0000
    1758:	10000012 	andne	r0, r0, r2, lsl r0
    175c:	16ec1e8e 	strbtne	r1, [ip], lr, lsl #29
    1760:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1764:	00000694 	muleq	r0, r4, r6
    1768:	aa1e9010 	bge	7a57b0 <SCB_EnableICache+0x7a57b0>
    176c:	34000014 	strcc	r0, [r0], #-20	; 0xffffffec
    1770:	0002190e 	andeq	r1, r2, lr, lsl #18
    1774:	1e921000 	cdpne	0, 9, cr1, cr2, cr0, {0}
    1778:	00001737 	andeq	r1, r0, r7, lsr r7
    177c:	14620e35 	strbtne	r0, [r2], #-3637	; 0xfffff1cb
    1780:	94100000 	ldrls	r0, [r0], #-0
    1784:	0001511f 	andeq	r5, r1, pc, lsl r1
    1788:	f70e3800 			; <UNDEFINED> instruction: 0xf70e3800
    178c:	10000000 	andne	r0, r0, r0
    1790:	18172196 	ldmdane	r7, {r1, r2, r4, r7, r8, sp}
    1794:	0e3c0000 	cdpeq	0, 3, cr0, cr12, cr0, {0}
    1798:	0000154d 	andeq	r1, r0, sp, asr #10
    179c:	17219810 			; <UNDEFINED> instruction: 0x17219810
    17a0:	40000018 	andmi	r0, r0, r8, lsl r0
    17a4:	000c380e 	andeq	r3, ip, lr, lsl #16
    17a8:	219a1000 	orrscs	r1, sl, r0
    17ac:	00001817 	andeq	r1, r0, r7, lsl r8
    17b0:	0e2b0e44 	cdpeq	14, 2, cr0, cr11, cr4, {2}
    17b4:	9c100000 	ldcls	0, cr0, [r0], {-0}
    17b8:	00181721 	andseq	r1, r8, r1, lsr #14
    17bc:	930e4800 	movwls	r4, #59392	; 0xe800
    17c0:	10000014 	andne	r0, r0, r4, lsl r0
    17c4:	1817219e 	ldmdane	r7, {r1, r2, r3, r4, r7, r8, sp}
    17c8:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
    17cc:	0000009b 	muleq	r0, fp, r0
    17d0:	1721a010 			; <UNDEFINED> instruction: 0x1721a010
    17d4:	50000018 	andpl	r0, r0, r8, lsl r0
    17d8:	0008e60e 	andeq	lr, r8, lr, lsl #12
    17dc:	1ea21000 	cdpne	0, 10, cr1, cr2, cr0, {0}
    17e0:	00000c5a 	andeq	r0, r0, sl, asr ip
    17e4:	13010e54 	movwne	r0, #7764	; 0x1e54
    17e8:	a4100000 	ldrge	r0, [r0], #-0
    17ec:	000c4e1e 	andeq	r4, ip, lr, lsl lr
    17f0:	900e5800 	andls	r5, lr, r0, lsl #16
    17f4:	10000002 	andne	r0, r0, r2
    17f8:	0c4e1ea6 	mcrreq	14, 10, r1, lr, cr6
    17fc:	005c0000 	subseq	r0, ip, r0
    1800:	10bd0406 	adcsne	r0, sp, r6, lsl #8
    1804:	111f0000 	tstne	pc, r0
    1808:	17000018 	smladne	r0, r8, r0, r0
    180c:	00001811 	andeq	r1, r0, r1, lsl r8
    1810:	3c040600 	stccc	6, cr0, [r4], {-0}
    1814:	06000017 			; <UNDEFINED> instruction: 0x06000017
    1818:	00180604 	andseq	r0, r8, r4, lsl #12
    181c:	0c090500 	cfstr32eq	mvfx0, [r9], {-0}
    1820:	a8100000 	ldmdage	r0, {}	; <UNPREDICTABLE>
    1824:	00173c02 	andseq	r3, r7, r2, lsl #24
    1828:	1d040600 	stcne	6, cr0, [r4, #-0]
    182c:	06000018 			; <UNDEFINED> instruction: 0x06000018
    1830:	000c1604 	andeq	r1, ip, r4, lsl #12
    1834:	11200d00 			; <UNDEFINED> instruction: 0x11200d00
    1838:	18a7092f 	stmiane	r7!, {r0, r1, r2, r3, r5, r8, fp}
    183c:	100e0000 	andne	r0, lr, r0
    1840:	11000007 	tstne	r0, r7
    1844:	0c4e0c31 	mcrreq	12, 3, r0, lr, cr1
    1848:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    184c:	0000033d 	andeq	r0, r0, sp, lsr r3
    1850:	4e0c3b11 	vmovmi.32	d12[0], r3
    1854:	0400000c 	streq	r0, [r0], #-12
    1858:	0001f80e 	andeq	pc, r1, lr, lsl #16
    185c:	0c3e1100 	ldfeqs	f1, [lr], #-0
    1860:	00000c4e 	andeq	r0, r0, lr, asr #24
    1864:	0f350e08 	svceq	0x00350e08
    1868:	41110000 	tstmi	r1, r0
    186c:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    1870:	700e0c00 	andvc	r0, lr, r0, lsl #24
    1874:	11000011 	tstne	r0, r1, lsl r0
    1878:	0c4e0c48 	mcrreq	12, 4, r0, lr, cr8
    187c:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    1880:	00000016 	andeq	r0, r0, r6, lsl r0
    1884:	4e0c4b11 	vmovmi.32	d12[0], r4
    1888:	1400000c 	strne	r0, [r0], #-12
    188c:	00094f0e 	andeq	r4, r9, lr, lsl #30
    1890:	0c4f1100 	stfeqe	f1, [pc], {-0}
    1894:	00000c4e 	andeq	r0, r0, lr, asr #24
    1898:	09140e18 	ldmdbeq	r4, {r3, r4, r9, sl, fp}
    189c:	52110000 	andspl	r0, r1, #0
    18a0:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    18a4:	05001c00 	streq	r1, [r0, #-3072]	; 0xfffff400
    18a8:	00000a28 	andeq	r0, r0, r8, lsr #20
    18ac:	35035711 	strcc	r5, [r3, #-1809]	; 0xfffff8ef
    18b0:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
    18b4:	095c1128 	ldmdbeq	ip, {r3, r5, r8, ip}^
    18b8:	0000193f 	andeq	r1, r0, pc, lsr r9
    18bc:	0001680e 	andeq	r6, r1, lr, lsl #16
    18c0:	0c5e1100 	ldfeqe	f1, [lr], {-0}
    18c4:	00000c4e 	andeq	r0, r0, lr, asr #24
    18c8:	02080e00 	andeq	r0, r8, #0, 28
    18cc:	62110000 	andsvs	r0, r1, #0
    18d0:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    18d4:	560e0400 	strpl	r0, [lr], -r0, lsl #8
    18d8:	11000003 	tstne	r0, r3
    18dc:	0c4e0c65 	mcrreq	12, 6, r0, lr, cr5
    18e0:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    18e4:	00000090 	muleq	r0, r0, r0
    18e8:	4e0c6811 	mcrmi	8, 0, r6, cr12, cr1, {0}
    18ec:	0c00000c 	stceq	0, cr0, [r0], {12}
    18f0:	0008b50e 	andeq	fp, r8, lr, lsl #10
    18f4:	0c6c1100 	stfeqe	f1, [ip], #-0
    18f8:	00000c4e 	andeq	r0, r0, lr, asr #24
    18fc:	03850e10 	orreq	r0, r5, #16, 28	; 0x100
    1900:	6f110000 	svcvs	0x00110000
    1904:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    1908:	f20e1400 	vshl.s8	d1, d0, d14
    190c:	11000009 	tstne	r0, r9
    1910:	0c4e0c72 	mcrreq	12, 7, r0, lr, cr2
    1914:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    1918:	00001418 	andeq	r1, r0, r8, lsl r4
    191c:	4e0c7511 	mcrmi	5, 0, r7, cr12, cr1, {0}
    1920:	1c00000c 	stcne	0, cr0, [r0], {12}
    1924:	0009e10e 	andeq	lr, r9, lr, lsl #2
    1928:	0c781100 	ldfeqe	f1, [r8], #-0
    192c:	00000c4e 	andeq	r0, r0, lr, asr #24
    1930:	0e220e20 	cdpeq	14, 2, cr0, cr2, cr0, {1}
    1934:	7c110000 	ldcvc	0, cr0, [r1], {-0}
    1938:	000c4e0c 	andeq	r4, ip, ip, lsl #28
    193c:	05002400 	streq	r2, [r0, #-1024]	; 0xfffffc00
    1940:	0000122e 	andeq	r1, r0, lr, lsr #4
    1944:	b3037e11 	movwlt	r7, #15889	; 0x3e11
    1948:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    194c:	00000a86 	andeq	r0, r0, r6, lsl #21
    1950:	4e12a711 	mrcmi	7, 0, sl, cr2, cr1, {0}
    1954:	0300000c 	movweq	r0, #12
    1958:	0000194b 	andeq	r1, r0, fp, asr #18
    195c:	00144d11 	andseq	r4, r4, r1, lsl sp
    1960:	b9118000 	ldmdblt	r1, {pc}
    1964:	001a5410 	andseq	r5, sl, r0, lsl r4
    1968:	14b80e00 	ldrtne	r0, [r8], #3584	; 0xe00
    196c:	bb110000 	bllt	441974 <SCB_EnableICache+0x441974>
    1970:	001a541d 	andseq	r5, sl, sp, lsl r4
    1974:	f70e0000 			; <UNDEFINED> instruction: 0xf70e0000
    1978:	11000012 	tstne	r0, r2, lsl r0
    197c:	18a71cbd 	stmiane	r7!, {r0, r2, r3, r4, r5, r7, sl, fp, ip}
    1980:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1984:	00000591 	muleq	r0, r1, r5
    1988:	3f1ebf11 	svccc	0x001ebf11
    198c:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
    1990:	000a660e 	andeq	r6, sl, lr, lsl #12
    1994:	1dc11100 	stfnee	f1, [r1]
    1998:	0000182f 	andeq	r1, r0, pc, lsr #16
    199c:	01d10e4c 	bicseq	r0, r1, ip, asr #28
    19a0:	c3110000 	tstgt	r1, #0
    19a4:	000c2c1c 	andeq	r2, ip, ip, lsl ip
    19a8:	ce0e5000 	cdpgt	0, 0, cr5, cr14, cr0, {0}
    19ac:	11000005 	tstne	r0, r5
    19b0:	0c381cc5 	ldceq	12, cr1, [r8], #-788	; 0xfffffcec
    19b4:	0e520000 	cdpeq	0, 5, cr0, cr2, cr0, {0}
    19b8:	00000a5b 	andeq	r0, r0, fp, asr sl
    19bc:	2f1dc711 	svccs	0x001dc711
    19c0:	54000018 	strpl	r0, [r0], #-24	; 0xffffffe8
    19c4:	000fb30e 	andeq	fp, pc, lr, lsl #6
    19c8:	1cc91100 	stfnee	f1, [r9], {0}
    19cc:	00000c2c 	andeq	r0, r0, ip, lsr #24
    19d0:	07520e58 			; <UNDEFINED> instruction: 0x07520e58
    19d4:	cb110000 	blgt	4419dc <SCB_EnableICache+0x4419dc>
    19d8:	000c381c 	andeq	r3, ip, ip, lsl r8
    19dc:	7a0e5a00 	bvc	396808 <SCB_EnableICache+0x396808>
    19e0:	1100000e 	tstne	r0, lr
    19e4:	0c2c1ccd 	stceq	12, cr1, [ip], #-820	; 0xfffffccc
    19e8:	0e5c0000 	cdpeq	0, 5, cr0, cr12, cr0, {0}
    19ec:	00001313 	andeq	r1, r0, r3, lsl r3
    19f0:	6b0acf11 	blvs	2b563c <SCB_EnableICache+0x2b563c>
    19f4:	6000001a 	andvs	r0, r0, sl, lsl r0
    19f8:	0008810e 	andeq	r8, r8, lr, lsl #2
    19fc:	0ad11100 	beq	ff445e04 <SCB_EnableICache+0xff445e04>
    1a00:	00001a6b 	andeq	r1, r0, fp, ror #20
    1a04:	06d90e64 	ldrbeq	r0, [r9], r4, ror #28
    1a08:	d3110000 	tstle	r1, #0
    1a0c:	0018291d 	andseq	r2, r8, sp, lsl r9
    1a10:	da0e6800 	ble	39a008 <SCB_EnableICache+0x39a008>
    1a14:	11000005 	tstne	r0, r5
    1a18:	18291dd5 	stmdane	r9!, {r0, r2, r4, r6, r7, r8, sl, fp, ip}
    1a1c:	0e6c0000 	cdpeq	0, 6, cr0, cr12, cr0, {0}
    1a20:	00000694 	muleq	r0, r4, r6
    1a24:	aa1dd711 	bge	777670 <SCB_EnableICache+0x777670>
    1a28:	70000014 	andvc	r0, r0, r4, lsl r0
    1a2c:	0014aa0e 	andseq	sl, r4, lr, lsl #20
    1a30:	21d91100 	bicscs	r1, r9, r0, lsl #2
    1a34:	00001957 	andeq	r1, r0, r7, asr r9
    1a38:	12d60e74 	sbcsne	r0, r6, #116, 28	; 0x740
    1a3c:	dd110000 	ldcle	0, cr0, [r1, #-0]
    1a40:	00195721 	andseq	r5, r9, r1, lsr #14
    1a44:	e60e7800 	str	r7, [lr], -r0, lsl #16
    1a48:	11000008 	tstne	r0, r8
    1a4c:	0c5a21e0 	ldfeqe	f2, [sl], {224}	; 0xe0
    1a50:	007c0000 	rsbseq	r0, ip, r0
    1a54:	144f0406 	strbne	r0, [pc], #-1030	; 1a5c <.debug_info+0x1a5c>
    1a58:	651f0000 	ldrvs	r0, [pc, #-0]	; 1a60 <.debug_info+0x1a60>
    1a5c:	1700001a 	smladne	r0, sl, r0, r0
    1a60:	00001a65 	andeq	r1, r0, r5, ror #20
    1a64:	5c040600 	stcpl	6, cr0, [r4], {-0}
    1a68:	06000019 			; <UNDEFINED> instruction: 0x06000019
    1a6c:	001a5a04 	andseq	r5, sl, r4, lsl #20
    1a70:	0d9f0500 	cfldr32eq	mvfx0, [pc]	; 8 <.debug_info+0x8>
    1a74:	f1110000 			; <UNDEFINED> instruction: 0xf1110000
    1a78:	00195c03 	andseq	r5, r9, r3, lsl #24
    1a7c:	01072100 	mrseq	r2, (UNDEF: 23)
    1a80:	00000059 	andeq	r0, r0, r9, asr r0
    1a84:	a4013312 	strge	r3, [r1], #-786	; 0xfffffcee
    1a88:	2300001a 	movwcs	r0, #26
    1a8c:	00001118 	andeq	r1, r0, r8, lsl r1
    1a90:	15b72364 	ldrne	r2, [r7, #868]!	; 0x364
    1a94:	230a0000 	movwcs	r0, #40960	; 0xa000
    1a98:	0000083e 	andeq	r0, r0, lr, lsr r8
    1a9c:	0c732301 	ldcleq	3, cr2, [r3], #-4
    1aa0:	00010000 	andeq	r0, r1, r0
    1aa4:	00131f05 	andseq	r1, r3, r5, lsl #30
    1aa8:	03381200 	teqeq	r8, #0, 4
    1aac:	00001a7d 	andeq	r1, r0, sp, ror sl
    1ab0:	0005a926 	andeq	sl, r5, r6, lsr #18
    1ab4:	16c71200 	strbne	r1, [r7], r0, lsl #4
    1ab8:	00000c5a 	andeq	r0, r0, sl, asr ip
    1abc:	00124926 	andseq	r4, r2, r6, lsr #18
    1ac0:	11c81200 	bicne	r1, r8, r0, lsl #4
    1ac4:	00000c4e 	andeq	r0, r0, lr, asr #24
    1ac8:	00146926 	andseq	r6, r4, r6, lsr #18
    1acc:	1cc91200 	sfmne	f1, 2, [r9], {0}
    1ad0:	00001aa4 	andeq	r1, r0, r4, lsr #21
    1ad4:	59010721 	stmdbpl	r1, {r0, r5, r8, r9, sl}
    1ad8:	13000000 	movwne	r0, #0
    1adc:	1afb014c 	bne	ffec2014 <SCB_EnableICache+0xffec2014>
    1ae0:	11230000 			; <UNDEFINED> instruction: 0x11230000
    1ae4:	0000000f 	andeq	r0, r0, pc
    1ae8:	00027923 	andeq	r7, r2, r3, lsr #18
    1aec:	16230000 	strtne	r0, [r3], -r0
    1af0:	0100000f 	tsteq	r0, pc
    1af4:	0007de23 	andeq	sp, r7, r3, lsr #28
    1af8:	27000100 	strcs	r0, [r0, -r0, lsl #2]
    1afc:	00000fd8 	ldrdeq	r0, [r0], -r8
    1b00:	71140603 	tstvc	r4, r3, lsl #12
    1b04:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    1b08:	00000003 	andeq	r0, r0, r3
    1b0c:	14df2800 	ldrbne	r2, [pc], #2048	; 8 <.debug_info+0x8>
    1b10:	8d030000 	stchi	0, cr0, [r3, #-0]
    1b14:	00002505 	andeq	r2, r0, r5, lsl #10
    1b18:	00000000 	andeq	r0, r0, r0
    1b1c:	00011000 	andeq	r1, r1, r0
    1b20:	f69c0100 			; <UNDEFINED> instruction: 0xf69c0100
    1b24:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    1b28:	00000ed2 	ldrdeq	r0, [r0], -r2
    1b2c:	f6098e03 			; <UNDEFINED> instruction: 0xf6098e03
    1b30:	0200001b 	andeq	r0, r0, #27
    1b34:	a8296891 	stmdage	r9!, {r0, r4, r7, fp, sp, lr}
    1b38:	03000010 	movweq	r0, #16
    1b3c:	1bf6098f 	blne	ffd84180 <SCB_EnableICache+0xffd84180>
    1b40:	91020000 	mrsls	r0, (UNDEF: 2)
    1b44:	10a32960 	adcne	r2, r3, r0, ror #18
    1b48:	90030000 	andls	r0, r3, r0
    1b4c:	001bf609 	andseq	pc, fp, r9, lsl #12
    1b50:	58910200 	ldmpl	r1, {r9}
    1b54:	00109e29 	andseq	r9, r0, r9, lsr #28
    1b58:	09910300 	ldmibeq	r1, {r8, r9}
    1b5c:	00001bf6 	strdeq	r1, [r0], -r6
    1b60:	29509102 	ldmdbcs	r0, {r1, r8, ip, pc}^
    1b64:	00001298 	muleq	r0, r8, r2
    1b68:	f6099203 			; <UNDEFINED> instruction: 0xf6099203
    1b6c:	0200001b 	andeq	r0, r0, #27
    1b70:	dc294091 	stcle	0, cr4, [r9], #-580	; 0xfffffdbc
    1b74:	0300000d 	movweq	r0, #13
    1b78:	01530893 			; <UNDEFINED> instruction: 0x01530893
    1b7c:	91020000 	mrsls	r0, (UNDEF: 2)
    1b80:	00692a4c 	rsbeq	r2, r9, ip, asr #20
    1b84:	2c0f9403 	cfstrscs	mvf9, [pc], {3}
    1b88:	03000000 	movweq	r0, #0
    1b8c:	297fbc91 	ldmdbcs	pc!, {r0, r4, r7, sl, fp, ip, sp, pc}^	; <UNPREDICTABLE>
    1b90:	00000a7a 	andeq	r0, r0, sl, ror sl
    1b94:	3a139503 	bcc	4e6fa8 <SCB_EnableICache+0x4e6fa8>
    1b98:	03000016 	movweq	r0, #22
    1b9c:	2b7fa891 	blcs	1febde8 <SCB_EnableICache+0x1febde8>
    1ba0:	0000004e 	andeq	r0, r0, lr, asr #32
    1ba4:	00000018 	andeq	r0, r0, r8, lsl r0
    1ba8:	00001bbd 			; <UNDEFINED> instruction: 0x00001bbd
    1bac:	00025729 	andeq	r5, r2, r9, lsr #14
    1bb0:	029d0300 	addseq	r0, sp, #0, 6
    1bb4:	00000c5a 	andeq	r0, r0, sl, asr ip
    1bb8:	7fa49103 	svcvc	0x00a49103
    1bbc:	00662b00 	rsbeq	r2, r6, r0, lsl #22
    1bc0:	00180000 	andseq	r0, r8, r0
    1bc4:	1bdb0000 	blne	ff6c1bcc <SCB_EnableICache+0xff6c1bcc>
    1bc8:	57290000 	strpl	r0, [r9, -r0]!
    1bcc:	03000002 	movweq	r0, #2
    1bd0:	0c5a029e 	lfmeq	f0, 2, [sl], {158}	; 0x9e
    1bd4:	91030000 	mrsls	r0, (UNDEF: 3)
    1bd8:	2c007fa0 	stccs	15, cr7, [r0], {160}	; 0xa0
    1bdc:	0000007e 	andeq	r0, r0, lr, ror r0
    1be0:	00000018 	andeq	r0, r0, r8, lsl r0
    1be4:	00025729 	andeq	r5, r2, r9, lsr #14
    1be8:	029f0300 	addseq	r0, pc, #0, 6
    1bec:	00000c5a 	andeq	r0, r0, sl, asr ip
    1bf0:	7f9c9103 	svcvc	0x009c9103
    1bf4:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1bf8:	0010c704 	andseq	ip, r0, r4, lsl #14
    1bfc:	0b112d00 	bleq	44b408 <SCB_EnableICache+0x44b408>
    1c00:	81030000 	mrshi	r0, (UNDEF: 3)
    1c04:	00000006 	andeq	r0, r0, r6
    1c08:	00004400 	andeq	r4, r0, r0, lsl #8
    1c0c:	2e9c0100 	fmlcse	f0, f4, f0
    1c10:	00000452 	andeq	r0, r0, r2, asr r4
    1c14:	00066b03 	andeq	r6, r6, r3, lsl #22
    1c18:	7c000000 	stcvc	0, cr0, [r0], {-0}
    1c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    1c20:	001c7a9c 	mulseq	ip, ip, sl
    1c24:	02dc2f00 	sbcseq	r2, ip, #0, 30
    1c28:	6b030000 	blvs	c1c30 <SCB_EnableICache+0xc1c30>
    1c2c:	001c7a2b 	andseq	r7, ip, fp, lsr #20
    1c30:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    1c34:	00024129 	andeq	r4, r2, r9, lsr #2
    1c38:	146c0300 	strbtne	r0, [ip], #-768	; 0xfffffd00
    1c3c:	0000163a 	andeq	r1, r0, sl, lsr r6
    1c40:	2b649102 	blcs	1926050 <SCB_EnableICache+0x1926050>
    1c44:	00000008 	andeq	r0, r0, r8
    1c48:	00000018 	andeq	r0, r0, r8, lsl r0
    1c4c:	00001c60 	andeq	r1, r0, r0, ror #24
    1c50:	00025729 	andeq	r5, r2, r9, lsr #14
    1c54:	036f0300 	cmneq	pc, #0, 6
    1c58:	00000c5a 	andeq	r0, r0, sl, asr ip
    1c5c:	00609102 	rsbeq	r9, r0, r2, lsl #2
    1c60:	0000202c 	andeq	r2, r0, ip, lsr #32
    1c64:	00001800 	andeq	r1, r0, r0, lsl #16
    1c68:	02572900 	subseq	r2, r7, #0, 18
    1c6c:	72030000 	andvc	r0, r3, #0
    1c70:	000c5a03 	andeq	r5, ip, r3, lsl #20
    1c74:	5c910200 	lfmpl	f0, 4, [r1], {0}
    1c78:	04060000 	streq	r0, [r6], #-0
    1c7c:	00001a71 	andeq	r1, r0, r1, ror sl
    1c80:	000ad32e 	andeq	sp, sl, lr, lsr #6
    1c84:	065b0300 	ldrbeq	r0, [fp], -r0, lsl #6
    1c88:	00000000 	andeq	r0, r0, r0
    1c8c:	00000048 	andeq	r0, r0, r8, asr #32
    1c90:	1ca69c01 	stcne	12, cr9, [r6], #4
    1c94:	7a290000 	bvc	a40008 <SCB_EnableICache+0xa40008>
    1c98:	0300000a 	movweq	r0, #10
    1c9c:	163a135c 			; <UNDEFINED> instruction: 0x163a135c
    1ca0:	91020000 	mrsls	r0, (UNDEF: 2)
    1ca4:	652e0064 	strvs	r0, [lr, #-100]!	; 0xffffff9c
    1ca8:	03000013 	movweq	r0, #19
    1cac:	00000655 	andeq	r0, r0, r5, asr r6
    1cb0:	001e0000 	andseq	r0, lr, r0
    1cb4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1cb8:	00001ccc 	andeq	r1, r0, ip, asr #25
    1cbc:	0004312f 	andeq	r3, r4, pc, lsr #2
    1cc0:	26550300 	ldrbcs	r0, [r5], -r0, lsl #6
    1cc4:	00000c2c 	andeq	r0, r0, ip, lsr #24
    1cc8:	00769102 	rsbseq	r9, r6, r2, lsl #2
    1ccc:	0008872d 	andeq	r8, r8, sp, lsr #14
    1cd0:	06510300 	ldrbeq	r0, [r1], -r0, lsl #6
    1cd4:	00000000 	andeq	r0, r0, r0
    1cd8:	0000000e 	andeq	r0, r0, lr
    1cdc:	982e9c01 	stmdals	lr!, {r0, sl, fp, ip, pc}
    1ce0:	03000009 	movweq	r0, #9
    1ce4:	00000622 	andeq	r0, r0, r2, lsr #12
    1ce8:	00d80000 	sbcseq	r0, r8, r0
    1cec:	9c010000 	stcls	0, cr0, [r1], {-0}
    1cf0:	00001d5b 	andeq	r1, r0, fp, asr sp
    1cf4:	000f5d29 	andeq	r5, pc, r9, lsr #26
    1cf8:	16230300 	strtne	r0, [r3], -r0, lsl #6
    1cfc:	000015e3 	andeq	r1, r0, r3, ror #11
    1d00:	29609102 	stmdbcs	r0!, {r1, r8, ip, pc}^
    1d04:	0000013e 	andeq	r0, r0, lr, lsr r1
    1d08:	8c162403 	cfldrshi	mvf2, [r6], {3}
    1d0c:	03000015 	movweq	r0, #21
    1d10:	2a7fac91 	bcs	1fecf5c <SCB_EnableICache+0x1fecf5c>
    1d14:	00746572 	rsbseq	r6, r4, r2, ror r5
    1d18:	83162503 	tsthi	r6, #12582912	; 0xc00000
    1d1c:	02000014 	andeq	r0, r0, #20
    1d20:	0c2b7791 	stceq	7, cr7, [fp], #-580	; 0xfffffdbc
    1d24:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1d28:	40000000 	andmi	r0, r0, r0
    1d2c:	2900001d 	stmdbcs	r0, {r0, r2, r3, r4}
    1d30:	00000257 	andeq	r0, r0, r7, asr r2
    1d34:	5a032703 	bpl	cb948 <SCB_EnableICache+0xcb948>
    1d38:	0300000c 	movweq	r0, #12
    1d3c:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
    1d40:	0000242c 	andeq	r2, r0, ip, lsr #8
    1d44:	00001800 	andeq	r1, r0, r0, lsl #16
    1d48:	02572900 	subseq	r2, r7, #0, 18
    1d4c:	2c030000 	stccs	0, cr0, [r3], {-0}
    1d50:	000c5a03 	andeq	r5, ip, r3, lsl #20
    1d54:	a4910300 	ldrge	r0, [r1], #768	; 0x300
    1d58:	2d00007f 	stccs	0, cr0, [r0, #-508]	; 0xfffffe04
    1d5c:	00000b41 	andeq	r0, r0, r1, asr #22
    1d60:	00060803 	andeq	r0, r6, r3, lsl #16
    1d64:	0c000000 	stceq	0, cr0, [r0], {-0}
    1d68:	01000000 	mrseq	r0, (UNDEF: 0)
    1d6c:	0268309c 	rsbeq	r3, r8, #156	; 0x9c
    1d70:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    1d74:	00001608 	andeq	r1, r0, r8, lsl #12
    1d78:	00800000 	addeq	r0, r0, r0
    1d7c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1d80:	00001df9 	strdeq	r1, [r0], -r9
    1d84:	000d0d31 	andeq	r0, sp, r1, lsr sp
    1d88:	08ec0100 	stmiaeq	ip!, {r8}^
    1d8c:	000c4e0e 	andeq	r4, ip, lr, lsl #28
    1d90:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1d94:	0012fc31 	andseq	pc, r2, r1, lsr ip	; <UNPREDICTABLE>
    1d98:	08ed0100 	stmiaeq	sp!, {r8}^
    1d9c:	000c4e0e 	andeq	r4, ip, lr, lsl #28
    1da0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1da4:	0012de31 	andseq	sp, r2, r1, lsr lr
    1da8:	08ee0100 	stmiaeq	lr!, {r8}^
    1dac:	000c4e0e 	andeq	r4, ip, lr, lsl #28
    1db0:	70910200 	addsvc	r0, r1, r0, lsl #4
    1db4:	001e7732 	andseq	r7, lr, r2, lsr r7
    1db8:	00000e00 	andeq	r0, r0, r0, lsl #28
    1dbc:	00000400 	andeq	r0, r0, r0, lsl #8
    1dc0:	08f10100 	ldmeq	r1!, {r8}^
    1dc4:	1e773205 	cdpne	2, 7, cr3, cr7, cr5, {0}
    1dc8:	00580000 	subseq	r0, r8, r0
    1dcc:	00040000 	andeq	r0, r4, r0
    1dd0:	01010000 	mrseq	r0, (UNDEF: 1)
    1dd4:	77320509 	ldrvc	r0, [r2, -r9, lsl #10]!
    1dd8:	6800001e 	stmdavs	r0, {r1, r2, r3, r4}
    1ddc:	04000000 	streq	r0, [r0], #-0
    1de0:	01000000 	mrseq	r0, (UNDEF: 0)
    1de4:	32050905 	andcc	r0, r5, #81920	; 0x14000
    1de8:	00001e81 	andeq	r1, r0, r1, lsl #29
    1dec:	0000006c 	andeq	r0, r0, ip, rrx
    1df0:	00000004 	andeq	r0, r0, r4
    1df4:	05090601 	streq	r0, [r9, #-1537]	; 0xfffff9ff
    1df8:	0a393000 	beq	e4c008 <SCB_EnableICache+0xe4c008>
    1dfc:	b5010000 	strlt	r0, [r1, #-0]
    1e00:	00001608 	andeq	r1, r0, r8, lsl #12
    1e04:	00400000 	subeq	r0, r0, r0
    1e08:	9c010000 	stcls	0, cr0, [r1], {-0}
    1e0c:	00001e77 	andeq	r1, r0, r7, ror lr
    1e10:	001e7732 	andseq	r7, lr, r2, lsr r7
    1e14:	00000400 	andeq	r0, r0, r0, lsl #8
    1e18:	00000400 	andeq	r0, r0, r0, lsl #8
    1e1c:	08b80100 	ldmeq	r8!, {r8}
    1e20:	1e813205 	cdpne	2, 8, cr3, cr1, cr5, {0}
    1e24:	00080000 	andeq	r0, r8, r0
    1e28:	00040000 	andeq	r0, r4, r0
    1e2c:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    1e30:	77320508 	ldrvc	r0, [r2, -r8, lsl #10]!
    1e34:	1400001e 	strne	r0, [r0], #-30	; 0xffffffe2
    1e38:	04000000 	streq	r0, [r0], #-0
    1e3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1e40:	320508bb 	andcc	r0, r5, #12255232	; 0xbb0000
    1e44:	00001e81 	andeq	r1, r0, r1, lsl #29
    1e48:	00000018 	andeq	r0, r0, r8, lsl r0
    1e4c:	00000004 	andeq	r0, r0, r4
    1e50:	0508bc01 	streq	fp, [r8, #-3073]	; 0xfffff3ff
    1e54:	001e7732 	andseq	r7, lr, r2, lsr r7
    1e58:	00002800 	andeq	r2, r0, r0, lsl #16
    1e5c:	00000400 	andeq	r0, r0, r0, lsl #8
    1e60:	08be0100 	ldmeq	lr!, {r8}
    1e64:	1e813205 	cdpne	2, 8, cr3, cr1, cr5, {0}
    1e68:	002c0000 	eoreq	r0, ip, r0
    1e6c:	00040000 	andeq	r0, r4, r0
    1e70:	bf010000 	svclt	0x00010000
    1e74:	33000508 	movwcc	r0, #1288	; 0x508
    1e78:	0000081f 	andeq	r0, r0, pc, lsl r8
    1e7c:	1b036d02 	blne	dd28c <SCB_EnableICache+0xdd28c>
    1e80:	135f3303 	cmpne	pc, #201326592	; 0xc000000
    1e84:	62020000 	andvs	r0, r2, #0
    1e88:	00031b03 	andeq	r1, r3, r3, lsl #22

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
{
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  __ASM volatile ("dsb 0xF":::"memory");
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
  __ASM volatile ("isb 0xF":::"memory");
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  __ASM volatile ("dsb 0xF":::"memory");
  14:	0b0b0024 	bleq	2c00ac <SCB_EnableICache+0x2c00ac>
  __ASM volatile ("isb 0xF":::"memory");
  18:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	35030000 	strcc	r0, [r3, #-0]
  20:	00134900 	andseq	r4, r3, r0, lsl #18
  24:	00240400 	eoreq	r0, r4, r0, lsl #8
  __ASM volatile ("dsb 0xF":::"memory");
  28:	0b3e0b0b 	bleq	f82c5c <SCB_EnableICache+0xf82c5c>
  __ASM volatile ("isb 0xF":::"memory");
  2c:	00000e03 	andeq	r0, r0, r3, lsl #28
}
  30:	03001605 	movweq	r1, #1541	; 0x605
  34:	3b0b3a0e 	blcc	2ce874 <SCB_EnableICache+0x2ce874>
  38:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  3c:	06000013 			; <UNDEFINED> instruction: 0x06000013
{
  40:	0b0b000f 	bleq	2c0084 <SCB_EnableICache+0x2c0084>
  44:	00001349 	andeq	r1, r0, r9, asr #6
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  48:	03001307 	movweq	r1, #775	; 0x307
  4c:	00193c0e 	andseq	r3, r9, lr, lsl #24
  __ASM volatile ("dsb 0xF":::"memory");
  50:	00160800 	andseq	r0, r6, r0, lsl #16
    ccsidr = SCB->CCSIDR;
  54:	0b3a0e03 	bleq	e83868 <SCB_EnableICache+0xe83868>
  58:	0b39053b 	bleq	e4154c <SCB_EnableICache+0xe4154c>
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  5c:	00001349 	andeq	r1, r0, r9, asr #6
  60:	0b011709 	bleq	45c8c <SCB_EnableICache+0x45c8c>
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  64:	3b0b3a0b 	blcc	2ce898 <SCB_EnableICache+0x2ce898>
  68:	010b390b 	tsteq	fp, fp, lsl #18
  6c:	0a000013 	beq	c0 <.debug_abbrev+0xc0>
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  70:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  74:	0b3b0b3a 	bleq	ec2d64 <SCB_EnableICache+0xec2d64>
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
  78:	13490b39 	movtne	r0, #39737	; 0x9b39
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  7c:	010b0000 	mrseq	r0, (UNDEF: 11)
  80:	01134901 	tsteq	r3, r1, lsl #18
      } while (ways-- != 0U);
  84:	0c000013 	stceq	0, cr0, [r0], {19}
  88:	13490021 	movtne	r0, #36897	; 0x9021
  8c:	00000b2f 	andeq	r0, r0, pc, lsr #22
    } while(sets-- != 0U);
  90:	0b01130d 	bleq	44ccc <SCB_EnableICache+0x44ccc>
  94:	3b0b3a0b 	blcc	2ce8c8 <SCB_EnableICache+0x2ce8c8>
  98:	010b390b 	tsteq	fp, fp, lsl #18
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  9c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  a0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  a4:	0b3b0b3a 	bleq	ec2d94 <SCB_EnableICache+0xec2d94>
  a8:	13490b39 	movtne	r0, #39737	; 0x9b39
  __ASM volatile ("isb 0xF":::"memory");
  ac:	00000b38 	andeq	r0, r0, r8, lsr fp
}
  b0:	0b000f0f 	bleq	3cf4 <SCB_EnableICache+0x3cf4>
  b4:	1000000b 	andne	r0, r0, fp
  b8:	13490026 	movtne	r0, #36902	; 0x9026
  bc:	13110000 	tstne	r1, #0
void systick_handler(void){
  c0:	0b0e0301 	bleq	380ccc <SCB_EnableICache+0x380ccc>
	HAL_IncTick();
  c4:	3b0b3a0b 	blcc	2ce8f8 <SCB_EnableICache+0x2ce8f8>
}
  c8:	010b390b 	tsteq	fp, fp, lsl #18
void hal_clocks_init(void){
  cc:	12000013 	andne	r0, r0, #19
  d0:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  HAL_StatusTypeDef  ret = HAL_OK;
  d4:	0b3b0b3a 	bleq	ec2dc4 <SCB_EnableICache+0xec2dc4>
  __HAL_RCC_PWR_CLK_ENABLE();
  d8:	13490b39 	movtne	r0, #39737	; 0x9b39
  dc:	00000b38 	andeq	r0, r0, r8, lsr fp
  e0:	03011313 	movweq	r1, #4883	; 0x1313
  e4:	3a050b0e 	bcc	142d24 <SCB_EnableICache+0x142d24>
  e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ec:	0013010b 	andseq	r0, r3, fp, lsl #2
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  f0:	000d1400 	andeq	r1, sp, r0, lsl #8
  f4:	0b3a0e03 	bleq	e83908 <SCB_EnableICache+0xe83908>
  f8:	0b390b3b 	bleq	e42dec <SCB_EnableICache+0xe42dec>
  fc:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 100:	15150000 	ldrne	r0, [r5, #-0]
 104:	00192700 	andseq	r2, r9, r0, lsl #14
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 108:	01151600 	tsteq	r5, r0, lsl #12
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 10c:	13491927 	movtne	r1, #39207	; 0x9927
 110:	00001301 	andeq	r1, r0, r1, lsl #6
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 114:	49000517 	stmdbmi	r0, {r0, r1, r2, r4, r8, sl}
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 118:	18000013 	stmdane	r0, {r0, r1, r4}
  RCC_OscInitStruct.PLL.PLLM = 25;
 11c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
  RCC_OscInitStruct.PLL.PLLN = 432;
 120:	0b3a050b 	bleq	e81554 <SCB_EnableICache+0xe81554>
 124:	0b39053b 	bleq	e41618 <SCB_EnableICache+0xe41618>
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 128:	00001301 	andeq	r1, r0, r1, lsl #6
  RCC_OscInitStruct.PLL.PLLQ = 9;
 12c:	03000d19 	movweq	r0, #3353	; 0xd19
  RCC_OscInitStruct.PLL.PLLR = 7;
 130:	3b0b3a0e 	blcc	2ce970 <SCB_EnableICache+0x2ce970>
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 134:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 138:	000b3813 	andeq	r3, fp, r3, lsl r8
 13c:	000d1a00 	andeq	r1, sp, r0, lsl #20
 140:	0b3a0e03 	bleq	e83954 <SCB_EnableICache+0xe83954>
  if(ret != HAL_OK){
 144:	0b39053b 	bleq	e41638 <SCB_EnableICache+0xe41638>
 148:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
  ret = HAL_PWREx_EnableOverDrive();
 14c:	131b0000 	tstne	fp, #0
 150:	0b0e0301 	bleq	380d5c <SCB_EnableICache+0x380d5c>
 154:	3b0b3a0b 	blcc	2ce988 <SCB_EnableICache+0x2ce988>
  if(ret != HAL_OK){
 158:	010b3905 	tsteq	fp, r5, lsl #18
 15c:	1c000013 	stcne	0, cr0, [r0], {19}
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 160:	0b0b0113 	bleq	2c05b4 <SCB_EnableICache+0x2c05b4>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168:	13010b39 	movwne	r0, #6969	; 0x1b39
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 16c:	171d0000 	ldrne	r0, [sp, -r0]
 170:	3a0b0b01 	bcc	2c2d7c <SCB_EnableICache+0x2c2d7c>
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 174:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
 178:	0013010b 	andseq	r0, r3, fp, lsl #2
 17c:	000d1e00 	andeq	r1, sp, r0, lsl #28
 180:	0b3a0e03 	bleq	e83994 <SCB_EnableICache+0xe83994>
 184:	0b39053b 	bleq	e41678 <SCB_EnableICache+0xe41678>
 188:	00001349 	andeq	r1, r0, r9, asr #6
  if(ret != HAL_OK){
 18c:	2701151f 	smladcs	r1, pc, r5, r1	; <UNPREDICTABLE>
 190:	00130119 	andseq	r0, r3, r9, lsl r1
}
 194:	00342000 	eorseq	r2, r4, r0
 198:	0b3a0e03 	bleq	e839ac <SCB_EnableICache+0xe839ac>
 19c:	0b39053b 	bleq	e41690 <SCB_EnableICache+0xe41690>
 1a0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
void exti0_line_interrupt_handler(void){
 1a4:	0000193c 	andeq	r1, r0, ip, lsr r9
  HAL_GPIO_EXTI_IRQHandler(USER_BUTTON_PIN);
 1a8:	3e010421 	cdpcc	4, 0, cr0, cr1, cr1, {1}
 1ac:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
}
 1b0:	3b0b3a13 	blcc	2cea04 <SCB_EnableICache+0x2cea04>
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 1b4:	010b390b 	tsteq	fp, fp, lsl #18
 1b8:	22000013 	andcs	r0, r0, #19
  if (GPIO_Pin == GPIO_PIN_0){
 1bc:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
 1c0:	00000d1c 	andeq	r0, r0, ip, lsl sp
    BSP_LED_Toggle(LED2);
 1c4:	03002823 	movweq	r2, #2083	; 0x823
}
 1c8:	000b1c0e 	andeq	r1, fp, lr, lsl #24
 1cc:	01132400 	tsteq	r3, r0, lsl #8
void hal_button_init(void){
 1d0:	0b3a050b 	bleq	e81604 <SCB_EnableICache+0xe81604>
 1d4:	0b39053b 	bleq	e416c8 <SCB_EnableICache+0xe416c8>
	BSP_LED_Init(LED2);
 1d8:	00001301 	andeq	r1, r0, r1, lsl #6
	BSP_LED_Init(LED1);
 1dc:	03000d25 	movweq	r0, #3365	; 0xd25
 1e0:	3b0b3a08 	blcc	2cea08 <SCB_EnableICache+0x2cea08>
	gpio_config.Mode = GPIO_MODE_IT_RISING;
 1e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
	gpio_config.Pull = GPIO_NOPULL;
 1e8:	000b3813 	andeq	r3, fp, r3, lsl r8
	gpio_config.Pin = GPIO_PIN_0;
 1ec:	00342600 	eorseq	r2, r4, r0, lsl #12
	HAL_GPIO_Init(GPIOA, &gpio_config);
 1f0:	0b3a0e03 	bleq	e83a04 <SCB_EnableICache+0xe83a04>
 1f4:	0b390b3b 	bleq	e42ee8 <SCB_EnableICache+0xe42ee8>
	HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 1f8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 1fc:	0000193c 	andeq	r1, r0, ip, lsr r9
 200:	03003427 	movweq	r3, #1063	; 0x427
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 204:	3b0b3a0e 	blcc	2cea44 <SCB_EnableICache+0x2cea44>
}
 208:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 20c:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 210:	28000018 	stmdacs	r0, {r3, r4}
 214:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
void HAL_UART_MspInit(UART_HandleTypeDef *huart){
 218:	0b3a0e03 	bleq	e83a2c <SCB_EnableICache+0xe83a2c>
 21c:	0b390b3b 	bleq	e42f10 <SCB_EnableICache+0xe42f10>
  __GPIOA_CLK_ENABLE();
 220:	13491927 	movtne	r1, #39207	; 0x9927
 224:	06120111 			; <UNDEFINED> instruction: 0x06120111
 228:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 22c:	00130119 	andseq	r0, r3, r9, lsl r1
 230:	00342900 	eorseq	r2, r4, r0, lsl #18
 234:	0b3a0e03 	bleq	e83a48 <SCB_EnableICache+0xe83a48>
  __USART1_CLK_ENABLE();
 238:	0b390b3b 	bleq	e42f2c <SCB_EnableICache+0xe42f2c>
 23c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 240:	342a0000 	strtcc	r0, [sl], #-0
 244:	3a080300 	bcc	200e4c <SCB_EnableICache+0x200e4c>
 248:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 24c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  gpio_init_struct.Pin = GPIO_PIN_9;
 250:	2b000018 	blcs	2b8 <.debug_abbrev+0x2b8>
 254:	0111010b 	tsteq	r1, fp, lsl #2
  gpio_init_struct.Mode = GPIO_MODE_AF_PP;
 258:	13010612 	movwne	r0, #5650	; 0x1612
  gpio_init_struct.Pull = GPIO_PULLUP;
 25c:	0b2c0000 	bleq	b00264 <SCB_EnableICache+0xb00264>
  gpio_init_struct.Speed = GPIO_SPEED_HIGH;
 260:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
  gpio_init_struct.Alternate = GPIO_AF7_USART1;
 264:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
 268:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 26c:	0b3a0e03 	bleq	e83a80 <SCB_EnableICache+0xe83a80>
 270:	0b390b3b 	bleq	e42f64 <SCB_EnableICache+0xe42f64>
  gpio_init_struct.Pin = GPIO_PIN_10;
 274:	01111927 	tsteq	r1, r7, lsr #18
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
 278:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 27c:	00194296 	mulseq	r9, r6, r2
 280:	012e2e00 			; <UNDEFINED> instruction: 0x012e2e00
}
 284:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 288:	0b3b0b3a 	bleq	ec2f78 <SCB_EnableICache+0xec2f78>
 28c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 290:	06120111 			; <UNDEFINED> instruction: 0x06120111
void hal_uart_init(void){
 294:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
	uart_init_struct.Instance = USART1;
 298:	00130119 	andseq	r0, r3, r9, lsl r1
 29c:	00052f00 	andeq	r2, r5, r0, lsl #30
	uart_init_struct.Init.BaudRate = 9600;
 2a0:	0b3a0e03 	bleq	e83ab4 <SCB_EnableICache+0xe83ab4>
 2a4:	0b390b3b 	bleq	e42f98 <SCB_EnableICache+0xe42f98>
	uart_init_struct.Init.WordLength = UART_WORDLENGTH_8B;
 2a8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
	uart_init_struct.Init.StopBits = UART_STOPBITS_1;
 2ac:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
 2b0:	3a0e0301 	bcc	380ebc <SCB_EnableICache+0x380ebc>
	uart_init_struct.Init.Parity = UART_PARITY_NONE;
 2b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
	uart_init_struct.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2b8:	1119270b 	tstne	r9, fp, lsl #14
 2bc:	40061201 	andmi	r1, r6, r1, lsl #4
	uart_init_struct.Init.Mode = UART_MODE_TX_RX;
 2c0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
	HAL_UART_Init(&uart_init_struct);
 2c4:	00001301 	andeq	r1, r0, r1, lsl #6
 2c8:	03003431 	movweq	r3, #1073	; 0x431
}
 2cc:	3b0b3a0e 	blcc	2ceb0c <SCB_EnableICache+0x2ceb0c>
 2d0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 2d4:	00180213 	andseq	r0, r8, r3, lsl r2
 2d8:	001d3200 	andseq	r3, sp, r0, lsl #4
 2dc:	01111331 	tsteq	r1, r1, lsr r3
 2e0:	0b580612 	bleq	1601b30 <SCB_EnableICache+0x1601b30>
 2e4:	0b570559 	bleq	15c1850 <SCB_EnableICache+0x15c1850>
 2e8:	2e330000 	cdpcs	0, 3, cr0, cr3, cr0, {0}
 2ec:	3a0e0300 	bcc	380ef4 <SCB_EnableICache+0x380ef4>
 2f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 2f4:	2019270b 	andscs	r2, r9, fp, lsl #14
 2f8:	0000000b 	andeq	r0, r0, fp

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
{
   0:	00000064 	andeq	r0, r0, r4, rrx
  __ASM volatile ("dsb 0xF":::"memory");
   4:	00000002 	andeq	r0, r0, r2
  __ASM volatile ("isb 0xF":::"memory");
   8:	00040000 	andeq	r0, r4, r0
	...
  __ASM volatile ("dsb 0xF":::"memory");
  14:	00000040 	andeq	r0, r0, r0, asr #32
  __ASM volatile ("isb 0xF":::"memory");
  18:	00000000 	andeq	r0, r0, r0
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	00000080 	andeq	r0, r0, r0, lsl #1
  20:	00000000 	andeq	r0, r0, r0
  24:	0000000c 	andeq	r0, r0, ip
  __ASM volatile ("dsb 0xF":::"memory");
  28:	00000000 	andeq	r0, r0, r0
  __ASM volatile ("isb 0xF":::"memory");
  2c:	000000d8 	ldrdeq	r0, [r0], -r8
}
  30:	00000000 	andeq	r0, r0, r0
  34:	0000000e 	andeq	r0, r0, lr
  38:	00000000 	andeq	r0, r0, r0
  3c:	0000001e 	andeq	r0, r0, lr, lsl r0
{
  40:	00000000 	andeq	r0, r0, r0
  44:	00000048 	andeq	r0, r0, r8, asr #32
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  48:	00000000 	andeq	r0, r0, r0
  4c:	0000007c 	andeq	r0, r0, ip, ror r0
  __ASM volatile ("dsb 0xF":::"memory");
  50:	00000000 	andeq	r0, r0, r0
    ccsidr = SCB->CCSIDR;
  54:	00000044 	andeq	r0, r0, r4, asr #32
  58:	00000000 	andeq	r0, r0, r0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  5c:	00000110 	andeq	r0, r0, r0, lsl r1
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
{
   0:	00000000 	andeq	r0, r0, r0
   4:	00000040 	andeq	r0, r0, r0, asr #32
  __ASM volatile ("isb 0xF":::"memory");
   8:	00000000 	andeq	r0, r0, r0
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
   c:	00000080 	andeq	r0, r0, r0, lsl #1
  10:	00000000 	andeq	r0, r0, r0
  __ASM volatile ("dsb 0xF":::"memory");
  14:	0000000c 	andeq	r0, r0, ip
  __ASM volatile ("isb 0xF":::"memory");
  18:	00000000 	andeq	r0, r0, r0
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	000000d8 	ldrdeq	r0, [r0], -r8
  20:	00000000 	andeq	r0, r0, r0
  24:	0000000e 	andeq	r0, r0, lr
  __ASM volatile ("dsb 0xF":::"memory");
  28:	00000000 	andeq	r0, r0, r0
  __ASM volatile ("isb 0xF":::"memory");
  2c:	0000001e 	andeq	r0, r0, lr, lsl r0
}
  30:	00000000 	andeq	r0, r0, r0
  34:	00000048 	andeq	r0, r0, r8, asr #32
  38:	00000000 	andeq	r0, r0, r0
  3c:	0000007c 	andeq	r0, r0, ip, ror r0
{
  40:	00000000 	andeq	r0, r0, r0
  44:	00000044 	andeq	r0, r0, r4, asr #32
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  48:	00000000 	andeq	r0, r0, r0
  4c:	00000110 	andeq	r0, r0, r0, lsl r1
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
{
   0:	00000553 	andeq	r0, r0, r3, asr r5
  __ASM volatile ("dsb 0xF":::"memory");
   4:	02ed0003 	rsceq	r0, sp, #3
  __ASM volatile ("isb 0xF":::"memory");
   8:	01020000 	mrseq	r0, (UNDEF: 2)
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  __ASM volatile ("dsb 0xF":::"memory");
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  __ASM volatile ("isb 0xF":::"memory");
  18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
  20:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
  24:	534d432f 	movtpl	r4, #54063	; 0xd32f
  __ASM volatile ("dsb 0xF":::"memory");
  28:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
  __ASM volatile ("isb 0xF":::"memory");
  2c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
}
  30:	2f006564 	svccs	0x00006564
  34:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  38:	6f626c2f 	svcvs	0x00626c2f
  3c:	6e616467 	cdpvs	4, 6, cr6, cr1, cr7, {3}
{
  40:	702f766f 	eorvc	r7, pc, pc, ror #12
  44:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  48:	2f736d61 	svccs	0x00736d61
  4c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  __ASM volatile ("dsb 0xF":::"memory");
  50:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    ccsidr = SCB->CCSIDR;
  54:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  58:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  5c:	2d382d69 	ldccs	13, cr2, [r8, #-420]!	; 0xfffffe5c
  60:	38313032 	ldmdacc	r1!, {r1, r4, r5, ip, sp}
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  64:	2d34712d 	ldfcss	f7, [r4, #-180]!	; 0xffffff4c
  68:	6f6a616d 	svcvs	0x006a616d
  6c:	72612f72 	rsbvc	r2, r1, #456	; 0x1c8
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  70:	6f6e2d6d 	svcvs	0x006e2d6d
  74:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
  78:	2f696261 	svccs	0x00696261
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  7c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  80:	2f656475 	svccs	0x00656475
      } while (ways-- != 0U);
  84:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
  88:	00656e69 	rsbeq	r6, r5, r9, ror #28
  8c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffffd8 <SCB_EnableICache+0xffffffd8>
    } while(sets-- != 0U);
  90:	626c2f65 	rsbvs	r2, ip, #404	; 0x194
  94:	6164676f 	cmnvs	r4, pc, ror #14
  98:	2f766f6e 	svccs	0x00766f6e
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  9c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
  a0:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
  a4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
  a8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
  __ASM volatile ("isb 0xF":::"memory");
  ac:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
}
  b0:	61652d65 	cmnvs	r5, r5, ror #26
  b4:	382d6962 	stmdacc	sp!, {r1, r5, r6, r8, fp, sp, lr}
  b8:	3130322d 	teqcc	r0, sp, lsr #4
  bc:	34712d38 	ldrbtcc	r2, [r1], #-3384	; 0xfffff2c8
void systick_handler(void){
  c0:	6a616d2d 	bvs	185b57c <SCB_EnableICache+0x185b57c>
	HAL_IncTick();
  c4:	612f726f 			; <UNDEFINED> instruction: 0x612f726f
}
  c8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
void hal_clocks_init(void){
  cc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  d0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  HAL_StatusTypeDef  ret = HAL_OK;
  d4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
  __HAL_RCC_PWR_CLK_ENABLE();
  d8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
  dc:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
  e0:	6f682f00 	svcvs	0x00682f00
  e4:	6c2f656d 	cfstr32vs	mvfx6, [pc], #-436	; ffffff38 <SCB_EnableICache+0xffffff38>
  e8:	64676f62 	strbtvs	r6, [r7], #-3938	; 0xfffff09e
  ec:	766f6e61 	strbtvc	r6, [pc], -r1, ror #28
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  f0:	6f72702f 	svcvs	0x0072702f
  f4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
  f8:	63672f73 	cmnvs	r7, #460	; 0x1cc
  fc:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
 100:	6f6e2d6d 	svcvs	0x006e2d6d
 104:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 108:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 10c:	30322d38 	eorscc	r2, r2, r8, lsr sp
 110:	712d3831 			; <UNDEFINED> instruction: 0x712d3831
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 114:	616d2d34 	cmnvs	sp, r4, lsr sp
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 118:	2f726f6a 	svccs	0x00726f6a
  RCC_OscInitStruct.PLL.PLLM = 25;
 11c:	2f62696c 	svccs	0x0062696c
  RCC_OscInitStruct.PLL.PLLN = 432;
 120:	2f636367 	svccs	0x00636367
 124:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 128:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  RCC_OscInitStruct.PLL.PLLQ = 9;
 12c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  RCC_OscInitStruct.PLL.PLLR = 7;
 130:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 134:	2f312e32 	svccs	0x00312e32
 138:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 13c:	00656475 	rsbeq	r6, r5, r5, ror r4
 140:	61682f2e 	cmnvs	r8, lr, lsr #30
  if(ret != HAL_OK){
 144:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 148:	4d432f62 	stclmi	15, cr2, [r3, #-392]	; 0xfffffe78
  ret = HAL_PWREx_EnableOverDrive();
 14c:	2f534953 	svccs	0x00534953
 150:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 154:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
  if(ret != HAL_OK){
 158:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
 15c:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 160:	2f787837 	svccs	0x00787837
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168:	00656475 	rsbeq	r6, r5, r5, ror r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 16c:	61682f2e 	cmnvs	r8, lr, lsr #30
 170:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 174:	6e492f62 	cdpvs	15, 4, cr2, cr9, cr2, {3}
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
 178:	2f2e0063 	svccs	0x002e0063
 17c:	5f6c6168 	svcpl	0x006c6168
 180:	2f62696c 	svccs	0x0062696c
 184:	2f505342 	svccs	0x00505342
 188:	334d5453 	movtcc	r5, #54355	; 0xd453
  if(ret != HAL_OK){
 18c:	36374632 			; <UNDEFINED> instruction: 0x36374632
 190:	442d4939 	strtmi	r4, [sp], #-2361	; 0xfffff6c7
}
 194:	6f637369 	svcvs	0x00637369
 198:	79726576 	ldmdbvc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
 19c:	6f630000 	svcvs	0x00630000
 1a0:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
void exti0_line_interrupt_handler(void){
 1a4:	682e376d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}
  HAL_GPIO_EXTI_IRQHandler(USER_BUTTON_PIN);
 1a8:	00000100 	andeq	r0, r0, r0, lsl #2
 1ac:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
}
 1b0:	63675f73 	cmnvs	r7, #460	; 0x1cc
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 1b4:	00682e63 	rsbeq	r2, r8, r3, ror #28
 1b8:	6d000001 	stcvs	0, cr0, [r0, #-4]
  if (GPIO_Pin == GPIO_PIN_0){
 1bc:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
 1c0:	00000063 	andeq	r0, r0, r3, rrx
    BSP_LED_Toggle(LED2);
 1c4:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
}
 1c8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 1cc:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
void hal_button_init(void){
 1d0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
 1d4:	00020068 	andeq	r0, r2, r8, rrx
	BSP_LED_Init(LED2);
 1d8:	636f6c00 	cmnvs	pc, #0, 24
	BSP_LED_Init(LED1);
 1dc:	00682e6b 	rsbeq	r2, r8, fp, ror #28
 1e0:	5f000003 	svcpl	0x00000003
	gpio_config.Mode = GPIO_MODE_IT_RISING;
 1e4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	gpio_config.Pull = GPIO_NOPULL;
 1e8:	00682e73 	rsbeq	r2, r8, r3, ror lr
	gpio_config.Pin = GPIO_PIN_0;
 1ec:	73000003 	movwvc	r0, #3
	HAL_GPIO_Init(GPIOA, &gpio_config);
 1f0:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
 1f4:	00682e66 	rsbeq	r2, r8, r6, ror #28
	HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 1f8:	72000004 	andvc	r0, r0, #4
 1fc:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 200:	0300682e 	movweq	r6, #2094	; 0x82e
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 204:	735f0000 	cmpvc	pc, #0
}
 208:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 20c:	00682e74 	rsbeq	r2, r8, r4, ror lr
 210:	73000003 	movwvc	r0, #3
 214:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
void HAL_UART_MspInit(UART_HandleTypeDef *huart){
 218:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
 21c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
  __GPIOA_CLK_ENABLE();
 220:	2e787837 	mrccs	8, 3, r7, cr8, cr7, {1}
 224:	00050068 	andeq	r0, r5, r8, rrx
 228:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 22c:	37663233 			; <UNDEFINED> instruction: 0x37663233
 230:	78783936 	ldmdavc	r8!, {r1, r2, r4, r5, r8, fp, ip, sp}^
 234:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
  __USART1_CLK_ENABLE();
 238:	74730000 	ldrbtvc	r0, [r3], #-0
 23c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 240:	5f787837 	svcpl	0x00787837
 244:	5f6c6168 	svcpl	0x006c6168
 248:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
 24c:	00060068 	andeq	r0, r6, r8, rrx
  gpio_init_struct.Pin = GPIO_PIN_9;
 250:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 254:	37663233 			; <UNDEFINED> instruction: 0x37663233
  gpio_init_struct.Mode = GPIO_MODE_AF_PP;
 258:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
  gpio_init_struct.Pull = GPIO_PULLUP;
 25c:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
  gpio_init_struct.Speed = GPIO_SPEED_HIGH;
 260:	655f6363 	ldrbvs	r6, [pc, #-867]	; ffffff05 <SCB_EnableICache+0xffffff05>
  gpio_init_struct.Alternate = GPIO_AF7_USART1;
 264:	00682e78 	rsbeq	r2, r8, r8, ror lr
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
 268:	73000006 	movwvc	r0, #6
 26c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 270:	78783766 	ldmdavc	r8!, {r1, r2, r5, r6, r8, r9, sl, ip, sp}^
  gpio_init_struct.Pin = GPIO_PIN_10;
 274:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
 278:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
 27c:	0600682e 	streq	r6, [r0], -lr, lsr #16
 280:	74730000 	ldrbtvc	r0, [r3], #-0
}
 284:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 288:	5f787837 	svcpl	0x00787837
 28c:	5f6c6168 	svcpl	0x006c6168
 290:	6f697067 	svcvs	0x00697067
void hal_uart_init(void){
 294:	0600682e 	streq	r6, [r0], -lr, lsr #16
	uart_init_struct.Instance = USART1;
 298:	74730000 	ldrbtvc	r0, [r3], #-0
 29c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
	uart_init_struct.Init.BaudRate = 9600;
 2a0:	5f787837 	svcpl	0x00787837
 2a4:	5f6c6168 	svcpl	0x006c6168
	uart_init_struct.Init.WordLength = UART_WORDLENGTH_8B;
 2a8:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
	uart_init_struct.Init.StopBits = UART_STOPBITS_1;
 2ac:	00060068 	andeq	r0, r6, r8, rrx
 2b0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
	uart_init_struct.Init.Parity = UART_PARITY_NONE;
 2b4:	37663233 			; <UNDEFINED> instruction: 0x37663233
	uart_init_struct.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2b8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 2bc:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; fffff663 <SCB_EnableICache+0xfffff663>
	uart_init_struct.Init.Mode = UART_MODE_TX_RX;
 2c0:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
	HAL_UART_Init(&uart_init_struct);
 2c4:	00060068 	andeq	r0, r6, r8, rrx
 2c8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
}
 2cc:	37663233 			; <UNDEFINED> instruction: 0x37663233
 2d0:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 2d4:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
 2d8:	00000600 	andeq	r0, r0, r0, lsl #12
 2dc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 2e0:	36376632 			; <UNDEFINED> instruction: 0x36376632
 2e4:	645f6939 	ldrbvs	r6, [pc], #-2361	; 2ec <.debug_line+0x2ec>
 2e8:	6f637369 	svcvs	0x00637369
 2ec:	79726576 	ldmdbvc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
 2f0:	0700682e 	streq	r6, [r0, -lr, lsr #16]
 2f4:	05000000 	streq	r0, [r0, #-0]
 2f8:	02050001 	andeq	r0, r5, #1
 2fc:	00000000 	andeq	r0, r0, r0
int main(void){
 300:	0111b503 	tsteq	r1, r3, lsl #10
 304:	03050204 	movweq	r0, #20996	; 0x5204
	double val3 = 4.002503;
 308:	2e75b903 	vaddcs.f16	s23, s10, s6	; <UNPREDICTABLE>
 30c:	042e7503 	strteq	r7, [lr], #-1283	; 0xfffffafd
	double val2 = 4.233456;
 310:	03080501 	movweq	r0, #34049	; 0x8501
 314:	052e0ad6 	streq	r0, [lr, #-2774]!	; 0xfffff52a
 318:	02042012 	andeq	r2, r4, #18
	double val1 = 4.789317;
 31c:	b5030305 	strlt	r0, [r3, #-773]	; 0xfffffcfb
 320:	75033c75 	strvc	r3, [r3, #-3189]	; 0xfffff38b
	double val0 = 4.220734;
 324:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
 328:	0ad9030e 	beq	ff640f68 <SCB_EnableICache+0xff640f68>
 32c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
	char *my_msg = "HAL example using GPIO and UART\n";
 330:	75b20303 	ldrvc	r0, [r2, #771]!	; 0x303
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  //Enable ARM's FPU
 334:	2e750366 	cdpcs	3, 7, cr0, cr5, cr6, {3}
 338:	01050104 	tsteq	r5, r4, lsl #2
 33c:	2e0add03 	cdpcs	13, 0, cr13, cr10, cr3, {0}
 340:	01000802 	tsteq	r0, r2, lsl #16
	SCB_EnableDCache();
 344:	00010501 	andeq	r0, r1, r1, lsl #10
	SCB_EnableICache();
 348:	00000205 	andeq	r0, r0, r5, lsl #4
	HAL_Init();
 34c:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
	__HAL_RCC_GPIOA_CLK_ENABLE();
 350:	08050111 	stmdaeq	r5, {r0, r4, r8}
 354:	20110542 	andscs	r0, r1, r2, asr #10
 358:	03050204 	movweq	r0, #20996	; 0x5204
 35c:	3c74ff03 	ldclcc	15, cr15, [r4], #-12
 360:	11050104 	tstne	r5, r4, lsl #2
 364:	2e0b8403 	cdpcs	4, 0, cr8, cr11, cr3, {0}
	__HAL_RCC_GPIOB_CLK_ENABLE();
 368:	3f200c05 	svccc	0x00200c05
 36c:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
 370:	0c053e0e 	stceq	14, cr3, [r5], {14}
 374:	001e052e 	andseq	r0, lr, lr, lsr #10
 378:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
 37c:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
	__HAL_RCC_GPIOC_CLK_ENABLE();
 380:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 384:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
 388:	0c053d01 	stceq	13, cr3, [r5], {1}
 38c:	01040200 	mrseq	r0, R12_usr
 390:	0049052d 	subeq	r0, r9, sp, lsr #10
 394:	20010402 	andcs	r0, r1, r2, lsl #8
	hal_clocks_init();
 398:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
	hal_button_init();
 39c:	00200104 	eoreq	r0, r0, r4, lsl #2
	hal_uart_init();
 3a0:	33010402 	movwcc	r0, #5122	; 0x1402
	my_result = standard_rms(val3, val2, val1, val0);
 3a4:	02000705 	andeq	r0, r0, #1310720	; 0x140000
 3a8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 3ac:	05052f11 	streq	r2, [r5, #-3857]	; 0xfffff0ef
 3b0:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
 3b4:	74ef0303 	strbtvc	r0, [pc], #771	; 3bc <.debug_line+0x3bc>
 3b8:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
	HAL_UART_Transmit(&uart_init_struct, (uint8_t*)my_msg, strlen(my_msg), 100);
 3bc:	0b94030e 	bleq	fe500ffc <SCB_EnableICache+0xfe500ffc>
 3c0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
 3c4:	74ec0303 	strbtvc	r0, [ip], #771	; 0x303
 3c8:	2e750366 	cdpcs	3, 7, cr0, cr5, cr6, {3}
 3cc:	01050104 	tsteq	r5, r4, lsl #2
		BSP_LED_Toggle(LED1);
 3d0:	2e0ba403 	cdpcs	4, 0, cr10, cr11, cr3, {0}
		HAL_Delay(50);
 3d4:	01000802 	tsteq	r0, r2, lsl #16
 3d8:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
		BSP_LED_Toggle(LED1);
 3dc:	0205001b 	andeq	r0, r5, #27
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	2f020519 	svccs	0x00020519
 3e8:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
 3ec:	01010002 	tsteq	r1, r2
 3f0:	1b050304 	blne	141008 <SCB_EnableICache+0x141008>
 3f4:	00020500 	andeq	r0, r2, r0, lsl #10
 3f8:	03000000 	movweq	r0, #0
 3fc:	16050121 	strne	r0, [r5], -r1, lsr #2
 400:	3e03053f 	mcrcc	5, 0, r0, cr3, cr15, {1}
 404:	bd2405bf 	cfstr32lt	mvfx0, [r4, #-764]!	; 0xfffffd04
 408:	052f1e05 	streq	r1, [pc, #-3589]!	; fffff60b <SCB_EnableICache+0xfffff60b>
 40c:	23053d22 	movwcs	r3, #23842	; 0x5d22
 410:	3d1e052f 	cfldr32cc	mvfx0, [lr, #-188]	; 0xffffff44
 414:	2f2f3d2f 	svccs	0x002f3d2f
 418:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
 41c:	0a058305 	beq	161038 <SCB_EnableICache+0x161038>
 420:	01040200 	mrseq	r0, R12_usr
 424:	2409054b 	strcs	r0, [r9], #-1355	; 0xfffffab5
 428:	05590505 	ldrbeq	r0, [r9, #-1285]	; 0xfffffafb
 42c:	0402000a 	streq	r0, [r2], #-10
 430:	1f054b02 	svcne	0x00054b02
 434:	2f220524 	svccs	0x00220524
 438:	052f2305 	streq	r2, [pc, #-773]!	; 13b <.debug_line+0x13b>
 43c:	053d2f24 	ldreq	r2, [sp, #-3876]!	; 0xfffff0dc
 440:	05053e09 	streq	r3, [r5, #-3593]	; 0xfffff1f7
 444:	000a0591 	muleq	sl, r1, r5
 448:	4b030402 	blmi	c1458 <SCB_EnableICache+0xc1458>
 44c:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
 450:	01010008 	tsteq	r1, r8
 454:	28050304 	stmdacs	r5, {r2, r8, r9}
 458:	00020500 	andeq	r0, r2, r0, lsl #10
 45c:	03000000 	movweq	r0, #0
 460:	050100d0 	streq	r0, [r1, #-208]	; 0xffffff30
 464:	01052f03 	tsteq	r5, r3, lsl #30
 468:	0002023d 	andeq	r0, r2, sp, lsr r2
 46c:	03040101 	movweq	r0, #16641	; 0x4101
 470:	05002f05 	streq	r2, [r0, #-3845]	; 0xfffff0fb
 474:	00000002 	andeq	r0, r0, r2
 478:	00d40300 	sbcseq	r0, r4, r0, lsl #6
 47c:	59060501 	stmdbpl	r6, {r0, r8, sl}
 480:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
 484:	04023e01 	streq	r3, [r2], #-3585	; 0xfffff1ff
 488:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
 48c:	001b0503 	andseq	r0, fp, r3, lsl #10
 490:	00000205 	andeq	r0, r0, r5, lsl #4
 494:	da030000 	ble	c049c <SCB_EnableICache+0xc049c>
 498:	02050100 	andeq	r0, r5, #0, 2
 49c:	13053d3f 	movwne	r3, #23871	; 0x5d3f
 4a0:	12052f3f 	andne	r2, r5, #63, 30	; 0xfc
 4a4:	2f02052f 	svccs	0x0002052f
 4a8:	0105595a 	tsteq	r5, sl, asr r9
 4ac:	0008023d 	andeq	r0, r8, sp, lsr r2
 4b0:	03040101 	movweq	r0, #16641	; 0x4101
 4b4:	05003105 	streq	r3, [r0, #-261]	; 0xfffffefb
 4b8:	00000002 	andeq	r0, r0, r2
 4bc:	00ea0300 	rsceq	r0, sl, r0, lsl #6
 4c0:	4e030501 	cfsh32mi	mvfx0, mvfx3, #1
 4c4:	bd1805bd 	cfldr32lt	mvfx0, [r8, #-756]	; 0xfffffd0c
 4c8:	2f3d1905 	svccs	0x003d1905
 4cc:	052f1a05 	streq	r1, [pc, #-2565]!	; fffffacf <SCB_EnableICache+0xfffffacf>
 4d0:	03052f1e 	movweq	r2, #24350	; 0x5f1e
 4d4:	6918052f 	ldmdbvs	r8, {r0, r1, r2, r3, r5, r8, sl}
 4d8:	053d0305 	ldreq	r0, [sp, #-773]!	; 0xfffffcfb
 4dc:	08026701 	stmdaeq	r2, {r0, r8, r9, sl, sp, lr}
 4e0:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
 4e4:	00190503 	andseq	r0, r9, r3, lsl #10
 4e8:	00000205 	andeq	r0, r0, r5, lsl #4
 4ec:	80030000 	andhi	r0, r3, r0
 4f0:	1c050101 	stfnes	f0, [r5], {1}
 4f4:	3d21052f 	cfstr32cc	mvfx0, [r1, #-188]!	; 0xffffff44
 4f8:	054b2305 	strbeq	r2, [fp, #-773]	; 0xfffffcfb
 4fc:	1f053d21 	svcne	0x00053d21
 500:	3d22053d 	cfstr32cc	mvfx0, [r2, #-244]!	; 0xffffff0c
 504:	053d1d05 	ldreq	r1, [sp, #-3333]!	; 0xfffff2fb
 508:	01053e02 	tsteq	r5, r2, lsl #28
 50c:	0007023d 	andeq	r0, r7, sp, lsr r2
 510:	03040101 	movweq	r0, #16641	; 0x4101
 514:	05000f05 	streq	r0, [r0, #-3845]	; 0xfffff0fb
 518:	00000002 	andeq	r0, r0, r2
 51c:	018c0300 	orreq	r0, ip, r0, lsl #6
 520:	3d090501 	cfstr32cc	mvfx0, [r9, #-4]
 524:	05595959 	ldrbeq	r5, [r9, #-2393]	; 0xfffff6a7
 528:	10055a08 	andne	r5, r5, r8, lsl #20
 52c:	84020532 	strhi	r0, [r2], #-1330	; 0xffffface
 530:	bb2f302f 	bllt	bcc5f4 <SCB_EnableICache+0xbcc5f4>
 534:	2f2fbcbb 	svccs	0x002fbcbb
 538:	05320e05 	ldreq	r0, [r2, #-3589]!	; 0xfffff1fb
 53c:	0205bc39 	andeq	fp, r5, #14592	; 0x3900
 540:	0003054a 	andeq	r0, r3, sl, asr #10
 544:	69010402 	stmdbvs	r1, {r1, sl}
 548:	01040200 	mrseq	r0, R12_usr
 54c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 550:	1b023b01 	blne	8f15c <SCB_EnableICache+0x8f15c>
 554:	Address 0x0000000000000554 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
{
       0:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
  __ASM volatile ("dsb 0xF":::"memory");
       4:	5152495f 	cmppl	r2, pc, asr r9
  __ASM volatile ("isb 0xF":::"memory");
       8:	544f006e 	strbpl	r0, [pc], #-110	; 10 <.debug_str+0x10>
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
       c:	53465f47 	movtpl	r5, #28487	; 0x6f47
      10:	5152495f 	cmppl	r2, pc, asr r9
  __ASM volatile ("dsb 0xF":::"memory");
      14:	7748006e 	strbvc	r0, [r8, -lr, rrx]
  __ASM volatile ("isb 0xF":::"memory");
      18:	776f6c46 	strbvc	r6, [pc, -r6, asr #24]!
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
      1c:	006c7443 	rsbeq	r7, ip, r3, asr #8
      20:	5f485445 	svcpl	0x00485445
      24:	50554b57 	subspl	r4, r5, r7, asr fp
  __ASM volatile ("dsb 0xF":::"memory");
      28:	5152495f 	cmppl	r2, pc, asr r9
  __ASM volatile ("isb 0xF":::"memory");
      2c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
}
      30:	425f384d 	subsmi	r3, pc, #5046272	; 0x4d0000
      34:	545f4b52 	ldrbpl	r4, [pc], #-2898	; 3c <.debug_str+0x3c>
      38:	32314d49 	eorscc	r4, r1, #4672	; 0x1240
      3c:	5152495f 	cmppl	r2, pc, asr r9
{
      40:	5f5f006e 	svcpl	0x005f006e
      44:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
      48:	00745f38 	rsbseq	r5, r4, r8, lsr pc
      4c:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
  __ASM volatile ("dsb 0xF":::"memory");
      50:	00434156 	subeq	r4, r3, r6, asr r1
    ccsidr = SCB->CCSIDR;
      54:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
      58:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
      5c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
      60:	5152495f 	cmppl	r2, pc, asr r9
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      64:	4344006e 	movtmi	r0, #16494	; 0x406e
      68:	41564d43 	cmpmi	r6, r3, asr #26
      6c:	6d5f0055 	ldclvs	0, cr0, [pc, #-340]	; ffffff20 <SCB_EnableICache+0xffffff20>
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
      70:	61747362 	cmnvs	r4, r2, ror #6
      74:	5f006574 	svcpl	0x00006574
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
      78:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
      7c:	4f007469 	svcmi	0x00007469
      80:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
      } while (ways-- != 0U);
      84:	4b575f53 	blmi	15d7dd8 <SCB_EnableICache+0x15d7dd8>
      88:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
      8c:	006e5152 	rsbeq	r5, lr, r2, asr r1
    } while(sets-- != 0U);
      90:	61746144 	cmnvs	r4, r4, asr #2
      94:	65766e49 	ldrbvs	r6, [r6, #-3657]!	; 0xfffff1b7
      98:	58007472 	stmdapl	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
      9c:	41726566 	cmnmi	r2, r6, ror #10
      a0:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
      a4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
      a8:	6b636162 	blvs	18d8638 <SCB_EnableICache+0x18d8638>
  __ASM volatile ("isb 0xF":::"memory");
      ac:	414d4400 	cmpmi	sp, r0, lsl #8
}
      b0:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
      b4:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
      b8:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
      bc:	52006e51 	andpl	r6, r0, #1296	; 0x510
void systick_handler(void){
      c0:	545f4343 	ldrbpl	r4, [pc], #-835	; c8 <.debug_str+0xc8>
	HAL_IncTick();
      c4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
}
      c8:	5f006665 	svcpl	0x00006665
void hal_clocks_init(void){
      cc:	5f6d745f 	svcpl	0x006d745f
      d0:	006e6f6d 	rsbeq	r6, lr, sp, ror #30
  HAL_StatusTypeDef  ret = HAL_OK;
      d4:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
  __HAL_RCC_PWR_CLK_ENABLE();
      d8:	73657079 	cmnvc	r5, #121	; 0x79
      dc:	5f444900 	svcpl	0x00444900
      e0:	00524644 	subseq	r4, r2, r4, asr #12
      e4:	5f434441 	svcpl	0x00434441
      e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
      ec:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
      f0:	695f0063 	ldmdbvs	pc, {r0, r1, r5, r6}^	; <UNPREDICTABLE>
      f4:	5800646e 	stmdapl	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
      f8:	43726566 	cmnmi	r2, #427819008	; 0x19800000
      fc:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
     100:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     104:	006b6361 	rsbeq	r6, fp, r1, ror #6
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
     108:	4f464946 	svcmi	0x00464946
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
     10c:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     110:	6c6f6873 	stclvs	8, cr6, [pc], #-460	; ffffff4c <SCB_EnableICache+0xffffff4c>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
     114:	69750064 	ldmdbvs	r5!, {r2, r5, r6}^
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
     118:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
  RCC_OscInitStruct.PLL.PLLM = 25;
     11c:	5100745f 	tstpl	r0, pc, asr r4
  RCC_OscInitStruct.PLL.PLLN = 432;
     120:	53444155 	movtpl	r4, #16725	; 0x4155
     124:	495f4950 	ldmdbmi	pc, {r4, r6, r8, fp, lr}^	; <UNPREDICTABLE>
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
     128:	006e5152 	rsbeq	r5, lr, r2, asr r1
  RCC_OscInitStruct.PLL.PLLQ = 9;
     12c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
  RCC_OscInitStruct.PLL.PLLR = 7;
     130:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
     134:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
     138:	5152495f 	cmppl	r2, pc, asr r9
     13c:	4352006e 	cmpmi	r2, #110	; 0x6e
     140:	734f5f43 	movtvc	r5, #65347	; 0xff43
  if(ret != HAL_OK){
     144:	696e4963 	stmdbvs	lr!, {r0, r1, r5, r6, r8, fp, lr}^
     148:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
  ret = HAL_PWREx_EnableOverDrive();
     14c:	00746375 	rsbseq	r6, r4, r5, ror r3
     150:	616c665f 	cmnvs	ip, pc, asr r6
     154:	48007367 	stmdami	r0, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
  if(ret != HAL_OK){
     158:	74534953 	ldrbvc	r4, [r3], #-2387	; 0xfffff6ad
     15c:	00657461 	rsbeq	r7, r5, r1, ror #8
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
     160:	495f4449 	ldmdbmi	pc, {r0, r3, r6, sl, lr}^	; <UNPREDICTABLE>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
     164:	00524153 	subseq	r4, r2, r3, asr r1
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
     168:	46766441 	ldrbtmi	r6, [r6], -r1, asr #8
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
     16c:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0xfffffe9b
     170:	6e496572 	mcrvs	5, 2, r6, cr9, cr2, {3}
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
     174:	55007469 	strpl	r7, [r0, #-1129]	; 0xfffffb97
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
     178:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     17c:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
     180:	41006e51 	tstmi	r0, r1, asr lr
     184:	4c434248 	sfmmi	f4, 2, [r3], {72}	; 0x48
     188:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
  if(ret != HAL_OK){
     18c:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
     190:	414d4400 	cmpmi	sp, r0, lsl #8
}
     194:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     198:	70795474 	rsbsvc	r5, r9, r4, ror r4
     19c:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     1a0:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
void exti0_line_interrupt_handler(void){
     1a4:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
  HAL_GPIO_EXTI_IRQHandler(USER_BUTTON_PIN);
     1a8:	6f6c4300 	svcvs	0x006c4300
     1ac:	79546b63 	ldmdbvc	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
}
     1b0:	5f006570 	svcpl	0x00006570
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
     1b4:	5f676973 	svcpl	0x00676973
     1b8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
  if (GPIO_Pin == GPIO_PIN_0){
     1bc:	6f6c5f00 	svcvs	0x006c5f00
     1c0:	5f006b63 	svcpl	0x00006b63
    BSP_LED_Toggle(LED2);
     1c4:	6675626e 	ldrbtvs	r6, [r5], -lr, ror #4
}
     1c8:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     1cc:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
void hal_button_init(void){
     1d0:	58785400 	ldmdapl	r8!, {sl, ip, lr}^
     1d4:	53726566 	cmnpl	r2, #427819008	; 0x19800000
	BSP_LED_Init(LED2);
     1d8:	00657a69 	rsbeq	r7, r5, r9, ror #20
	BSP_LED_Init(LED1);
     1dc:	4f464946 	svcmi	0x00464946
     1e0:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
	gpio_config.Mode = GPIO_MODE_IT_RISING;
     1e4:	43435200 	movtmi	r5, #12800	; 0x3200
	gpio_config.Pull = GPIO_NOPULL;
     1e8:	5152495f 	cmppl	r2, pc, asr r9
	gpio_config.Pin = GPIO_PIN_0;
     1ec:	4153006e 	cmpmi	r3, lr, rrx
	HAL_GPIO_Init(GPIOA, &gpio_config);
     1f0:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     1f4:	006e5152 	rsbeq	r5, lr, r2, asr r1
	HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
     1f8:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     1fc:	73746942 	cmnvc	r4, #1081344	; 0x108000
     200:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
     204:	00524550 	subseq	r4, r2, r0, asr r5
}
     208:	69507854 	ldmdbvs	r0, {r2, r4, r6, fp, ip, sp, lr}^
     20c:	76654c6e 	strbtvc	r4, [r5], -lr, ror #24
     210:	6e496c65 	cdpvs	12, 4, cr6, cr9, cr5, {3}
     214:	74726576 	ldrbtvc	r6, [r2], #-1398	; 0xfffffa8a
void HAL_UART_MspInit(UART_HandleTypeDef *huart){
     218:	61745300 	cmnvs	r4, r0, lsl #6
     21c:	53006574 	movwpl	r6, #1396	; 0x574
  __GPIOA_CLK_ENABLE();
     220:	5f314941 	svcpl	0x00314941
     224:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     228:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
     22c:	745f3233 	ldrbvc	r3, [pc], #-563	; 234 <.debug_str+0x234>
     230:	49444d00 	stmdbmi	r4, {r8, sl, fp, lr}^
     234:	495f534f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, r9, ip, lr}^	; <UNPREDICTABLE>
  __USART1_CLK_ENABLE();
     238:	006e5152 	rsbeq	r5, lr, r2, asr r1
     23c:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     240:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     244:	6e695f6f 	cdpvs	15, 6, cr5, cr9, cr15, {3}
     248:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
     24c:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
  gpio_init_struct.Pin = GPIO_PIN_9;
     250:	304d0074 	subcc	r0, sp, r4, ror r0
     254:	74005241 	strvc	r5, [r0], #-577	; 0xfffffdbf
  gpio_init_struct.Mode = GPIO_MODE_AF_PP;
     258:	6572706d 	ldrbvs	r7, [r2, #-109]!	; 0xffffff93
  gpio_init_struct.Pull = GPIO_PULLUP;
     25c:	43440067 	movtmi	r0, #16487	; 0x4067
  gpio_init_struct.Speed = GPIO_SPEED_HIGH;
     260:	495f494d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, lr}^	; <UNPREDICTABLE>
  gpio_init_struct.Alternate = GPIO_AF7_USART1;
     264:	006e5152 	rsbeq	r5, lr, r2, asr r1
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
     268:	5f424353 	svcpl	0x00424353
     26c:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
     270:	4344656c 	movtmi	r6, #17772	; 0x456c
  gpio_init_struct.Pin = GPIO_PIN_10;
     274:	65686361 	strbvs	r6, [r8, #-865]!	; 0xfffffc9f
  HAL_GPIO_Init(GPIOA, &gpio_init_struct);
     278:	44454c00 	strbmi	r4, [r5], #-3072	; 0xfffff400
     27c:	4445525f 	strbmi	r5, [r5], #-607	; 0xfffffda1
     280:	43545200 	cmpmi	r4, #0, 4
}
     284:	616c415f 	cmnvs	ip, pc, asr r1
     288:	495f6d72 	ldmdbmi	pc, {r1, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     28c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     290:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
void hal_uart_init(void){
     294:	6e496d61 	cdpvs	13, 4, cr6, cr9, cr1, {3}
	uart_init_struct.Instance = USART1;
     298:	00786564 	rsbseq	r6, r8, r4, ror #10
     29c:	36495053 			; <UNDEFINED> instruction: 0x36495053
	uart_init_struct.Init.BaudRate = 9600;
     2a0:	5152495f 	cmppl	r2, pc, asr r9
     2a4:	4648006e 	strbmi	r0, [r8], -lr, rrx
	uart_init_struct.Init.WordLength = UART_WORDLENGTH_8B;
     2a8:	41005253 	tstmi	r0, r3, asr r2
	uart_init_struct.Init.StopBits = UART_STOPBITS_1;
     2ac:	43324250 	teqmi	r2, #80, 4
     2b0:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
	uart_init_struct.Init.Parity = UART_PARITY_NONE;
     2b4:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
	uart_init_struct.Init.HwFlowCtl = UART_HWCONTROL_NONE;
     2b8:	43440072 	movtmi	r0, #16498	; 0x4072
     2bc:	57534943 	ldrbpl	r4, [r3, -r3, asr #18]
	uart_init_struct.Init.Mode = UART_MODE_TX_RX;
     2c0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
	HAL_UART_Init(&uart_init_struct);
     2c4:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
     2c8:	50410059 	subpl	r0, r1, r9, asr r0
}
     2cc:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
     2d0:	5f005254 	svcpl	0x00005254
     2d4:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
     2d8:	00657a69 	rsbeq	r7, r5, r9, ror #20
     2dc:	72617568 	rsbvc	r7, r1, #104, 10	; 0x1a000000
     2e0:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
     2e4:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     2e8:	61657274 	smcvs	22308	; 0x5724
     2ec:	495f366d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     2f0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     2f4:	61435653 	cmpvs	r3, r3, asr r6
     2f8:	495f6c6c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     2fc:	006e5152 	rsbeq	r5, lr, r2, asr r1
int main(void){
     300:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
     304:	69440061 	stmdbvs	r4, {r0, r5, r6}^
	double val3 = 4.002503;
     308:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
     30c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
	double val2 = 4.233456;
     310:	31414d44 	cmpcc	r1, r4, asr #26
     314:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     318:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
	double val1 = 4.789317;
     31c:	5152495f 	cmppl	r2, pc, asr r9
     320:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
	double val0 = 4.220734;
     324:	435f314d 	cmpmi	pc, #1073741843	; 0x40000013
     328:	52495f43 	subpl	r5, r9, #268	; 0x10c
     32c:	5f006e51 	svcpl	0x00006e51
	char *my_msg = "HAL example using GPIO and UART\n";
     330:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  //Enable ARM's FPU
     334:	725f006b 	subsvc	r0, pc, #107	; 0x6b
     338:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     33c:	726f5700 	rsbvc	r5, pc, #0, 14
     340:	6e654c64 	cdpvs	12, 6, cr4, cr5, cr4, {3}
	SCB_EnableDCache();
     344:	00687467 	rsbeq	r7, r8, r7, ror #8
	SCB_EnableICache();
     348:	334e4143 	movtcc	r4, #57667	; 0xe143
	HAL_Init();
     34c:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
	__HAL_RCC_GPIOA_CLK_ENABLE();
     350:	5152495f 	cmppl	r2, pc, asr r9
     354:	7852006e 	ldmdavc	r2, {r1, r2, r3, r5, r6}^
     358:	4c6e6950 			; <UNDEFINED> instruction: 0x4c6e6950
     35c:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
     360:	65766e49 	ldrbvs	r6, [r6, #-3657]!	; 0xfffff1b7
     364:	4f007472 	svcmi	0x00007472
	__HAL_RCC_GPIOB_CLK_ENABLE();
     368:	6c696373 	stclvs	3, cr6, [r9], #-460	; 0xfffffe34
     36c:	6f74616c 	svcvs	0x0074616c
     370:	70795472 	rsbsvc	r5, r9, r2, ror r4
     374:	57570065 	ldrbpl	r0, [r7, -r5, rrx]
     378:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     37c:	006e5152 	rsbeq	r5, lr, r2, asr r1
	__HAL_RCC_GPIOC_CLK_ENABLE();
     380:	66735f5f 	uhsaxvs	r5, r3, pc	; <UNPREDICTABLE>
     384:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
     388:	6e757272 	mrcvs	2, 3, r7, cr5, cr2, {3}
     38c:	61736944 	cmnvs	r3, r4, asr #18
     390:	00656c62 	rsbeq	r6, r5, r2, ror #24
     394:	524f5456 	subpl	r5, pc, #1442840576	; 0x56000000
	hal_clocks_init();
     398:	61625f00 	cmnvs	r2, r0, lsl #30
	hal_button_init();
     39c:	44006573 	strmi	r6, [r0], #-1395	; 0xfffffa8d
	hal_uart_init();
     3a0:	5f31414d 	svcpl	0x0031414d
	my_result = standard_rms(val3, val2, val1, val0);
     3a4:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     3a8:	5f346d61 	svcpl	0x00346d61
     3ac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     3b0:	626d5f00 	rsbvs	r5, sp, #0, 30
     3b4:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     3b8:	6174735f 	cmnvs	r4, pc, asr r3
	HAL_UART_Transmit(&uart_init_struct, (uint8_t*)my_msg, strlen(my_msg), 100);
     3bc:	54006574 	strpl	r6, [r0], #-1396	; 0xfffffa8c
     3c0:	5f384d49 	svcpl	0x00384d49
     3c4:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     3c8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     3cc:	44534644 	ldrbmi	r4, [r3], #-1604	; 0xfffff9bc
		BSP_LED_Toggle(LED1);
     3d0:	465f314d 	ldrbmi	r3, [pc], -sp, asr #2
		HAL_Delay(50);
     3d4:	5f32544c 	svcpl	0x0032544c
     3d8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
		BSP_LED_Toggle(LED1);
     3dc:	42504100 	subsmi	r4, r0, #0, 2
     3e0:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     3e4:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 3ec <.debug_str+0x3ec>
     3e8:	504a006d 	subpl	r0, sl, sp, rrx
     3ec:	495f4745 	ldmdbmi	pc, {r0, r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     3f0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     3f4:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     3f8:	315f3531 	cmpcc	pc, r1, lsr r5	; <UNPREDICTABLE>
     3fc:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     400:	5f006e51 	svcpl	0x00006e51
     404:	5f6d745f 	svcpl	0x006d745f
     408:	79616479 	stmdbvc	r1!, {r0, r3, r4, r5, r6, sl, sp, lr}^
     40c:	53464400 	movtpl	r4, #25600	; 0x6400
     410:	5f314d44 	svcpl	0x00314d44
     414:	31544c46 	cmpcc	r4, r6, asr #24
     418:	5152495f 	cmppl	r2, pc, asr r9
     41c:	4644006e 	strbmi	r0, [r4], -lr, rrx
     420:	41005253 	tstmi	r0, r3, asr r2
     424:	52534642 	subspl	r4, r3, #69206016	; 0x4200000
     428:	4f4c5f00 	svcmi	0x004c5f00
     42c:	545f4b43 	ldrbpl	r4, [pc], #-2883	; 434 <.debug_str+0x434>
     430:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     434:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     438:	5f5f006e 	svcpl	0x005f006e
     43c:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     440:	745f3631 	ldrbvc	r3, [pc], #-1585	; 448 <.debug_str+0x448>
     444:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     448:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
     44c:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     450:	41480064 	cmpmi	r8, r4, rrx
     454:	41555f4c 	cmpmi	r5, ip, asr #30
     458:	4d5f5452 	cfldrdmi	mvd5, [pc, #-328]	; 318 <.debug_str+0x318>
     45c:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
     460:	44007469 	strmi	r7, [r0], #-1129	; 0xfffffb97
     464:	4d445346 	stclmi	3, cr5, [r4, #-280]	; 0xfffffee8
     468:	4c465f31 	mcrrmi	15, 3, r5, r6, cr1
     46c:	495f3054 	ldmdbmi	pc, {r2, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     470:	006e5152 	rsbeq	r5, lr, r2, asr r1
     474:	5241314d 	subpl	r3, r1, #1073741843	; 0x40000013
     478:	414d4400 	cmpmi	sp, r0, lsl #8
     47c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     480:	5f6d6165 	svcpl	0x006d6165
     484:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     488:	00666544 	rsbeq	r6, r6, r4, asr #10
     48c:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     490:	75426870 	strbvc	r6, [r2, #-2160]	; 0xfffff790
     494:	00747372 	rsbseq	r7, r4, r2, ror r3
     498:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     49c:	5f746c75 	svcpl	0x00746c75
     4a0:	735f006b 	cmpvc	pc, #107	; 0x6b
     4a4:	72656474 	rsbvc	r6, r5, #116, 8	; 0x74000000
     4a8:	725f0072 	subsvc	r0, pc, #114	; 0x72
     4ac:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     4b0:	645f0074 	ldrbvs	r0, [pc], #-116	; 4b8 <.debug_str+0x4b8>
     4b4:	685f6f73 	ldmdavs	pc, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     4b8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     4bc:	5f5f0065 	svcpl	0x005f0065
     4c0:	775f6d74 			; <UNDEFINED> instruction: 0x775f6d74
     4c4:	00796164 	rsbseq	r6, r9, r4, ror #2
     4c8:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     4cc:	6473695f 	ldrbtvs	r6, [r3], #-2399	; 0xfffff6a1
     4d0:	41007473 	tstmi	r0, r3, ror r4
     4d4:	43504248 	cmpmi	r0, #72, 4	; 0x80000004
     4d8:	58450052 	stmdapl	r5, {r1, r4, r6}^
     4dc:	5f324954 	svcpl	0x00324954
     4e0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4e4:	736e7500 	cmnvc	lr, #0, 10
     4e8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     4ec:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
     4f0:	5f007261 	svcpl	0x00007261
     4f4:	6f647473 	svcvs	0x00647473
     4f8:	52007475 	andpl	r7, r0, #1962934272	; 0x75000000
     4fc:	00524f54 	subseq	r4, r2, r4, asr pc
     500:	4d445f5f 	stclmi	15, cr5, [r4, #-380]	; 0xfffffe84
     504:	61485f41 	cmpvs	r8, r1, asr #30
     508:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     50c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     510:	00666544 	rsbeq	r6, r6, r4, asr #10
     514:	5f47544f 	svcpl	0x0047544f
     518:	455f5348 	ldrbmi	r5, [pc, #-840]	; 1d8 <.debug_str+0x1d8>
     51c:	495f3150 	ldmdbmi	pc, {r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     520:	52495f4e 	subpl	r5, r9, #312	; 0x138
     524:	5f006e51 	svcpl	0x00006e51
     528:	7273626d 	rsbsvc	r6, r3, #-805306362	; 0xd0000006
     52c:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     530:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
     534:	00657461 	rsbeq	r7, r5, r1, ror #8
     538:	33424841 	movtcc	r4, #10305	; 0x2841
     53c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     540:	775f0052 			; <UNDEFINED> instruction: 0x775f0052
     544:	41007364 	tstmi	r0, r4, ror #6
     548:	43314250 	teqmi	r1, #80, 4
     54c:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
     550:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
     554:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     558:	5f314954 	svcpl	0x00314954
     55c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     560:	474e5200 	strbmi	r5, [lr, -r0, lsl #4]
     564:	5152495f 	cmppl	r2, pc, asr r9
     568:	735f006e 	cmpvc	pc, #110	; 0x6e
     56c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     570:	334e4143 	movtcc	r4, #57667	; 0xe143
     574:	5f58545f 	svcpl	0x0058545f
     578:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     57c:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     580:	616e7265 	cmnvs	lr, r5, ror #4
     584:	41006574 	tstmi	r0, r4, ror r5
     588:	4c324248 	lfmmi	f4, 4, [r2], #-288	; 0xfffffee0
     58c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     590:	76644100 	strbtvc	r4, [r4], -r0, lsl #2
     594:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
     598:	696e4964 	stmdbvs	lr!, {r2, r5, r6, r8, fp, lr}^
     59c:	58450074 	stmdapl	r5, {r2, r4, r5, r6}^
     5a0:	5f304954 	svcpl	0x00304954
     5a4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5a8:	54777500 	ldrbtpl	r7, [r7], #-1280	; 0xfffffb00
     5ac:	006b6369 	rsbeq	r6, fp, r9, ror #6
     5b0:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     5b4:	54006574 	strpl	r6, [r0], #-1396	; 0xfffffa8c
     5b8:	5f504d41 	svcpl	0x00504d41
     5bc:	4d415453 	cfstrdmi	mvd5, [r1, #-332]	; 0xfffffeb4
     5c0:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     5c4:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     5c8:	4f5f4c41 	svcmi	0x005f4c41
     5cc:	7854004b 	ldmdavc	r4, {r0, r1, r3, r6}^
     5d0:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     5d4:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     5d8:	64680074 	strbtvs	r0, [r8], #-116	; 0xffffff8c
     5dc:	7872616d 	ldmdavc	r2!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     5e0:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     5e4:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     5e8:	322e3820 	eorcc	r3, lr, #32, 16	; 0x200000
     5ec:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
     5f0:	31383130 	teqcc	r8, r0, lsr r1
     5f4:	20333132 	eorscs	r3, r3, r2, lsr r1
     5f8:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
     5fc:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
     600:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
     604:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
     608:	6172622d 	cmnvs	r2, sp, lsr #4
     60c:	2068636e 	rsbcs	r6, r8, lr, ror #6
     610:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     614:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     618:	37363220 	ldrcc	r3, [r6, -r0, lsr #4]!
     61c:	5d343730 	ldcpl	7, cr3, [r4, #-192]!	; 0xffffff40
     620:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     624:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     628:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     62c:	376d2d78 			; <UNDEFINED> instruction: 0x376d2d78
     630:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     634:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     638:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     63c:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     640:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     644:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
     648:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
     64c:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
     650:	35767066 	ldrbcc	r7, [r6, #-102]!	; 0xffffff9a
     654:	3631642d 	ldrtcc	r6, [r1], -sp, lsr #8
     658:	616d2d20 	cmnvs	sp, r0, lsr #26
     65c:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     660:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     664:	6d2d6537 	cfstr32vs	mvfx6, [sp, #-220]!	; 0xffffff24
     668:	2e70662b 	cdpcs	6, 7, cr6, cr0, cr11, {1}
     66c:	2d207064 	stccs	0, cr7, [r0, #-400]!	; 0xfffffe70
     670:	4f2d2067 	svcmi	0x002d2067
     674:	662d2030 			; <UNDEFINED> instruction: 0x662d2030
     678:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     67c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     680:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     684:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     688:	5f5f0073 	svcpl	0x005f0073
     68c:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     690:	00726165 	rsbseq	r6, r2, r5, ror #2
     694:	6b636f4c 	blvs	18dc3cc <SCB_EnableICache+0x18dc3cc>
     698:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     69c:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     6a0:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     6a4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     6a8:	756d5f00 	strbvc	r5, [sp, #-3840]!	; 0xfffff100
     6ac:	4100746c 	tstmi	r0, ip, ror #8
     6b0:	52324248 	eorspl	r4, r2, #72, 4	; 0x80000004
     6b4:	00525453 	subseq	r5, r2, r3, asr r4
     6b8:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
     6bc:	5f6e656c 	svcpl	0x006e656c
     6c0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     6c4:	50530065 	subspl	r0, r3, r5, rrx
     6c8:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     6cc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6d0:	534c4c50 	movtpl	r4, #52304	; 0xcc50
     6d4:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     6d8:	6d646800 	stclvs	8, cr6, [r4, #-0]
     6dc:	00787461 	rsbseq	r7, r8, r1, ror #8
     6e0:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     6e4:	49006e69 	stmdbmi	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
     6e8:	00525343 	subseq	r5, r2, r3, asr #6
     6ec:	616d6e5f 	cmnvs	sp, pc, asr lr
     6f0:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     6f4:	65705300 	ldrbvs	r5, [r0, #-768]!	; 0xfffffd00
     6f8:	53006465 	movwpl	r6, #1125	; 0x465
     6fc:	5f314950 	svcpl	0x00314950
     700:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     704:	52415500 	subpl	r5, r1, #0, 10
     708:	495f3454 	ldmdbmi	pc, {r2, r4, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     70c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     710:	64756142 	ldrbtvs	r6, [r5], #-322	; 0xfffffebe
     714:	65746152 	ldrbvs	r6, [r4, #-338]!	; 0xfffffeae
     718:	43434400 	movtmi	r4, #13312	; 0x3400
     71c:	5f005753 	svcpl	0x00005753
     720:	5f66666f 	svcpl	0x0066666f
     724:	41480074 	hvcmi	32772	; 0x8004
     728:	4e555f4c 	cdpmi	15, 5, cr5, cr5, cr12, {2}
     72c:	4b434f4c 	blmi	10d4464 <SCB_EnableICache+0x10d4464>
     730:	5f004445 	svcpl	0x00004445
     734:	61636f6c 	cmnvs	r3, ip, ror #30
     738:	6d69746c 	cfstrdvs	mvd7, [r9, #-432]!	; 0xfffffe50
     73c:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
     740:	5f5f0066 	svcpl	0x005f0066
     744:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     748:	69750074 	ldmdbvs	r5!, {r2, r4, r5, r6}^
     74c:	5f38746e 	svcpl	0x0038746e
     750:	78520074 	ldmdavc	r2, {r2, r4, r5, r6}^
     754:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     758:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     75c:	53480074 	movtpl	r0, #32884	; 0x8074
     760:	6c614349 	stclvs	3, cr4, [r1], #-292	; 0xfffffedc
     764:	61726269 	cmnvs	r2, r9, ror #4
     768:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     76c:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     770:	4d440065 	stclmi	0, cr0, [r4, #-404]	; 0xfffffe6c
     774:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     778:	61657274 	smcvs	22308	; 0x5724
     77c:	495f306d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     780:	006e5152 	rsbeq	r5, lr, r2, asr r1
     784:	31425041 	cmpcc	r2, r1, asr #32
     788:	00524e45 	subseq	r4, r2, r5, asr #28
     78c:	314e4143 	cmpcc	lr, r3, asr #2
     790:	3158525f 	cmpcc	r8, pc, asr r2
     794:	5152495f 	cmppl	r2, pc, asr r9
     798:	6550006e 	ldrbvs	r0, [r0, #-110]	; 0xffffff92
     79c:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     7a0:	61746144 	cmnvs	r4, r4, asr #2
     7a4:	67696c41 	strbvs	r6, [r9, -r1, asr #24]!
     7a8:	6e656d6e 	cdpvs	13, 6, cr6, cr5, cr14, {3}
     7ac:	4c500074 	mrrcmi	0, 7, r0, r0, cr4	; <UNPREDICTABLE>
     7b0:	756f534c 	strbvc	r5, [pc, #-844]!	; 46c <.debug_str+0x46c>
     7b4:	00656372 	rsbeq	r6, r5, r2, ror r3
     7b8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     7bc:	5f355f39 	svcpl	0x00355f39
     7c0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7c4:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
     7c8:	66756274 			; <UNDEFINED> instruction: 0x66756274
     7cc:	53534300 	cmppl	r3, #0, 6
     7d0:	00524c45 	subseq	r4, r2, r5, asr #24
     7d4:	374d4954 	smlsldcc	r4, sp, r4, r9
     7d8:	5152495f 	cmppl	r2, pc, asr r9
     7dc:	454c006e 	strbmi	r0, [ip, #-110]	; 0xffffff92
     7e0:	52475f44 	subpl	r5, r7, #68, 30	; 0x110
     7e4:	004e4545 	subeq	r4, lr, r5, asr #10
     7e8:	5f435452 	svcpl	0x00435452
     7ec:	50554b57 	subspl	r4, r5, r7, asr fp
     7f0:	5152495f 	cmppl	r2, pc, asr r9
     7f4:	4143006e 	cmpmi	r3, lr, rrx
     7f8:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     7fc:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     800:	006e5152 	rsbeq	r5, lr, r2, asr r1
     804:	4d435449 	cfstrdmi	mvd5, [r3, #-292]	; 0xfffffedc
     808:	47005243 	strmi	r5, [r0, -r3, asr #4]
     80c:	00525054 	subseq	r5, r2, r4, asr r0
     810:	4550534f 	ldrbmi	r5, [r0, #-847]	; 0xfffffcb1
     814:	00524445 	subseq	r4, r2, r5, asr #8
     818:	63775f5f 	cmnvs	r7, #380	; 0x17c
     81c:	5f006268 	svcpl	0x00006268
     820:	4253445f 	subsmi	r4, r3, #1593835520	; 0x5f000000
     824:	626d5f00 	rsbvs	r5, sp, #0, 30
     828:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
     82c:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
     830:	00657461 	rsbeq	r7, r5, r1, ror #8
     834:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     838:	756f685f 	strbvc	r6, [pc, #-2143]!	; ffffffe1 <SCB_EnableICache+0xffffffe1>
     83c:	41480072 	hvcmi	32770	; 0x8002
     840:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     844:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
     848:	5f514552 	svcpl	0x00514552
     84c:	5a484b31 	bpl	1213518 <SCB_EnableICache+0x1213518>
     850:	6e697700 	cdpvs	7, 6, cr7, cr9, cr0, {0}
     854:	00745f74 	rsbseq	r5, r4, r4, ror pc
     858:	53414c46 	movtpl	r4, #7238	; 0x1c46
     85c:	52495f48 	subpl	r5, r9, #72, 30	; 0x120
     860:	5f006e51 	svcpl	0x00006e51
     864:	0077656e 	rsbseq	r6, r7, lr, ror #10
     868:	6f696e5f 	svcvs	0x00696e5f
     86c:	54007362 	strpl	r7, [r0], #-866	; 0xfffffc9e
     870:	5f354d49 	svcpl	0x00354d49
     874:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     878:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     87c:	554c4c41 	strbpl	r4, [ip, #-3137]	; 0xfffff3bf
     880:	49785400 	ldmdbmi	r8!, {sl, ip, lr}^
     884:	65005253 	strvs	r5, [r0, #-595]	; 0xfffffdad
     888:	30697478 	rsbcc	r7, r9, r8, ror r4
     88c:	6e696c5f 	mcrvs	12, 3, r6, cr9, cr15, {2}
     890:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
     894:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     898:	5f747075 	svcpl	0x00747075
     89c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     8a0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     8a4:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
     8a8:	5f006f6e 	svcpl	0x00006f6e
     8ac:	5f6d745f 	svcpl	0x006d745f
     8b0:	7961646d 	stmdbvc	r1!, {r0, r2, r3, r5, r6, sl, sp, lr}^
     8b4:	61775300 	cmnvs	r7, r0, lsl #6
     8b8:	43520070 	cmpmi	r2, #112	; 0x70
     8bc:	734f5f43 	movtvc	r5, #65347	; 0xff43
     8c0:	696e4963 	stmdbvs	lr!, {r0, r1, r5, r6, r8, fp, lr}^
     8c4:	70795474 	rsbsvc	r5, r9, r4, ror r4
     8c8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     8cc:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
     8d0:	73677261 	cmnvc	r7, #268435462	; 0x10000006
     8d4:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     8d8:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     8dc:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     8e0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     8e4:	72450066 	subvc	r0, r5, #102	; 0x66
     8e8:	43726f72 	cmnmi	r2, #456	; 0x1c8
     8ec:	0065646f 	rsbeq	r6, r5, pc, ror #8
     8f0:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     8f4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     8f8:	376d6165 	strbcc	r6, [sp, -r5, ror #2]!
     8fc:	5152495f 	cmppl	r2, pc, asr r9
     900:	6e5f006e 	cdpvs	0, 5, cr0, cr15, cr14, {3}
     904:	00747865 	rsbseq	r7, r4, r5, ror #16
     908:	5f47544f 	svcpl	0x0047544f
     90c:	495f5348 	ldmdbmi	pc, {r3, r6, r8, r9, ip, lr}^	; <UNPREDICTABLE>
     910:	006e5152 	rsbeq	r5, lr, r2, asr r1
     914:	42656e4f 	rsbmi	r6, r5, #1264	; 0x4f0
     918:	61537469 	cmpvs	r3, r9, ror #8
     91c:	696c706d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, ip, sp, lr}^
     920:	5f00676e 	svcpl	0x0000676e
     924:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     928:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     92c:	5f006675 	svcpl	0x00006675
     930:	6b6f6f63 	blvs	1bdc6c4 <SCB_EnableICache+0x1bdc6c4>
     934:	53006569 	movwpl	r6, #1385	; 0x569
     938:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
     93c:	414d4400 	cmpmi	sp, r0, lsl #8
     940:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     944:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     948:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
     94c:	4f006e51 	svcmi	0x00006e51
     950:	53726576 	cmnpl	r2, #494927872	; 0x1d800000
     954:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     958:	00676e69 	rsbeq	r6, r7, r9, ror #28
     95c:	32425041 	subcc	r5, r2, #65	; 0x41
     960:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     964:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     968:	58545f31 	ldmdapl	r4, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     96c:	5152495f 	cmppl	r2, pc, asr r9
     970:	4c50006e 	mrrcmi	0, 6, r0, r0, cr14	; <UNPREDICTABLE>
     974:	50004d4c 	andpl	r4, r0, ip, asr #26
     978:	004e4c4c 	subeq	r4, lr, ip, asr #24
     97c:	504c4c50 	subpl	r4, ip, r0, asr ip
     980:	4c4c5000 	marmi	acc0, r5, ip
     984:	4c500051 	mrrcmi	0, 5, r0, r0, cr1	; <UNPREDICTABLE>
     988:	4300524c 	movwmi	r5, #588	; 0x24c
     98c:	5f324e41 	svcpl	0x00324e41
     990:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     994:	006e5152 	rsbeq	r5, lr, r2, asr r1
     998:	5f6c6168 	svcpl	0x006c6168
     99c:	636f6c63 	cmnvs	pc, #25344	; 0x6300
     9a0:	695f736b 	ldmdbvs	pc, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     9a4:	0074696e 	rsbseq	r6, r4, lr, ror #18
     9a8:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     9ac:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     9b0:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
     9b4:	5152495f 	cmppl	r2, pc, asr r9
     9b8:	5f5f006e 	svcpl	0x005f006e
     9bc:	735f6d74 	cmpvc	pc, #116, 26	; 0x1d00
     9c0:	5f006365 	svcpl	0x00006365
     9c4:	655f6e6f 	ldrbvs	r6, [pc, #-3695]	; fffffb5d <SCB_EnableICache+0xfffffb5d>
     9c8:	5f746978 	svcpl	0x00746978
     9cc:	73677261 	cmnvc	r7, #268435462	; 0x10000006
     9d0:	61735500 	cmnvs	r3, r0, lsl #10
     9d4:	61466567 	cmpvs	r6, r7, ror #10
     9d8:	5f746c75 	svcpl	0x00746c75
     9dc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9e0:	74754100 	ldrbtvc	r4, [r5], #-256	; 0xffffff00
     9e4:	7561426f 	strbvc	r4, [r1, #-623]!	; 0xfffffd91
     9e8:	74615264 	strbtvc	r5, [r1], #-612	; 0xfffffd9c
     9ec:	646f4d65 	strbtvs	r4, [pc], #-3429	; 9f4 <.debug_str+0x9f4>
     9f0:	4d440065 	stclmi	0, cr0, [r4, #-404]	; 0xfffffe6c
     9f4:	73694441 	cmnvc	r9, #1090519040	; 0x41000000
     9f8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     9fc:	78526e6f 	ldmdavc	r2, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     a00:	6f727245 	svcvs	0x00727245
     a04:	48410072 	stmdami	r1, {r1, r4, r5, r6}^
     a08:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
     a0c:	49410052 	stmdbmi	r1, {r1, r4, r6}^
     a10:	00524352 	subseq	r4, r2, r2, asr r3
     a14:	52525342 	subspl	r5, r2, #134217729	; 0x8000001
     a18:	63775f00 	cmnvs	r7, #0, 30
     a1c:	6d6f7472 	cfstrdvs	mvd7, [pc, #-456]!	; 85c <.debug_str+0x85c>
     a20:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
     a24:	00657461 	rsbeq	r7, r5, r1, ror #8
     a28:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     a2c:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     a30:	70795474 	rsbsvc	r5, r9, r4, ror r4
     a34:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     a38:	42435300 	submi	r5, r3, #0, 6
     a3c:	616e455f 	cmnvs	lr, pc, asr r5
     a40:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     a44:	68636143 	stmdavs	r3!, {r0, r1, r6, r8, sp, lr}^
     a48:	544f0065 	strbpl	r0, [pc], #-101	; a50 <.debug_str+0xa50>
     a4c:	53465f47 	movtpl	r5, #28487	; 0x6f47
     a50:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     a54:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     a58:	70006e51 	andvc	r6, r0, r1, asr lr
     a5c:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
     a60:	74506666 	ldrbvc	r6, [r0], #-1638	; 0xfffff99a
     a64:	54700072 	ldrbtpl	r0, [r0], #-114	; 0xffffff8e
     a68:	66754278 			; <UNDEFINED> instruction: 0x66754278
     a6c:	72745066 	rsbsvc	r5, r4, #102	; 0x66
     a70:	43434400 	movtmi	r4, #13312	; 0x3400
     a74:	41564d49 	cmpmi	r6, r9, asr #26
     a78:	70670043 	rsbvc	r0, r7, r3, asr #32
     a7c:	635f6f69 	cmpvs	pc, #420	; 0x1a4
     a80:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     a84:	41480067 	cmpmi	r8, r7, rrx
     a88:	41555f4c 	cmpmi	r5, ip, asr #30
     a8c:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     a90:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     a94:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     a98:	00666544 	rsbeq	r6, r6, r4, asr #10
     a9c:	4c555f5f 	mrrcmi	15, 5, r5, r5, cr15	; <UNPREDICTABLE>
     aa0:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     aa4:	5f4c4148 	svcpl	0x004c4148
     aa8:	5f414d44 	svcpl	0x00414d44
     aac:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     ab0:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     ab4:	00544553 	subseq	r4, r4, r3, asr r5
     ab8:	31424841 	cmpcc	r2, r1, asr #16
     abc:	00524e45 	subseq	r4, r2, r5, asr #28
     ac0:	314d4954 	cmpcc	sp, r4, asr r9
     ac4:	4b52425f 	blmi	1491448 <SCB_EnableICache+0x1491448>
     ac8:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     acc:	52495f39 	subpl	r5, r9, #57, 30	; 0xe4
     ad0:	68006e51 	stmdavs	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     ad4:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     ad8:	6f747475 	svcvs	0x00747475
     adc:	6e695f6e 	cdpvs	15, 6, cr5, cr9, cr14, {3}
     ae0:	5f007469 	svcpl	0x00007469
     ae4:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
     ae8:	6c5f6b6f 	mrrcvs	11, 6, r6, pc, cr15	; <UNPREDICTABLE>
     aec:	00747361 	rsbseq	r7, r4, r1, ror #6
     af0:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     af4:	55504600 	ldrbpl	r4, [r0, #-1536]	; 0xfffffa00
     af8:	5152495f 	cmppl	r2, pc, asr r9
     afc:	4148006e 	cmpmi	r8, lr, rrx
     b00:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     b04:	554f454d 	strbpl	r4, [pc, #-1357]	; 5bf <.debug_str+0x5bf>
     b08:	48410054 	stmdami	r1, {r2, r4, r6}^
     b0c:	52435342 	subpl	r5, r3, #134217729	; 0x8000001
     b10:	6c616800 	stclvs	8, cr6, [r1], #-0
     b14:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     b18:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
     b1c:	5f007469 	svcpl	0x00007469
     b20:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
     b24:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     b28:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
     b2c:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     b30:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     b34:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     b38:	5f006e51 	svcpl	0x00006e51
     b3c:	6b656573 	blvs	195a110 <SCB_EnableICache+0x195a110>
     b40:	73797300 	cmnvc	r9, #0, 6
     b44:	6b636974 	blvs	18db11c <SCB_EnableICache+0x18db11c>
     b48:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
     b4c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     b50:	6f687300 	svcvs	0x00687300
     b54:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
     b58:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     b5c:	2064656e 	rsbcs	r6, r4, lr, ror #10
     b60:	00746e69 	rsbseq	r6, r4, r9, ror #28
     b64:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     b68:	63206465 			; <UNDEFINED> instruction: 0x63206465
     b6c:	00726168 	rsbseq	r6, r2, r8, ror #2
     b70:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     b74:	3158525f 	cmpcc	r8, pc, asr r2
     b78:	5152495f 	cmppl	r2, pc, asr r9
     b7c:	5353006e 	cmppl	r3, #110	; 0x6e
     b80:	00524743 	subseq	r4, r2, r3, asr #14
     b84:	534c4c50 	movtpl	r4, #52304	; 0xcc50
     b88:	46434941 	strbmi	r4, [r3], -r1, asr #18
     b8c:	43005247 	movwmi	r5, #583	; 0x247
     b90:	5f324e41 	svcpl	0x00324e41
     b94:	5f305852 	svcpl	0x00305852
     b98:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b9c:	72665f00 	rsbvc	r5, r6, #0, 30
     ba0:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
     ba4:	48007473 	stmdami	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
     ba8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; bb0 <.debug_str+0xbb0>
     bac:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     bb0:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     bb4:	4f42415f 	svcmi	0x0042415f
     bb8:	54005452 	strpl	r5, [r0], #-1106	; 0xfffffbae
     bbc:	5f364d49 	svcpl	0x00364d49
     bc0:	5f434144 	svcpl	0x00434144
     bc4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     bc8:	42435300 	submi	r5, r3, #0, 6
     bcc:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     bd0:	50470065 	subpl	r0, r7, r5, rrx
     bd4:	545f4f49 	ldrbpl	r4, [pc], #-3913	; bdc <.debug_str+0xbdc>
     bd8:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     bdc:	5f006665 	svcpl	0x00006665
     be0:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
     be4:	53007465 	movwpl	r7, #1125	; 0x465
     be8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     bec:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     bf0:	6f6c4365 	svcvs	0x006c4365
     bf4:	44006b63 	strmi	r6, [r0], #-2915	; 0xfffff49d
     bf8:	5f31414d 	svcpl	0x0031414d
     bfc:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     c00:	5f376d61 	svcpl	0x00376d61
     c04:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c08:	414d4400 	cmpmi	sp, r0, lsl #8
     c0c:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     c10:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
     c14:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     c18:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
     c1c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; c24 <.debug_str+0xc24>
     c20:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     c24:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     c28:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     c2c:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     c30:	735f5f00 	cmpvc	pc, #0, 30
     c34:	00667562 	rsbeq	r7, r6, r2, ror #10
     c38:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     c3c:	7043314d 	subvc	r3, r3, sp, asr #2
     c40:	6143746c 	cmpvs	r3, ip, ror #8
     c44:	61626c6c 	cmnvs	r2, ip, ror #24
     c48:	5f006b63 	svcpl	0x00006b63
     c4c:	6134366c 	teqvs	r4, ip, ror #12
     c50:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     c54:	50485300 	subpl	r5, r8, r0, lsl #6
     c58:	54440052 	strbpl	r0, [r4], #-82	; 0xffffffae
     c5c:	52434d43 	subpl	r4, r3, #4288	; 0x10c0
     c60:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     c64:	4d003052 	stcmi	0, cr3, [r0, #-328]	; 0xfffffeb8
     c68:	31524656 	cmpcc	r2, r6, asr r6
     c6c:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     c70:	48003252 	stmdami	r0, {r1, r4, r6, r9, ip, sp}
     c74:	545f4c41 	ldrbpl	r4, [pc], #-3137	; c7c <.debug_str+0xc7c>
     c78:	5f4b4349 	svcpl	0x004b4349
     c7c:	51455246 	cmppl	r5, r6, asr #4
     c80:	4645445f 			; <UNDEFINED> instruction: 0x4645445f
     c84:	544c5541 	strbpl	r5, [ip], #-1345	; 0xfffffabf
     c88:	4c4c5000 	marmi	acc0, r5, ip
     c8c:	43533249 	cmpmi	r3, #-1879048188	; 0x90000004
     c90:	00524746 	subseq	r4, r2, r6, asr #14
     c94:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
     c98:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     c9c:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     ca0:	775f5f00 	ldrbvc	r5, [pc, -r0, lsl #30]
     ca4:	5f006863 	svcpl	0x00006863
     ca8:	72736377 	rsbsvc	r6, r3, #-603979775	; 0xdc000001
     cac:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
     cb0:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
     cb4:	00657461 	rsbeq	r7, r5, r1, ror #8
     cb8:	5349534c 	movtpl	r5, #37708	; 0x934c
     cbc:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     cc0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     cc4:	414d445f 	cmpmi	sp, pc, asr r4
     cc8:	6174535f 	cmnvs	r4, pc, asr r3
     ccc:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
     cd0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     cd4:	49540066 	ldmdbmi	r4, {r1, r2, r5, r6}^
     cd8:	545f384d 	ldrbpl	r3, [pc], #-2125	; ce0 <.debug_str+0xce0>
     cdc:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     ce0:	545f4d4f 	ldrbpl	r4, [pc], #-3407	; ce8 <.debug_str+0xce8>
     ce4:	34314d49 	ldrtcc	r4, [r1], #-3401	; 0xfffff2b7
     ce8:	5152495f 	cmppl	r2, pc, asr r9
     cec:	5355006e 	cmppl	r5, #110	; 0x6e
     cf0:	5f545241 	svcpl	0x00545241
     cf4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     cf8:	00666544 	rsbeq	r6, r6, r4, asr #10
     cfc:	44534644 	ldrbmi	r4, [r3], #-1604	; 0xfffff9bc
     d00:	465f314d 	ldrbmi	r3, [pc], -sp, asr #2
     d04:	5f33544c 	svcpl	0x0033544c
     d08:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d0c:	73636300 	cmnvc	r3, #0, 6
     d10:	00726469 	rsbseq	r6, r2, r9, ror #8
     d14:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     d18:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     d1c:	63775f00 	cmnvs	r7, #0, 30
     d20:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
     d24:	6174735f 	cmnvs	r4, pc, asr r3
     d28:	43006574 	movwmi	r6, #1396	; 0x574
     d2c:	44495343 	strbmi	r5, [r9], #-835	; 0xfffffcbd
     d30:	48410052 	stmdami	r1, {r1, r4, r6}^
     d34:	53523342 	cmppl	r2, #134217729	; 0x8000001
     d38:	53005254 	movwpl	r5, #596	; 0x254
     d3c:	00524954 	subseq	r4, r2, r4, asr r9
     d40:	626f695f 	rsbvs	r6, pc, #1556480	; 0x17c000
     d44:	655f0073 	ldrbvs	r0, [pc, #-115]	; cd9 <.debug_str+0xcd9>
     d48:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
     d4c:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     d50:	42504100 	subsmi	r4, r0, #0, 2
     d54:	45504c31 	ldrbmi	r4, [r0, #-3121]	; 0xfffff3cf
     d58:	5f00524e 	svcpl	0x0000524e
     d5c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     d60:	725f0066 	subsvc	r0, pc, #102	; 0x66
     d64:	5f646e61 	svcpl	0x00646e61
     d68:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     d6c:	4b434c00 	blmi	10d3d74 <SCB_EnableICache+0x10d3d74>
     d70:	69750052 	ldmdbvs	r5!, {r1, r4, r6}^
     d74:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
     d78:	4400745f 	strmi	r7, [r0], #-1119	; 0xfffffba1
     d7c:	5f32414d 	svcpl	0x0032414d
     d80:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     d84:	5f316d61 	svcpl	0x00316d61
     d88:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d8c:	616d5f00 	cmnvs	sp, r0, lsl #30
     d90:	73647778 	cmnvc	r4, #120, 14	; 0x1e00000
     d94:	72655000 	rsbvc	r5, r5, #0
     d98:	49687069 	stmdbmi	r8!, {r0, r3, r5, r6, ip, sp, lr}^
     d9c:	5500636e 	strpl	r6, [r0, #-878]	; 0xfffffc92
     da0:	5f545241 	svcpl	0x00545241
     da4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     da8:	7954656c 	ldmdbvc	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
     dac:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     db0:	43520066 	cmpmi	r2, #102	; 0x66
     db4:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
     db8:	696e496b 	stmdbvs	lr!, {r0, r1, r3, r5, r6, r8, fp, lr}^
     dbc:	70795474 	rsbsvc	r5, r9, r4, ror r4
     dc0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     dc4:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     dc8:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     dcc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     dd0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     dd4:	756f6420 	strbvc	r6, [pc, #-1056]!	; 9bc <.debug_str+0x9bc>
     dd8:	00656c62 	rsbeq	r6, r5, r2, ror #24
     ddc:	6d5f796d 	vldrvs.16	s15, [pc, #-218]	; d0a <.debug_str+0xd0a>	; <UNPREDICTABLE>
     de0:	44006773 	strmi	r6, [r0], #-1907	; 0xfffff88d
     de4:	5f32414d 	svcpl	0x0032414d
     de8:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     dec:	5f306d61 	svcpl	0x00306d61
     df0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     df4:	69725000 	ldmdbvs	r2!, {ip, lr}^
     df8:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     dfc:	6f6c0079 	svcvs	0x006c0079
     e00:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
     e04:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     e08:	2064656e 	rsbcs	r6, r4, lr, ror #10
     e0c:	00746e69 	rsbseq	r6, r4, r9, ror #28
     e10:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     e14:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     e18:	4d006e51 	stcmi	14, cr6, [r0, #-324]	; 0xfffffebc
     e1c:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     e20:	534d0063 	movtpl	r0, #53347	; 0xd063
     e24:	72694642 	rsbvc	r4, r9, #69206016	; 0x4200000
     e28:	58007473 	stmdapl	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
     e2c:	4d726566 	cfldr64mi	mvdx6, [r2, #-408]!	; 0xfffffe68
     e30:	6c614831 	stclvs	8, cr4, [r1], #-196	; 0xffffff3c
     e34:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
     e38:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     e3c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     e40:	635f006b 	cmpvs	pc, #107	; 0x6b
     e44:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
     e48:	45534c00 	ldrbmi	r4, [r3, #-3072]	; 0xfffff400
     e4c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     e50:	68630065 	stmdavs	r3!, {r0, r2, r5, r6}^
     e54:	55007261 	strpl	r7, [r0, #-609]	; 0xfffffd9f
     e58:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     e5c:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     e60:	4d006e51 	stcmi	14, cr6, [r0, #-324]	; 0xfffffebc
     e64:	61446d65 	cmpvs	r4, r5, ror #26
     e68:	6c416174 	stfvse	f6, [r1], {116}	; 0x74
     e6c:	6d6e6769 	stclvs	7, cr6, [lr, #-420]!	; 0xfffffe5c
     e70:	00746e65 	rsbseq	r6, r4, r5, ror #28
     e74:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
     e78:	614d0065 	cmpvs	sp, r5, rrx
     e7c:	41006b73 	tstmi	r0, r3, ror fp
     e80:	72504250 	subsvc	r4, r0, #80, 4
     e84:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
     e88:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     e8c:	44505300 	ldrbmi	r5, [r0], #-768	; 0xfffffd00
     e90:	525f4649 	subspl	r4, pc, #76546048	; 0x4900000
     e94:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
     e98:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     e9c:	74534553 	ldrbvc	r4, [r3], #-1363	; 0xfffffaad
     ea0:	00657461 	rsbeq	r7, r5, r1, ror #8
     ea4:	4344544c 	movtmi	r5, #17484	; 0x444c
     ea8:	5152495f 	cmppl	r2, pc, asr r9
     eac:	5355006e 	cmppl	r5, #110	; 0x6e
     eb0:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
     eb4:	5152495f 	cmppl	r2, pc, asr r9
     eb8:	4c43006e 	mcrrmi	0, 6, r0, r3, cr14
     ebc:	00524449 	subseq	r4, r2, r9, asr #8
     ec0:	6769425f 			; <UNDEFINED> instruction: 0x6769425f
     ec4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     ec8:	35495053 	strbcc	r5, [r9, #-83]	; 0xffffffad
     ecc:	5152495f 	cmppl	r2, pc, asr r9
     ed0:	6176006e 	cmnvs	r6, lr, rrx
     ed4:	4900336c 	stmdbmi	r0, {r2, r3, r5, r6, r8, r9, ip, sp}
     ed8:	5f314332 	svcpl	0x00314332
     edc:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     ee0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ee4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     ee8:	52495f38 	subpl	r5, r9, #56, 30	; 0xe0
     eec:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     ef0:	5f324332 	svcpl	0x00324332
     ef4:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     ef8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     efc:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     f00:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     f04:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f08:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     f0c:	30746978 	rsbscc	r6, r4, r8, ror r9
     f10:	44454c00 	strbmi	r4, [r5], #-3072	; 0xfffff400
     f14:	454c0031 	strbmi	r0, [ip, #-49]	; 0xffffffcf
     f18:	49003244 	stmdbmi	r0, {r2, r6, r9, ip, sp}
     f1c:	5f334332 	svcpl	0x00334332
     f20:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     f24:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f28:	34433249 	strbcc	r3, [r3], #-585	; 0xfffffdb7
     f2c:	5f56455f 	svcpl	0x0056455f
     f30:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f34:	72615000 	rsbvc	r5, r1, #0
     f38:	00797469 	rsbseq	r7, r9, r9, ror #8
     f3c:	34495053 	strbcc	r5, [r9], #-83	; 0xffffffad
     f40:	5152495f 	cmppl	r2, pc, asr r9
     f44:	4148006e 	cmpmi	r8, lr, rrx
     f48:	74535f4c 	ldrbvc	r5, [r3], #-3916	; 0xfffff0b4
     f4c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     f50:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     f54:	00666544 	rsbeq	r6, r6, r4, asr #10
     f58:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     f5c:	43435200 	movtmi	r5, #12800	; 0x3200
     f60:	6b6c435f 	blvs	1b11ce4 <SCB_EnableICache+0x1b11ce4>
     f64:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     f68:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     f6c:	5f007463 	svcpl	0x00007463
     f70:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
     f74:	5f657461 	svcpl	0x00657461
     f78:	00727265 	rsbseq	r7, r2, r5, ror #4
     f7c:	334e4143 	movtcc	r4, #57667	; 0xe143
     f80:	3158525f 	cmpcc	r8, pc, asr r2
     f84:	5152495f 	cmppl	r2, pc, asr r9
     f88:	4155006e 	cmpmi	r5, lr, rrx
     f8c:	5f375452 	svcpl	0x00375452
     f90:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f94:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     f98:	5f53485f 	svcpl	0x0053485f
     f9c:	5f315045 	svcpl	0x00315045
     fa0:	5f54554f 	svcpl	0x0054554f
     fa4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     fa8:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     fac:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     fb0:	52006e51 	andpl	r6, r0, #1296	; 0x510
     fb4:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
     fb8:	7a695372 	bvc	1a55d88 <SCB_EnableICache+0x1a55d88>
     fbc:	41430065 	cmpmi	r3, r5, rrx
     fc0:	525f334e 	subspl	r3, pc, #939524097	; 0x38000001
     fc4:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     fc8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fcc:	706d695f 	rsbvc	r6, sp, pc, asr r9
     fd0:	5f657275 	svcpl	0x00657275
     fd4:	00727470 	rsbseq	r7, r2, r0, ror r4
     fd8:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     fdc:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     fe0:	74735f74 	ldrbtvc	r5, [r3], #-3956	; 0xfffff08c
     fe4:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
     fe8:	6c625f00 	stclvs	15, cr5, [r2], #-0
     fec:	7a69736b 	bvc	1a5dda0 <SCB_EnableICache+0x1a5dda0>
     ff0:	755f0065 	ldrbvc	r0, [pc, #-101]	; f93 <.debug_str+0xf93>
     ff4:	00667562 	rsbeq	r7, r6, r2, ror #10
     ff8:	43535953 	cmpmi	r3, #1359872	; 0x14c000
     ffc:	6f534b4c 	svcvs	0x00534b4c
    1000:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
    1004:	626d5f00 	rsbvs	r5, sp, #0, 30
    1008:	5f6e656c 	svcpl	0x006e656c
    100c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    1010:	5f5f0065 	svcpl	0x005f0065
    1014:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
    1018:	5f5f0065 	svcpl	0x005f0065
    101c:	61636f6c 	cmnvs	r3, ip, ror #30
    1020:	745f656c 	ldrbvc	r6, [pc], #-1388	; 1028 <.debug_str+0x1028>
    1024:	43454300 	movtmi	r4, #21248	; 0x5300
    1028:	5152495f 	cmppl	r2, pc, asr r9
    102c:	4148006e 	cmpmi	r8, lr, rrx
    1030:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1034:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
    1038:	5f455441 	svcpl	0x00455441
    103c:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
    1040:	41550059 	cmpmi	r5, r9, asr r0
    1044:	5f355452 	svcpl	0x00355452
    1048:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    104c:	635f5f00 	cmpvs	pc, #0, 30
    1050:	6e61656c 	cdpvs	5, 6, cr6, cr1, cr12, {3}
    1054:	44007075 	strmi	r7, [r0], #-117	; 0xffffff8b
    1058:	5f31414d 	svcpl	0x0031414d
    105c:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    1060:	5f336d61 	svcpl	0x00336d61
    1064:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1068:	414d4400 	cmpmi	sp, r0, lsl #8
    106c:	495f4432 	ldmdbmi	pc, {r1, r4, r5, sl, lr}^	; <UNPREDICTABLE>
    1070:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1074:	434c4c50 	movtmi	r4, #52304	; 0xcc50
    1078:	00524746 	subseq	r4, r2, r6, asr #14
    107c:	52534641 	subspl	r4, r3, #68157440	; 0x4100000
    1080:	70665f00 	rsbvc	r5, r6, r0, lsl #30
    1084:	745f736f 	ldrbvc	r7, [pc], #-879	; 108c <.debug_str+0x108c>
    1088:	61684300 	cmnvs	r8, r0, lsl #6
    108c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    1090:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
    1094:	4900656c 	stmdbmi	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    1098:	46415f44 	strbmi	r5, [r1], -r4, asr #30
    109c:	61760052 	cmnvs	r6, r2, asr r0
    10a0:	7600306c 	strvc	r3, [r0], -ip, rrx
    10a4:	00316c61 	eorseq	r6, r1, r1, ror #24
    10a8:	326c6176 	rsbcc	r6, ip, #-2147483619	; 0x8000001d
    10ac:	414d4400 	cmpmi	sp, r0, lsl #8
    10b0:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    10b4:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    10b8:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    10bc:	5f006e51 	svcpl	0x00006e51
    10c0:	4946735f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    10c4:	6400454c 	strvs	r4, [r0], #-1356	; 0xfffffab4
    10c8:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
    10cc:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
    10d0:	4800736e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
    10d4:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 10dc <.debug_str+0x10dc>
    10d8:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    10dc:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    10e0:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
    10e4:	4800524f 	stmdami	r0, {r0, r1, r2, r3, r6, r9, ip, lr}
    10e8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 10f0 <.debug_str+0x10f0>
    10ec:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    10f0:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
    10f4:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
    10f8:	41480059 	qdaddmi	r0, r9, r8
    10fc:	52455f4c 	subpl	r5, r5, #76, 30	; 0x130
    1100:	00524f52 	subseq	r4, r2, r2, asr pc
    1104:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
    1108:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    110c:	5f00745f 	svcpl	0x0000745f
    1110:	72655f68 	rsbvc	r5, r5, #104, 30	; 0x1a0
    1114:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
    1118:	5f4c4148 	svcpl	0x004c4148
    111c:	4b434954 	blmi	10d3674 <SCB_EnableICache+0x10d3674>
    1120:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
    1124:	30315f51 	eorscc	r5, r1, r1, asr pc
    1128:	44005a48 	strmi	r5, [r0], #-2632	; 0xfffff5b8
    112c:	5f31414d 	svcpl	0x0031414d
    1130:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    1134:	5f316d61 	svcpl	0x00316d61
    1138:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    113c:	43444200 	movtmi	r4, #16896	; 0x4200
    1140:	43520052 	cmpmi	r2, #82	; 0x52
    1144:	4c505f43 	mrrcmi	15, 4, r5, r0, cr3
    1148:	696e494c 	stmdbvs	lr!, {r2, r3, r6, r8, fp, lr}^
    114c:	70795474 	rsbsvc	r5, r9, r4, ror r4
    1150:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1154:	50555000 	subspl	r5, r5, r0
    1158:	5f005244 	svcpl	0x00005244
    115c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    1160:	745f3233 	ldrbvc	r3, [pc], #-563	; 1168 <.debug_str+0x1168>
    1164:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; 26c <.debug_str+0x26c>
    1168:	33746e69 	cmncc	r4, #1680	; 0x690
    116c:	00745f32 	rsbseq	r5, r4, r2, lsr pc
    1170:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    1174:	48544500 	ldmdami	r4, {r8, sl, lr}^
    1178:	5152495f 	cmppl	r2, pc, asr r9
    117c:	7953006e 	ldmdbvc	r3, {r1, r2, r3, r5, r6}^
    1180:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    1184:	52495f6b 	subpl	r5, r9, #428	; 0x1ac
    1188:	5f006e51 	svcpl	0x00006e51
    118c:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
    1190:	5f006575 	svcpl	0x00006575
    1194:	635f7369 	cmpvs	pc, #-1543503871	; 0xa4000001
    1198:	4c006178 	stfmis	f6, [r0], {120}	; 0x78
    119c:	4d495450 	cfstrdmi	mvd5, [r9, #-320]	; 0xfffffec0
    11a0:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    11a4:	5f006e51 	svcpl	0x00006e51
    11a8:	00733570 	rsbseq	r3, r3, r0, ror r5
    11ac:	314e4143 	cmpcc	lr, r3, asr #2
    11b0:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
    11b4:	5152495f 	cmppl	r2, pc, asr r9
    11b8:	4f4d006e 	svcmi	0x004d006e
    11bc:	00524544 	subseq	r4, r2, r4, asr #10
    11c0:	4d6e6f4e 	stclmi	15, cr6, [lr, #-312]!	; 0xfffffec8
    11c4:	616b7361 	cmnvs	fp, r1, ror #6
    11c8:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    11cc:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    11d0:	006e5152 	rsbeq	r5, lr, r2, asr r1
    11d4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    11d8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    11dc:	45520030 	ldrbmi	r0, [r2, #-48]	; 0xffffffd0
    11e0:	56524553 			; <UNDEFINED> instruction: 0x56524553
    11e4:	00314445 	eorseq	r4, r1, r5, asr #8
    11e8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    11ec:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    11f0:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
    11f4:	56524553 			; <UNDEFINED> instruction: 0x56524553
    11f8:	00334445 	eorseq	r4, r3, r5, asr #8
    11fc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    1200:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    1204:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
    1208:	56524553 			; <UNDEFINED> instruction: 0x56524553
    120c:	00354445 	eorseq	r4, r5, r5, asr #8
    1210:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    1214:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    1218:	45520036 	ldrbmi	r0, [r2, #-54]	; 0xffffffca
    121c:	56524553 			; <UNDEFINED> instruction: 0x56524553
    1220:	00374445 	eorseq	r4, r7, r5, asr #8
    1224:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    1228:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    122c:	41550038 	cmpmi	r5, r8, lsr r0
    1230:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    1234:	65467664 	strbvs	r7, [r6, #-1636]	; 0xfffff99c
    1238:	72757461 	rsbsvc	r7, r5, #1627389952	; 0x61000000
    123c:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1240:	70795474 	rsbsvc	r5, r9, r4, ror r4
    1244:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1248:	54777500 	ldrbtpl	r7, [r7], #-1280	; 0xfffffb00
    124c:	506b6369 	rsbpl	r6, fp, r9, ror #6
    1250:	006f6972 	rsbeq	r6, pc, r2, ror r9	; <UNPREDICTABLE>
    1254:	314d4954 	cmpcc	sp, r4, asr r9
    1258:	5f50555f 	svcpl	0x0050555f
    125c:	314d4954 	cmpcc	sp, r4, asr r9
    1260:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    1264:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
    1268:	46434b43 	strbmi	r4, [r3], -r3, asr #22
    126c:	00315247 	eorseq	r5, r1, r7, asr #4
    1270:	434b4344 	movtmi	r4, #45892	; 0xb344
    1274:	32524746 	subscc	r4, r2, #18350080	; 0x1180000
    1278:	44544c00 	ldrbmi	r4, [r4], #-3072	; 0xfffff400
    127c:	52455f43 	subpl	r5, r5, #268	; 0x10c
    1280:	5152495f 	cmppl	r2, pc, asr r9
    1284:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    1288:	535f3241 	cmppl	pc, #268435460	; 0x10000004
    128c:	61657274 	smcvs	22308	; 0x5724
    1290:	495f346d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
    1294:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1298:	725f796d 	subsvc	r7, pc, #1785856	; 0x1b4000
    129c:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
    12a0:	50430074 	subpl	r0, r3, r4, ror r0
    12a4:	00524341 	subseq	r4, r2, r1, asr #6
    12a8:	5f4d5449 	svcpl	0x004d5449
    12ac:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
    12b0:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    12b4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
    12b8:	6f6c2067 	svcvs	0x006c2067
    12bc:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
    12c0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
    12c4:	2064656e 	rsbcs	r6, r4, lr, ror #10
    12c8:	00746e69 	rsbseq	r6, r4, r9, ror #28
    12cc:	31424841 	cmpcc	r2, r1, asr #16
    12d0:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
    12d4:	78520052 	ldmdavc	r2, {r1, r4, r6}^
    12d8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    12dc:	61770065 	cmnvs	r7, r5, rrx
    12e0:	4e007379 	mcrmi	3, 0, r7, cr0, cr9, {3}
    12e4:	00525444 	subseq	r5, r2, r4, asr #8
    12e8:	6d61675f 	stclvs	7, cr6, [r1, #-380]!	; 0xfffffe84
    12ec:	735f616d 	cmpvc	pc, #1073741851	; 0x4000001b
    12f0:	676e6769 	strbvs	r6, [lr, -r9, ror #14]!
    12f4:	49006d61 	stmdbmi	r0, {r0, r5, r6, r8, sl, fp, sp, lr}
    12f8:	0074696e 	rsbseq	r6, r4, lr, ror #18
    12fc:	73746573 	cmnvc	r4, #482344960	; 0x1cc00000
    1300:	72745300 	rsbsvc	r5, r4, #0, 6
    1304:	426d6165 	rsbmi	r6, sp, #1073741849	; 0x40000019
    1308:	41657361 	cmnmi	r5, r1, ror #6
    130c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    1310:	52007373 	andpl	r7, r0, #-872415231	; 0xcc000001
    1314:	52534978 	subspl	r4, r3, #120, 18	; 0x1e0000
    1318:	55504300 	ldrbpl	r4, [r0, #-768]	; 0xfffffd00
    131c:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    1320:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 1328 <.debug_str+0x1328>
    1324:	466b6369 	strbtmi	r6, [fp], -r9, ror #6
    1328:	54716572 	ldrbtpl	r6, [r1], #-1394	; 0xfffffa8e
    132c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1330:	5f006665 	svcpl	0x00006665
    1334:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
    1338:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    133c:	7275706d 	rsbsvc	r7, r5, #109	; 0x6d
    1340:	74705f65 	ldrbtvc	r5, [r0], #-3941	; 0xfffff09b
    1344:	755f0072 	ldrbvc	r0, [pc, #-114]	; 12da <.debug_str+0x12da>
    1348:	6570736e 	ldrbvs	r7, [r0, #-878]!	; 0xfffffc92
    134c:	69666963 	stmdbvs	r6!, {r0, r1, r5, r6, r8, fp, sp, lr}^
    1350:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
    1354:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
    1358:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
    135c:	5f006f66 	svcpl	0x00006f66
    1360:	4253495f 	subsmi	r4, r3, #1556480	; 0x17c000
    1364:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1368:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    136c:	58455f4f 	stmdapl	r5, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1370:	435f4954 	cmpmi	pc, #84, 18	; 0x150000
    1374:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1378:	006b6361 	rsbeq	r6, fp, r1, ror #6
    137c:	64735f5f 	ldrbtvs	r5, [r3], #-3935	; 0xfffff0a1
    1380:	6e696469 	cdpvs	4, 6, cr6, cr9, cr9, {3}
    1384:	41007469 	tstmi	r0, r9, ror #8
    1388:	4c324250 	lfmmi	f4, 4, [r2], #-320	; 0xfffffec0
    138c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
    1390:	6c665f00 	stclvs	15, cr5, [r6], #-0
    1394:	5f6b636f 	svcpl	0x006b636f
    1398:	32490074 	subcc	r0, r9, #116	; 0x74
    139c:	455f3143 	ldrbmi	r3, [pc, #-323]	; 1261 <.debug_str+0x1261>
    13a0:	52495f52 	subpl	r5, r9, #328	; 0x148
    13a4:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
    13a8:	5f314d49 	svcpl	0x00314d49
    13ac:	5f475254 	svcpl	0x00475254
    13b0:	5f4d4f43 	svcpl	0x004d4f43
    13b4:	314d4954 	cmpcc	sp, r4, asr r9
    13b8:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    13bc:	50006e51 	andpl	r6, r0, r1, asr lr
    13c0:	53646e65 	cmnpl	r4, #1616	; 0x650
    13c4:	52495f56 	subpl	r5, r9, #344	; 0x158
    13c8:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    13cc:	5f324332 	svcpl	0x00324332
    13d0:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
    13d4:	006e5152 	rsbeq	r5, lr, r2, asr r1
    13d8:	33433249 	movtcc	r3, #12873	; 0x3249
    13dc:	5f52455f 	svcpl	0x0052455f
    13e0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    13e4:	43324900 	teqmi	r2, #0, 18
    13e8:	52455f34 	subpl	r5, r5, #52, 30	; 0xd0
    13ec:	5152495f 	cmppl	r2, pc, asr r9
    13f0:	6f6c006e 	svcvs	0x006c006e
    13f4:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
    13f8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
    13fc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1400:	616c665f 	cmnvs	ip, pc, asr r6
    1404:	00327367 	eorseq	r7, r2, r7, ror #6
    1408:	4d494344 	stclmi	3, cr4, [r9, #-272]	; 0xfffffef0
    140c:	00434156 	subeq	r4, r3, r6, asr r1
    1410:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    1414:	00656c61 	rsbeq	r6, r5, r1, ror #24
    1418:	6f747541 	svcvs	0x00747541
    141c:	64756142 	ldrbtvs	r6, [r5], #-322	; 0xfffffebe
    1420:	65746152 	ldrbvs	r6, [r4, #-338]!	; 0xfffffeae
    1424:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    1428:	4400656c 	strmi	r6, [r0], #-1388	; 0xfffffa94
    142c:	57534943 	ldrbpl	r4, [r3, -r3, asr #18]
    1430:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
    1434:	00632e6e 	rsbeq	r2, r3, lr, ror #28
    1438:	50424841 	subpl	r4, r2, r1, asr #16
    143c:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    1440:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
    1444:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
    1448:	52464d5f 	subpl	r4, r6, #6080	; 0x17c0
    144c:	555f5f00 	ldrbpl	r5, [pc, #-3840]	; 554 <.debug_str+0x554>
    1450:	5f545241 	svcpl	0x00545241
    1454:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1458:	7954656c 	ldmdbvc	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    145c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1460:	61500066 	cmpvs	r0, r6, rrx
    1464:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1468:	54777500 	ldrbtpl	r7, [r7], #-1280	; 0xfffffb00
    146c:	466b6369 	strbtmi	r6, [fp], -r9, ror #6
    1470:	00716572 	rsbseq	r6, r1, r2, ror r5
    1474:	5f525750 	svcpl	0x00525750
    1478:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    147c:	00666544 	rsbeq	r6, r6, r4, asr #10
    1480:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
    1484:	5f50555f 	svcpl	0x0050555f
    1488:	314d4954 	cmpcc	sp, r4, asr r9
    148c:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    1490:	58006e51 	stmdapl	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    1494:	45726566 	ldrbmi	r6, [r2, #-1382]!	; 0xfffffa9a
    1498:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    149c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    14a0:	6b636162 	blvs	18d9a30 <SCB_EnableICache+0x18d9a30>
    14a4:	41464200 	mrsmi	r4, (UNDEF: 102)
    14a8:	53670052 	cmnpl	r7, #82	; 0x52
    14ac:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    14b0:	465f5f00 	ldrbmi	r5, [pc], -r0, lsl #30
    14b4:	00454c49 	subeq	r4, r5, r9, asr #24
    14b8:	74736e49 	ldrbtvc	r6, [r3], #-3657	; 0xfffff1b7
    14bc:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    14c0:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
    14c4:	50006e67 	andpl	r6, r0, r7, ror #28
    14c8:	006c6c75 	rsbeq	r6, ip, r5, ror ip
    14cc:	31525343 	cmpcc	r2, r3, asr #6
    14d0:	52534300 	subspl	r4, r3, #0, 6
    14d4:	5f5f0032 	svcpl	0x005f0032
    14d8:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 1310 <.debug_str+0x1310>
    14dc:	6d006e69 	stcvs	14, cr6, [r0, #-420]	; 0xfffffe5c
    14e0:	006e6961 	rsbeq	r6, lr, r1, ror #18
    14e4:	5f434d46 	svcpl	0x00434d46
    14e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    14ec:	44565000 	ldrbmi	r5, [r6], #-0
    14f0:	5152495f 	cmppl	r2, pc, asr r9
    14f4:	6e75006e 	cdpvs	0, 7, cr0, cr5, cr14, {3}
    14f8:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
    14fc:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
    1500:	5f00746e 	svcpl	0x0000746e
    1504:	00383472 	eorseq	r3, r8, r2, ror r4
    1508:	4d4d4453 	cfstrdmi	mvd4, [sp, #-332]	; 0xfffffeb4
    150c:	495f3243 	ldmdbmi	pc, {r0, r1, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    1510:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1514:	426d654d 	rsbmi	r6, sp, #322961408	; 0x13400000
    1518:	74737275 	ldrbtvc	r7, [r3], #-629	; 0xfffffd8b
    151c:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
    1520:	43005241 	movwmi	r5, #577	; 0x241
    1524:	00524341 	subseq	r4, r2, r1, asr #6
    1528:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
    152c:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
    1530:	43490074 	movtmi	r0, #36980	; 0x9074
    1534:	41564d49 	cmpmi	r6, r9, asr #26
    1538:	49540055 	ldmdbmi	r4, {r0, r2, r4, r6}^
    153c:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
    1540:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1544:	5f495344 	svcpl	0x00495344
    1548:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    154c:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
    1550:	6c614872 	stclvs	8, cr4, [r1], #-456	; 0xfffffe38
    1554:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    1558:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    155c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1560:	725f006b 	subsvc	r0, pc, #107	; 0x6b
    1564:	00646165 	rsbeq	r6, r4, r5, ror #2
    1568:	505f4449 	subspl	r4, pc, r9, asr #8
    156c:	53005246 	movwpl	r5, #582	; 0x246
    1570:	434d4d44 	movtmi	r4, #56644	; 0xdd44
    1574:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1578:	5f006e51 	svcpl	0x00006e51
    157c:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
    1580:	43003834 	movwmi	r3, #2100	; 0x834
    1584:	5f324e41 	svcpl	0x00324e41
    1588:	5f454353 	svcpl	0x00454353
    158c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1590:	42484100 	submi	r4, r8, #0, 2
    1594:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
    1598:	42484100 	submi	r4, r8, #0, 2
    159c:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
    15a0:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
    15a4:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    15a8:	006e5152 	rsbeq	r5, lr, r2, asr r1
    15ac:	5f4c4148 	svcpl	0x004c4148
    15b0:	4b434f4c 	blmi	10d52e8 <SCB_EnableICache+0x10d52e8>
    15b4:	48004445 	stmdami	r0, {r0, r2, r6, sl, lr}
    15b8:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 15c0 <.debug_str+0x15c0>
    15bc:	5f4b4349 	svcpl	0x004b4349
    15c0:	51455246 	cmppl	r5, r6, asr #4
    15c4:	3030315f 	eorscc	r3, r0, pc, asr r1
    15c8:	2f005a48 	svccs	0x00005a48
    15cc:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    15d0:	6f626c2f 	svcvs	0x00626c2f
    15d4:	6e616467 	cdpvs	4, 6, cr6, cr1, cr7, {3}
    15d8:	672f766f 	strvs	r7, [pc, -pc, ror #12]!
    15dc:	705f7469 	subsvc	r7, pc, r9, ror #8
    15e0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    15e4:	2f737463 	svccs	0x00737463
    15e8:	5f62616c 	svcpl	0x0062616c
    15ec:	5f727075 	svcpl	0x00727075
    15f0:	5f637273 	svcpl	0x00637273
    15f4:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    15f8:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
    15fc:	7270755f 	rsbsvc	r7, r0, #398458880	; 0x17c00000
    1600:	675f345f 			; <UNDEFINED> instruction: 0x675f345f
    1604:	302f6363 	eorcc	r6, pc, r3, ror #6
    1608:	2f375f34 	svccs	0x00375f34
    160c:	73754200 	cmnvc	r5, #0, 4
    1610:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
    1614:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
    1618:	Address 0x0000000000001618 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
{
   0:	43434700 	movtmi	r4, #14080	; 0x3700
  __ASM volatile ("dsb 0xF":::"memory");
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
  __ASM volatile ("isb 0xF":::"memory");
   8:	5420554e 	strtpl	r5, [r0], #-1358	; 0xfffffab2
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
   c:	736c6f6f 	cmnvc	ip, #444	; 0x1bc
  10:	726f6620 	rsbvc	r6, pc, #32, 12	; 0x2000000
  __ASM volatile ("dsb 0xF":::"memory");
  14:	6d724120 	ldfvse	f4, [r2, #-128]!	; 0xffffff80
  __ASM volatile ("isb 0xF":::"memory");
  18:	626d4520 	rsbvs	r4, sp, #32, 10	; 0x8000000
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
  20:	72502064 	subsvc	r2, r0, #100	; 0x64
  24:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
  __ASM volatile ("dsb 0xF":::"memory");
  28:	73726f73 	cmnvc	r2, #460	; 0x1cc
  __ASM volatile ("isb 0xF":::"memory");
  2c:	322d3820 	eorcc	r3, sp, #32, 16	; 0x200000
}
  30:	2d383130 	ldfcss	f3, [r8, #-192]!	; 0xffffff40
  34:	6d2d3471 	cfstrsvs	mvf3, [sp, #-452]!	; 0xfffffe3c
  38:	726f6a61 	rsbvc	r6, pc, #397312	; 0x61000
  3c:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
{
  40:	20312e32 	eorscs	r2, r1, r2, lsr lr
  44:	38313032 	ldmdacc	r1!, {r1, r4, r5, ip, sp}
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  48:	33313231 	teqcc	r1, #268435459	; 0x10000003
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  __ASM volatile ("dsb 0xF":::"memory");
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    ccsidr = SCB->CCSIDR;
  54:	5b202965 	blpl	80a5f0 <SCB_EnableICache+0x80a5f0>
  58:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  5c:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  60:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  64:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  68:	6f697369 	svcvs	0x00697369
  6c:	3632206e 	ldrtcc	r2, [r2], -lr, rrx
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  70:	34373037 	ldrtcc	r3, [r7], #-55	; 0xffffffc9
  74:	Address 0x0000000000000074 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
{
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  __ASM volatile ("isb 0xF":::"memory");
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	00000040 	andeq	r0, r0, r0, asr #32
  20:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  24:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
  28:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
  __ASM volatile ("isb 0xF":::"memory");
  2c:	00000ec7 	andeq	r0, r0, r7, asr #29
}
  30:	00000024 	andeq	r0, r0, r4, lsr #32
	...
  3c:	00000080 	andeq	r0, r0, r0, lsl #1
{
  40:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  44:	180e4101 	stmdane	lr, {r0, r8, lr}
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  48:	77070d41 	strvc	r0, [r7, -r1, asr #26]
  4c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
  __ASM volatile ("dsb 0xF":::"memory");
  50:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
    ccsidr = SCB->CCSIDR;
  54:	00000000 	andeq	r0, r0, r0
  58:	00000018 	andeq	r0, r0, r8, lsl r0
	...
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  64:	0000000c 	andeq	r0, r0, ip
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
  74:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  80:	000000d8 	ldrdeq	r0, [r0], -r8
      } while (ways-- != 0U);
  84:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  88:	41018e02 	tstmi	r1, r2, lsl #28
  8c:	0d41600e 	stcleq	0, cr6, [r1, #-56]	; 0xffffffc8
    } while(sets-- != 0U);
  90:	0e630207 	cdpeq	2, 6, cr0, cr3, cr7, {0}
  94:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
  98:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  a4:	0000000e 	andeq	r0, r0, lr
  a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  __ASM volatile ("isb 0xF":::"memory");
  ac:	41018e02 	tstmi	r1, r2, lsl #28
}
  b0:	0000070d 	andeq	r0, r0, sp, lsl #14
  b4:	00000020 	andeq	r0, r0, r0, lsr #32
	...
void systick_handler(void){
  c0:	0000001e 	andeq	r0, r0, lr, lsl r0
	HAL_IncTick();
  c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
}
  c8:	41018e02 	tstmi	r1, r2, lsl #28
void hal_clocks_init(void){
  cc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  d0:	080e4a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, lr}
  HAL_StatusTypeDef  ret = HAL_OK;
  d4:	000d0d41 	andeq	r0, sp, r1, asr #26
  __HAL_RCC_PWR_CLK_ENABLE();
  d8:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  e4:	00000048 	andeq	r0, r0, r8, asr #32
  e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  ec:	41018e02 	tstmi	r1, r2, lsl #28
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  f0:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
  f4:	080e5b07 	stmdaeq	lr, {r0, r1, r2, r8, r9, fp, ip, lr}
  f8:	000d0d41 	andeq	r0, sp, r1, asr #26
  fc:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 108:	0000007c 	andeq	r0, r0, ip, ror r0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 10c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 110:	41018e02 	tstmi	r1, r2, lsl #28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 114:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 118:	080e7507 	stmdaeq	lr, {r0, r1, r2, r8, sl, ip, sp, lr}
  RCC_OscInitStruct.PLL.PLLM = 25;
 11c:	000d0d41 	andeq	r0, sp, r1, asr #26
  RCC_OscInitStruct.PLL.PLLN = 432;
 120:	00000018 	andeq	r0, r0, r8, lsl r0
	...
  RCC_OscInitStruct.PLL.PLLQ = 9;
 12c:	00000044 	andeq	r0, r0, r4, asr #32
  RCC_OscInitStruct.PLL.PLLR = 7;
 130:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 134:	41018e02 	tstmi	r1, r2, lsl #28
 138:	0000070d 	andeq	r0, r0, sp, lsl #14
 13c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
  if(ret != HAL_OK){
 148:	00000110 	andeq	r0, r0, r0, lsl r1
  ret = HAL_PWREx_EnableOverDrive();
 14c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 150:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 154:	680e4101 	stmdavs	lr, {r0, r8, lr}
  if(ret != HAL_OK){
 158:	00070d41 	andeq	r0, r7, r1, asr #26

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
{
   0:	00003141 	andeq	r3, r0, r1, asr #2
  __ASM volatile ("dsb 0xF":::"memory");
   4:	61656100 	cmnvs	r5, r0, lsl #2
  __ASM volatile ("isb 0xF":::"memory");
   8:	01006962 	tsteq	r0, r2, ror #18
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
   c:	00000027 	andeq	r0, r0, r7, lsr #32
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  __ASM volatile ("dsb 0xF":::"memory");
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc
  __ASM volatile ("isb 0xF":::"memory");
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  1c:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  __ASM volatile ("dsb 0xF":::"memory");
  28:	011a0119 	tsteq	sl, r9, lsl r1
  __ASM volatile ("isb 0xF":::"memory");
  2c:	061e011c 			; <UNDEFINED> instruction: 0x061e011c
}
  30:	Address 0x0000000000000030 is out of bounds.

